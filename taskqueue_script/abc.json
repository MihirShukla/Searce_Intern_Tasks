{
  "happierWork\\app\\common\\py\\common_utils.py": [
    {
      "791": "taskqueue.add(url='/notifications/user-preferences-task', method=\"PUT\", countdown=int(6),payload=json.dumps(updatedJson))"
    },
    {
      "800": "taskqueue.add(url=trigger_url, method=trigger_method, params=input_params, countdown=trigger_countdown)"
    },
    {
      "804": "taskqueue.add(url=trigger_url, method=trigger_method, payload=input_payload, countdown=trigger_countdown)"
    },
    {
      "807": "taskqueue.add(url=trigger_url, method=trigger_method, countdown=trigger_countdown)"
    },
    {
      "1670": "taskqueue.add(url=\"/request/autoApproveReq/docGenerate\", method=\"POST\", countdown=int(6), payload=json.dumps(locationAutoApproveDict))"
    },
    {
      "1700": "taskqueue.add(url=\"/request/autoApproveReq/docGenerate\", method=\"POST\", countdown=int(6), payload=json.dumps(desigAutoApproveDict))"
    },
    {
      "1769": "#~ taskqueue.add(url=\"/org/onoffboardteammember?oldManager=\"+user_obj.Manager+\"&newManager=\"+field_values[0].lower()+\"&reportee=\"+user_obj.userEmail,method=\"GET\",countdown=30)"
    },
    {
      "1809": "taskqueue.add(url='/time-and-attendance/intimationnoncompliance',params={\"EffectiveFrom\":given_wef,\"flag\":\"Change Reporting Manager\",\"emailId\":gcu,\"initiatedFor\":for_user},method=\"POST\",countdown=30)"
    },
    {
      "1812": "taskqueue.add(url=\"/request/doc-permission-syncer\",method=\"POST\", payload=json.dumps(tsk_json))"
    },
    {
      "1839": "taskqueue.add(url='/time-and-attendance/intimationnoncompliance',params={\"EffectiveFrom\":given_wef,\"flag\":flag,\"emailId\":gcu,\"initiatedFor\":for_user},method=\"POST\",countdown=30)"
    },
    {
      "1854": "taskqueue.add(url='/admin/api/v1/users/watch',params={\"syncFrom\":\"HAPPIERWORK\",\"user\":user_obj.uniqueId},method=\"PUT\",countdown=60)"
    },
    {
      "1926": "taskqueue.add(url='/time-and-attendance/intimationnoncompliance',params={\"EffectiveFrom\":given_wef,\"flag\":\"Change Shift Timing\",\"emailId\":gcu,\"initiatedFor\":for_user},method=\"POST\",countdown=30)"
    },
    {
      "1932": "taskqueue.add(url='/time-and-attendance/intimationnoncompliance',params={\"EffectiveFrom\":given_wef,\"flag\":\"Change Weekly Off\",\"emailId\":gcu,\"initiatedFor\":for_user},method=\"POST\",countdown=30)"
    },
    {
      "1980": "taskqueue.add(url='/reqlist/scheduleconf', method=\"POST\", countdown=60,params={\"userEmail\":for_user,\"cronDate\":initiationDateStr})"
    },
    {
      "2041": "taskqueue.add(url='/users/move-snapshot', method='POST',params={\"userList\":json.dumps([user_obj.userEmail]),\"isDeleteDoc\":True,\"isDeleteDirectoryProfile\":True,\"gcu\":gcu})"
    },
    {
      "2055": "taskqueue.add(url='/pay/relievinguser',method=\"PUT\",payload=json.dumps({\"user\":for_user,\"relievingDate\":field_values[0]}))"
    },
    {
      "2057": "taskqueue.add(url='/pay/relievinguser',method=\"POST\",payload=json.dumps({\"user\":for_user,\"relievingDate\":field_values[0]}))"
    },
    {
      "2132": "taskqueue.add(url=\"/request/init/change-in-user-info\",params={\"gcu\":gcu,\"requestType\":\"OTHER\",\"data\":json.dumps(post_work_flow_initiation_json)},method=\"POST\")"
    },
    {
      "2137": "taskqueue.add(url='/notifications/change/triggers',method=\"POST\",countdown=30,payload=json.dumps({\"triggerType\":trigger_type,\"requestType\":trigger_type,\"workProfileId\":\"WORK_PROFILE_ID\",\"effectiveFrom\":given_wef,\"dataJson\":field_values[0],\"actionedBy\":gcu,\"userEmail\":for_user}))"
    },
    {
      "2139": "taskqueue.add(url='/notifications/change/triggers',method=\"GET\",countdown=30,params={\"triggerType\":trigger_type,\"requestType\":trigger_type,\"workProfileId\":\"WORK_PROFILE_ID\",\"effectiveFrom\":given_wef,\"dataJson\":json.dumps(mapped_obj_field_value),\"actionedBy\":gcu,\"userEmail\":for_user})"
    },
    {
      "2141": "taskqueue.add(url='/notifications/triggers',method=\"GET\",countdown=30,params={\"triggerType\":trigger_type,\"requestType\":trigger_type,\"workProfileId\":\"WORK_PROFILE_ID\",\"effectiveFrom\":given_wef,\"dataJson\":json.dumps(mapped_obj_field_value),\"actionedBy\":gcu,\"userEmail\":for_user})"
    },
    {
      "2151": "taskqueue.add(url='/notifications/user-preferences-task',method=\"POST\",countdown=60,payload=json.dumps(reminder_json))"
    },
    {
      "2177": "taskqueue.add(url='/users/org-tree-structure-update',countdown=10, method=\"POST\")"
    },
    {
      "2184": "taskqueue.add(url='/people/profiles/task',countdown=10, method=\"POST\", params={\"userList\":json.dumps(updated_user_list), \"photoSyncCron\": photoSyncCron})"
    },
    {
      "2188": "taskqueue.add(url='/people/empcodeapplytousers', method=\"PUT\", payload=json.dumps({\"user_list\": updated_user_list}),countdown=25)"
    },
    {
      "2195": "#taskqueue.add(url=\"/users/gapp-profile-sync\",payload=json.dumps({\"userDataJson\":copy.deepcopy(update_users_profile_json)}), method=\"PUT\",countdown=30)"
    },
    {
      "2197": "# taskqueue.add(url='/common/applytorule/cron',payload=json.dumps({\"effectiveFrom\":\"01-04-2011\",\"userListMatcher\":updated_user_list}), method=\"PUT\", countdown=300)"
    },
    {
      "2201": "taskqueue.add(url='/common/applytorule/cron',payload=json.dumps({\"effectiveFrom\":\"01-04-2011\",\"userListMatcher\":user_list_of_fields_updated.keys(),\"userFieldMapper\":user_list_of_fields_updated}), method=\"PUT\", countdown=300)"
    },
    {
      "2203": "#taskqueue.add(url='/users/validate',method=\"PUT\",countdown=120)"
    },
    {
      "2206": "taskqueue.add(url='/users/validate/csvdata',"
    },
    {
      "2218": "taskqueue.add(url='/users/validate', method=\"PUT\", countdown=20, params={\"userList\": json.dumps(updated_user_list)})"
    },
    {
      "2220": "taskqueue.add(url='/users/validate', method=\"PUT\", countdown=20, params={\"userList\": json.dumps(updated_user_list),\"givenDoWhat\":\"ADD\"})"
    },
    {
      "2223": "taskqueue.add(url='/people/profiles/task', countdown=10, method=\"POST\", params={\"userList\": json.dumps(updated_user_list), \"photoSyncCron\": photoSyncCron})"
    },
    {
      "2252": "taskqueue.add(url=\"/documents/filter-set\", method=\"POST\", params={\"gcu\": gcu, \"userList\": json.dumps(users_data)})"
    },
    {
      "3451": "taskqueue.add(url='/reqlist/resetsconf',method=\"GET\")"
    },
    {
      "3507": "taskqueue.add(url='/photos/sync', method=\"POST\", params={\"namespace\":namespace_manager.get_namespace()}, countdown=10)"
    },
    {
      "3826": "taskqueue.add(url='/pay/task/inputs/fof', method=\"POST\",payload=json.dumps({\"email\": basic_profile_obj.userEmail, \"recalculateComponents\": True}))"
    },
    {
      "3933": "#~ taskqueue.add(url=\"/attendance/reshuffle\",target=\"light-module\",method=\"POST\",params=return_dict)"
    },
    {
      "5344": "taskqueue.add(url=URL, method=req_method, params=para_dict,countdown=count_down)"
    },
    {
      "5771": "taskqueue.add(url=\"/time-and-attendance/regularise\",method=\"POST\",params={\"inputDict\":json.dumps(input_dict),\"revert\":revert})"
    },
    {
      "6702": "taskqueue.add(url='/time-and-attendance/putrecalcdata',countdown=i*10, method='POST', params=para_dict)"
    },
    {
      "6707": "taskqueue.add(url='/time-and-attendance/putrecalcdata',payload=json.dumps(para_dict), method=\"POST\")"
    },
    {
      "8760": "taskqueue.add(url=\"/happierFlow/processFilterUser\", method=\"PUT\")"
    },
    {
      "11212": "taskqueue.add(url='/document/transfer-ownership', method='POST', params=paraDict)"
    },
    {
      "12367": "taskqueue.add(url=\"/users/applicable-data\", method=\"PUT\", payload=json.dumps(input_applicable_trigger),countdown=60)"
    }
  ],
  "happierWork\\app\\common\\py\\common_views.py": [
    {
      "170": "taskqueue.add(url='/admin/settings/theme', method='PUT', countdown=60)"
    },
    {
      "266": "taskqueue.add(url='/document/transfer-ownership', method='POST', params=paraDict)"
    },
    {
      "427": "taskqueue.add(url='/common/applytorule/cron', payload=json.dumps({\"effectiveFrom\":effective_from,\"type\":apply_to_rule_object.profileType, \"forceLogoutUsers\": forceLogoutUsers, \"currentUser\":gcu}),method=\"PUT\", countdown=5)"
    },
    {
      "564": "taskqueue.add(url='/common/applytorule/cron',payload=json.dumps({\"effectiveFrom\":effective_from,\"type\":apply_to_rule_object.profileType, \"forceLogoutUsers\": forceLogoutUsers, \"currentUser\":gcu}), method=\"PUT\", countdown=5)"
    },
    {
      "855": "taskqueue.add(url='/hSafe/sso/applytorule/cron/'+str(policy_id)+'/0',payload=json.dumps({\"delete\":\"YES\",\"userList\":user_list,\"matchList\":control_policy_all_user_list}), method=\"POST\", countdown=50)"
    },
    {
      "857": "taskqueue.add(url='/hSafe/sso/applytorule/cron/'+str(policy_id)+'/0',payload=json.dumps({\"userList\":user_list}), method=\"POST\", countdown=50)"
    },
    {
      "891": "taskqueue.add(url='/common/applytorule/cron',payload=json.dumps({\"effectiveFrom\":\"01-04-2011\",\"userListMatcher\":user_list[jj*50:(jj+1)*50],\"type\":\"EMAIL_SIGNATURE\"}), method=\"PUT\", countdown=cnt_cnt)"
    },
    {
      "900": "taskqueue.add(url='/common/applytorule/cron', payload=json.dumps("
    },
    {
      "1147": "taskqueue.add(url='/notifications/onboarding/triggers-task',method=\"GET\", params=params)"
    },
    {
      "1149": "taskqueue.add(url='/onboarding/tracking/internal',method=\"POST\",payload=json.dumps({\"userEmail\":onboard_user}))"
    },
    {
      "1208": "taskqueue.add(url='/common/applytorule/cron',payload=json.dumps({\"effectiveFrom\":getHRMSDate(today_date),\"userListMatcher\":user_list_matcher,\"type\":\"EMAIL_SIGNATURE\"}), method=\"PUT\", countdown=5)"
    },
    {
      "1288": "taskqueue.add(url=\"/notifications/other/triggers\",method=\"POST\", payload=json.dumps(json_dict))"
    },
    {
      "1336": "taskqueue.add(url=\"/notifications/other/triggers\",method=\"POST\", payload=json.dumps(json_dict))"
    },
    {
      "1554": "taskqueue.add(url=\"/people-profile/update/task\",params = {\"gcu\": gcu ,\"data\": json.dumps(data),\"requestType\":\"PROFILE\"},method=\"POST\",countdown=5)"
    },
    {
      "1626": "taskqueue.add(url='/common/publicHolidayAnalytics/task?offset=0', method='PUT', countdown=cnt)"
    },
    {
      "1635": "taskqueue.add(url='/common/publicHolidayAnalytics/task?offset=0', method='PUT')"
    },
    {
      "1681": "taskqueue.add(url='/common/publicHolidayAnalytics/task?offset=' + str(offset), method='PUT', countdown=10)"
    },
    {
      "2896": "taskqueue.add(url=self.URLLINK, method=\"PUT\", params={\"cursor\": limit + offset,\"isPut\":params[\"isPut\"]},payload=json.dumps({\"final_data\":final_data,\"user_dict_to_put\":user_dict_to_put}))"
    },
    {
      "2907": "taskqueue.add(url='/people/profiles', method=\"POST\","
    },
    {
      "2936": "taskqueue.add(url=self.URLLINK, method=\"PUT\", params={\"isPut\":isPut})"
    },
    {
      "2946": "taskqueue.add(url=self.URLLINK, method=\"PUT\", params={\"isPut\":isPut}, countdown=5)"
    }
  ],
  "happierWork\\app\\common\\py\\download_service.py": [
    {
      "63": "taskqueue.add(url=\"/fetch/empconfreport/task\", method=\"GET\", params=paramDict)"
    },
    {
      "351": "taskqueue.add(url=\"/fetch/empconfreport/task\", method=\"POST\", payload=json.dumps(paramDict))"
    }
  ],
  "happierWork\\app\\common\\py\\testing.py": [
    {
      "180": "taskqueue.add(url='/datatrans', params=param_dict, method=\"GET\")"
    },
    {
      "357": "taskqueue.add(url='/datatrans', params=param_dict, method=\"GET\")"
    },
    {
      "368": "taskqueue.add(url='/common/applytorule/cron', payload=json.dumps("
    },
    {
      "388": "taskqueue.add(url=\"/common/update-userdetails-pfv-data\", method=\"PUT\", params={\"isPut\": isPut})"
    },
    {
      "398": "taskqueue.add(url=\"/request/init/travel\", method=\"POST\", params=paraDict)"
    },
    {
      "404": "taskqueue.add(url=\"/notifications/sendmail/trigger/setup\", method= \"POST\", payload=json.dumps({\"triggerName\":[\"TRAVEL_AND_EXPENSE\", \"TRAVEL_AND_EXPENSE_AUTO_APPROVED\", \"TRAVEL_AND_EXPENSE_CANCELLED\", \"TRAVEL_AND_EXPENSE_WAITING_FOR_CANCELLATION\", \"TRAVEL_AND_EXPENSE_ACTION_ON_CANCELLATION\"], \"namespace\":namespace}))"
    },
    {
      "410": "taskqueue.add(url=\"/notifications/sendmail/trigger/setup\", method= \"POST\", payload=json.dumps({\"triggerName\":[\"EXPENSE\", \"EXPENSE_AUTO_APPROVED\", \"EXPENSE_CANCELLED\", \"EXPENSE_WAITING_FOR_CANCELLATION\", \"EXPENSE_ACTION_ON_CANCELLATION\"], \"namespace\":namespace}))"
    }
  ],
  "happierWork\\app\\common\\py\\users_service.py": [
    {
      "98": "taskqueue.add(url='/pay/task/inputs/fof', method=\"POST\",payload=json.dumps({\"email\": uu1.userEmail, \"recalculateComponents\": True}))"
    },
    {
      "109": "# taskqueue.add(url='/notifications/attendance/triggers',countdown=60,method=\"POST\",payload=json.dumps(params))"
    },
    {
      "129": "taskqueue.add(url='/org/inactusr', method='POST')"
    },
    {
      "210": "taskqueue.add(url='/people/profiles/task', method='POST',params={\"userList\":json.dumps([u.userEmail])})"
    },
    {
      "212": "taskqueue.add(url='/people/profiles/task', method='POST',params={\"userList\":json.dumps([u.manager.get().userEmail])})"
    },
    {
      "233": "#~ taskqueue.add(url='/datatrans?valueSet=33333333333333&namespace='+ns.Namespace, method=\"GET\",countdown=15)"
    },
    {
      "242": "taskqueue.add(url=\"/notifications/other/triggers\", method=\"POST\",countdown=30,payload=json.dumps(paraDict))"
    },
    {
      "251": "taskqueue.add(url=\"/onboarding/trigger/task\", method=\"GET\")"
    },
    {
      "255": "taskqueue.add(url=\"/offboarding/trigger/task\", method=\"GET\")"
    },
    {
      "258": "#~ taskqueue.add(url='/admin/api/v1/users/accounts/sync?namespace='+ns.Namespace, method=\"GET\",countdown=15)"
    },
    {
      "469": "taskqueue.add(url='/photos/sync',method=\"POST\",params={\"namespace\":namespace},countdown=10)"
    },
    {
      "484": "taskqueue.add(url='/photos/sync', method=\"POST\", params={\"namespace\":aDomain.Namespace}, countdown=countDown)"
    },
    {
      "615": "taskqueue.add(url='/photos/sync', method=\"POST\", params={\"namespace\":self.request.get(\"namespace\"), \"offset\":offset+limit})"
    },
    {
      "1074": "taskqueue.add(url='/getStarted', method='POST', payload=json.dumps("
    },
    {
      "1559": "taskqueue.add(url='/getStarted', method='POST', payload=json.dumps("
    },
    {
      "1938": "taskqueue.add(url='/gapp/usr', method=\"POST\", params={\"manuallyAddedGoogleAppsUsers\":gapps_db_saving})"
    },
    {
      "1964": "#taskqueue.add(url='/mng/userinfo', method=\"POST\", params={\"gcu\":getgcu(self),\"createGappsAccounts\":create_gapps_accounts, \"doWhat\": \"CREATE\",\"effectiveFrom\":today_str,\"dataJson\": urllib.quote(json.dumps(user_field_value_json)).encode('utf8')}, countdown=5)"
    },
    {
      "2050": "taskqueue.add(url='/fetch/peoplecsvservice',method=\"POST\",payload=json.dumps(paramDict))"
    },
    {
      "3399": "taskqueue.add(url='/fetch/peoplecsvservice', method=\"POST\", payload=json.dumps(paramdict))"
    },
    {
      "3421": "taskqueue.add(url=\"/users/employee-data-update\",countdown=3,method=\"PUT\",payload=json.dumps({\"namespaceFor\":namespace_manager.get_namespace(),\"sourceSheetId\":paramdict[\"spreadsheetId\"],\"docOwner\":spreadSheedOwner}))"
    },
    {
      "3826": "taskqueue.add(url=\"/fetch/precompute/task\",method=\"POST\")"
    },
    {
      "3962": "taskqueue.add(url=\"/fetch/precompute/task\",params={\"limit\":limit},method=\"POST\")"
    },
    {
      "3973": "taskqueue.add(url=\"/announcement/cron\",method=\"GET\",countdown=30)"
    },
    {
      "3980": "taskqueue.add(url=str_url,method=\"PUT\",countdown=30)"
    },
    {
      "4229": "taskqueue.add(url='/common/userBaseSyncing/all', method='POST', params={\"namespace\":namespace})"
    },
    {
      "4249": "taskqueue.add(url='/fetch/peoplecsvservice', method=\"POST\",payload=json.dumps(searchJson))"
    },
    {
      "4266": "taskqueue.add(url='/common/userBaseSyncing/difference',countdown=60, method='POST', params={\"namespace\":namespace})"
    },
    {
      "4293": "taskqueue.add(url='/fetch/peoplecsvservice', method=\"POST\", payload=json.dumps(searchJson))"
    }
  ],
  "happierWork\\app\\common\\py\\views_addresses.py": [
    {
      "23": "#     taskqueue.add(url=self.URL, method=\"POST\","
    },
    {
      "25": "#     taskqueue.add(url=self.URL, method=\"POST\","
    },
    {
      "27": "#     taskqueue.add(url=self.URL, method=\"POST\","
    },
    {
      "31": "#     taskqueue.add(url=self.URL, method=\"PUT\")"
    },
    {
      "64": "taskqueue.add(url=self.URL, method=\"POST\","
    },
    {
      "66": "taskqueue.add(url=self.URL, method=\"POST\","
    },
    {
      "68": "taskqueue.add(url=self.URL, method=\"POST\","
    },
    {
      "71": "taskqueue.add(url=self.URL, method=\"PUT\")"
    },
    {
      "148": "taskqueue.add(url=self.URL, method=\"POST\","
    },
    {
      "221": "taskqueue.add(url=self.URL,method=\"PUT\",params={\"offset\":offset,\"limit\":limit})"
    }
  ],
  "happierWork\\app\\common\\py\\views_app_integrations.py": [
    {
      "1481": "# taskqueue.add(url=\"/reqlist/leavevalidationbot\", countdown=3, method=\"GET\", params=param_json)"
    }
  ],
  "happierWork\\app\\common\\py\\views_documents.py": [
    {
      "648": "taskqueue.add(url=\"/document/publishtemplate\",method=\"POST\",payload=json.dumps(param_dict))"
    },
    {
      "754": "taskqueue.add(url=task_url, params={\"data\":json.dumps(data),\"requestType\":\"OTHER\",\"gcu\":SYSTEM_NAME}, method=\"POST\",countdown=int(10))"
    },
    {
      "791": "taskqueue.add(url=\"/users/documents/permission\",method=\"POST\")"
    }
  ],
  "happierWork\\app\\common\\py\\views_users.py": [
    {
      "63": "taskqueue.add(url=\"/notifications/triggers\", countdown=30,method=\"GET\", params=params)"
    },
    {
      "238": "taskqueue.add(url='/users/move-snapshot', method='POST',params={\"userList\":json.dumps([user_email]),\"isDeleteDoc\":True,\"isDeleteDirectoryProfile\":False,\"gcu\":gcu})"
    },
    {
      "287": "taskqueue.add(url=url,params=param_dict,method=\"PUT\")"
    },
    {
      "417": "taskqueue.add(url='/users/move-snapshot', method='POST',params={\"userList\":json.dumps([user_email]),\"isDeleteDoc\":True,\"isDeleteDirectoryProfile\":True,\"gcu\":gcu})"
    },
    {
      "425": "taskqueue.add(url=\"/hSafe/sso/invalidatesession\","
    },
    {
      "454": "taskqueue.add(url='/notifications/users/triggers', method='GET',params=params)"
    },
    {
      "824": "taskqueue.add(url=\"/users/recyclic\", countdown=1, method='PUT', payload=json.dumps(paramDataDict))"
    },
    {
      "825": "#taskqueue.add(url=\"/users/upload/sync\", countdown=3, method='PUT',params=paramDataDict)"
    },
    {
      "928": "#taskqueue.add()"
    },
    {
      "930": "taskqueue.add(url=\"/users/upload/sync/task\", countdown=50, method='PUT', params=paramsDataDict)"
    },
    {
      "1014": "# taskqueue.add(url=\"/users/dataPreInterpretation\","
    },
    {
      "1044": "taskqueue.add(url=\"/users/dataAddUpdateInterpretation\", params=params_dict, method=\"PUT\")"
    },
    {
      "1065": "taskqueue.add(url='/notifications/users/triggers',method=\"POST\",countdown=3,payload=json.dumps(para_dict))"
    },
    {
      "1362": "taskqueue.add(url=\"/users/spreadsheetNotif\", payload=json.dumps("
    },
    {
      "1368": "taskqueue.add(url='/notifications/users/triggers', method=\"POST\", countdown=3,"
    },
    {
      "1386": "taskqueue.add(url=\"/users/upload/sync/task\", method='PUT', params=paramDataDict)"
    },
    {
      "1387": "# taskqueue.add(url=\"/users/recyclic\", countdown=1, method='POST', params=paramDataDict)"
    },
    {
      "1618": "# \t\t\ttaskqueue.add(url=\"/users/dataAddInterpretation\","
    },
    {
      "1629": "# \t\t\ttaskqueue.add(url=\"/users/dataUpdateInterpretation\","
    },
    {
      "1664": "taskqueue.add(url='/users/directory-sync',method=\"POST\",countdown=countdown,payload=json.dumps(para_dict))"
    },
    {
      "2012": "taskqueue.add(url='/notifications/users/triggers', method=\"POST\", countdown=3,"
    },
    {
      "2840": "taskqueue.add(url=\"/users/spreadsheetNotif\", payload=json.dumps("
    },
    {
      "2854": "# taskqueue.add(url=\"/people-profile/bulkupdate\",payload = json.dumps({\"fromCsvData\":\"true\",\"gcu\": gcu ,\"data\": json.dumps(init_json_dict),\"requestType\":\"PROFILE\",\"overrideValues\":override_values,\"onboardingProcessing\":\"NO\",\"askPeopleDocument\":ask_people_document,\"issueDocument\":issue_document,\"csvModelKey\":url_key,\"lastChunk\":last_chunk}),method=\"POST\")"
    },
    {
      "2869": "taskqueue.add(url=\"/people-profile/bulkupdate\","
    },
    {
      "2887": "taskqueue.add(url=\"/admin/masters/reset-doc\","
    },
    {
      "2952": "taskqueue.add(url='/users/validate/csvdata',"
    },
    {
      "3029": "# \t\t\t\t#taskqueue.add(url=\"/users/dataAddInterpretation\",params={\"gcu\": gcu ,\"gfilename\":gfilename,\"offset\":offset,\"addOrUpdate\":add_or_update,\"createGappsAccounts\":create_gapps_accounts,\"onboardingProcessing\":onboarding_processing,\"skipOfferLetterStep\":skip_offerletter_step,\"askPeopleDocument\":ask_people_document,\"issueDocument\":issue_document},method=\"PUT\")"
    },
    {
      "3378": "# \t\t\t\ttaskqueue.add(url=\"/users/spreadsheetNotif\", payload=json.dumps({\"validationDict\" : users_validation_dict, \"invalidEmails\" : invalid_user_email_list,"
    },
    {
      "3390": "# \t\t\t\t#taskqueue.add(url=\"/people-profile/bulkupdate\",payload = json.dumps({\"fromCsvData\":\"true\",\"gcu\": gcu ,\"data\": json.dumps(init_json_dict),\"requestType\":\"PROFILE\",\"askPeopleDocument\":ask_people_document,\"issueDocument\":issue_document,\"lastChunk\":last_chunk,\"csvModelKey\":url_key}),method=\"POST\")"
    },
    {
      "3399": "# \t\t\t\t\ttaskqueue.add(url=\"/people-profile/bulkupdate\",payload = json.dumps({\"fromCsvData\":\"true\",\"payloadName\":payloadName}),method=\"POST\",countdown=10)"
    },
    {
      "3469": "# \t\t\t\t#taskqueue.add(url='/notifications/triggers',method=\"POST\",countdown=30,payload=json.dumps(para_dict))"
    },
    {
      "3510": "# \t\t\t\t\ttaskqueue.add(url='/users/validate/csvdata',"
    },
    {
      "3516": "# \t\t\t# \ttaskqueue.add(url='/users/validate',method=\"PUT\",countdown=1800)"
    },
    {
      "3637": "# \t\t\t\t#taskqueue.add(url=\"/users/dataUpdateInterpretation\",params={\"gcu\": gcu ,\"gfilename\":gfilename,\"offset\":offset,\"addOrUpdate\":add_or_update,\"overrideValues\":override_values_tag,\"askPeopleDocument\":ask_people_document,\"issueDocument\":issue_document},payload=json.dumps({\"rejectionUserList\":rejection_user_list}),method=\"PUT\")"
    },
    {
      "3919": "# \t\t\t\ttaskqueue.add(url=\"/users/spreadsheetNotif\", payload=json.dumps("
    },
    {
      "3931": "# \t\t\t\t#taskqueue.add(url=\"/people-profile/bulkupdate\",payload = json.dumps({\"fromCsvData\":\"true\",\"gcu\": gcu ,\"data\": json.dumps(init_json_dict),\"requestType\":\"PROFILE\",\"overrideValues\":override_values,\"onboardingProcessing\":\"NO\",\"askPeopleDocument\":ask_people_document,\"issueDocument\":issue_document,\"csvModelKey\":url_key,\"lastChunk\":last_chunk}),method=\"POST\")"
    },
    {
      "3942": "# \t\t\t\t\ttaskqueue.add(url=\"/people-profile/bulkupdate\",payload = json.dumps({\"fromCsvData\":\"true\",\"payloadName\":payloadName}),method=\"POST\",countdown=10)"
    },
    {
      "3955": "# \t\t\t\ttaskqueue.add(url=\"/admin/masters/reset-doc\","
    },
    {
      "4022": "# \t\t\t\t#taskqueue.add(url='/notifications/triggers',method=\"POST\",countdown=30,payload=json.dumps(para_dict))"
    },
    {
      "4060": "# \t\t\t\t\ttaskqueue.add(url='/users/validate/csvdata',"
    },
    {
      "4096": "taskqueue.add(url='/notifications/users/triggers', method=\"POST\", countdown=3,payload=json.dumps(para_dict))"
    },
    {
      "4118": "taskqueue.add(url='/notifications/users/triggers', method=\"POST\", countdown=3,payload=json.dumps(para_dict))"
    },
    {
      "4166": "taskqueue.add(url='/notifications/users/triggers', method=\"POST\", countdown=3,payload=json.dumps(para_dict))"
    },
    {
      "4277": "taskqueue.add(url=url, params=params_dict, method=\"PUT\")"
    },
    {
      "4289": "taskqueue.add(url='/users/validate', method=\"PUT\", countdown=10, params = {\"givenDoWhat\": \"ADD\"})"
    },
    {
      "4292": "taskqueue.add(url='/users/validate', method=\"PUT\", countdown=10)"
    },
    {
      "4333": "taskqueue.add(url='/notifications/users/triggers',method=\"POST\",countdown=15,payload=json.dumps(para_dict))"
    },
    {
      "4335": "taskqueue.add(url='/users/trigger-deckcard-sync',method=\"POST\",countdown=1800)"
    },
    {
      "4346": "# \ttaskqueue.add(url='/users/validate',method=\"PUT\",countdown=30)"
    },
    {
      "4552": "taskqueue.add(url='/people/profiles/task', countdown=30, method=\"POST\","
    },
    {
      "4554": "#taskqueue.add(url='/documents/visibility-update', method=\"PUT\",params={\"userList\": json.dumps(users_data)})"
    },
    {
      "4556": "taskqueue.add(url='/common/applytorule/cron',payload=json.dumps({\"effectiveFrom\":\"01-04-2011\",\"userListMatcher\":users_data}), method=\"PUT\", countdown=cd)"
    },
    {
      "4562": "# taskqueue.add(url=\"/happierDeck/sync/DeckCards\", method=\"PUT\", payload=json.dumps("
    },
    {
      "4573": "taskqueue.add(url='/common/applytorule/cron',payload=json.dumps({\"effectiveFrom\":\"01-04-2011\",\"type\":\"ONBOARDING\",\"onboardUserHash\":onboard_user_hash,\"userListMatcher\":onboard_user_hash.keys()}), method=\"PUT\", countdown=100)"
    },
    {
      "4575": "taskqueue.add(url='/common/applytorule/cron',payload=json.dumps({\"effectiveFrom\":getHRMSDate(datetime.datetime.now().date()),\"onboardUserHash\":onboard_user_hash,\"userListMatcher\":onboard_user_hash.keys()}), method=\"PUT\", countdown=50)"
    },
    {
      "4576": "# taskqueue.add(url='/common/applytorule/cron',payload=json.dumps({\"effectiveFrom\":getHRMSDate(datetime.datetime.now().date()),\"onboardUserHash\":onboard_user_hash,\"userListMatcher\":onboard_user_hash.keys()}), method=\"PUT\", countdown=50)"
    },
    {
      "4600": "taskqueue.add(url=\"/happierDeck/sync/DeckCards\", method=\"PUT\", payload=json.dumps({\"userlist\": partialUserList}), countdown=countDown)"
    },
    {
      "4785": "taskqueue.add(url=\"/users/applicable-data\", method=\"PUT\", payload=json.dumps(input_applicable_trigger_json))"
    },
    {
      "4810": "taskqueue.add(url=\"/users/upload/sync/task\",params=param_dict,method=\"POST\")"
    },
    {
      "4903": "taskqueue.add(url=\"/workprofile/userworkprofile-task\", method=\"PUT\", payload=json.dumps(work_profile_json))"
    },
    {
      "4943": "taskqueue.add(url=\"/pay/task/ctcprofile/apply\", method=\"POST\", payload=json.dumps(ctc_profile_json))"
    },
    {
      "4949": "taskqueue.add(url='/users/email/update/task', countdown=3,method='PUT', params={\"jobId\":changeEmailJob.jobId,\"initiator\":changeEmailJob.jobInitiator, \"oldId\":changeEmailJob.oldId,\"newId\":changeEmailJob.newId,\"removeEmailAlias\":changeEmailJob.removeEmailAlias,\"changeEmail\":\"YES\"})"
    },
    {
      "5496": "taskqueue.add(url='/timesheet/project-updatedocuments',countdown=40, method=\"POST\", payload=json.dumps(pDict))"
    },
    {
      "5516": "taskqueue.add(url='/timesheet/project-updatedocuments',countdown=60, method=\"POST\", payload=json.dumps(pDict))"
    },
    {
      "5655": "taskqueue.add(url='/people/profiles/task',method='DELETE',params={\"namespace\":namespace,\"userList\":json.dumps([old_id])})"
    },
    {
      "5656": "taskqueue.add(url='/people/profiles/task',countdown=5,method='POST',params={\"namespace\":namespace,\"userList\":json.dumps([new_id])})"
    },
    {
      "5657": "taskqueue.add(url='/happierDeck/admin/cards/update/email',countdown=5,method='GET',params={\"namespace\":namespace,\"prevId\":old_id,\"newId\":new_id, \"initiator\":initiator})"
    },
    {
      "5658": "taskqueue.add(url='/happierDeck/smartstuffs/update/email',countdown=15,method='GET',params={\"namespace\":namespace,\"prevId\":old_id,\"newId\":new_id, \"initiator\":initiator})"
    },
    {
      "5659": "taskqueue.add(url='/hSafe/sso/update/email',countdown=15,method='POST',params={\"namespace\":namespace,\"prevId\":old_id,\"newId\":new_id, \"initiator\":initiator})"
    },
    {
      "5660": "taskqueue.add(url='/pay/update/email',countdown=15,method='GET',params={\"namespace\":namespace,\"oldId\":old_id,\"newId\":new_id, \"initiator\":initiator})"
    },
    {
      "5808": "# \ttaskqueue.add(url='/users/email/update', countdown=3,method='PUT', params={\"jobId\":changeEmailJob.jobId, \"oldId\":changeEmailJob.oldId,\"newId\":changeEmailJob.newId,\"changeEmail\":\"YES\"})"
    },
    {
      "5857": "taskqueue.add(url=\"/notifications/other/triggers\", method=\"GET\", params=params)"
    },
    {
      "5922": "taskqueue.add(url='/users/gapp-profile-sync', method='POST', params={\"domain\": domain})"
    },
    {
      "5926": "taskqueue.add(url='/users/gapp-profile-sync', method='POST', params={\"domain\":domain})"
    },
    {
      "5975": "taskqueue.add(url='/users/gapp-profile-sync', method='PUT', payload=json.dumps(payload))"
    },
    {
      "5981": "taskqueue.add(url='/users/gapp-profile-sync', method='POST', params=paramsDict)"
    },
    {
      "6282": "#taskqueue.add(url=\"/users/gapp-profile-sync\",countdown=5,method='PUT',payload=json.dumps({\"userEmailList\":user_list}))"
    },
    {
      "6283": "taskqueue.add(url='/common/applytorule/cron',payload=json.dumps({\"effectiveFrom\":getHRMSDate(today),\"userListMatcher\":user_list,\"type\":\"EMAIL_SIGNATURE\"}), method=\"PUT\", countdown=5)"
    },
    {
      "6302": "taskqueue.add(url=\"/users/upload/resync\",countdown=5,method='POST',params={\"namespace\":namespace},retry_options=TaskRetryOptions(task_retry_limit=0))"
    },
    {
      "6478": "taskqueue.add(url=\"/users/upload/sync/task\",countdown=5,method='POST',params={\"gfilename\":diffFileName,\"bucket\":USER_CSV_BUCKET_NAME,\"namespace\":requestParams.get(\"namespace\"),\"gcu\":gcu})"
    },
    {
      "6578": "# \t\t\ttaskqueue.add(url='/users/move-snapshot', method='POST',params={\"userList\":json.dumps(userList),\"isDeleteDoc\":isDeleteDoc,\"gcu\":self.request.get('gcu')})"
    },
    {
      "6674": "taskqueue.add(url='/people/profiles/task', method='POST',"
    },
    {
      "6884": "taskqueue.add(url=\"/users/employee-data-update\",countdown=120*i,method=\"POST\",params=paramDict)"
    },
    {
      "6928": "taskqueue.add(url=\"/users/employee-data-update\", method=\"POST\",params={\"namespaceFor\": namespace, \"offset\": OFFSET + LIMIT, 'dataUrl': dataUrl, 'sourceSheetId':sourceSheetId,\"docOwner\":self.docOwner,\"appIndex\":self.appIndex})"
    },
    {
      "6983": "taskqueue.add(queue_name=BIG_QUERY_QUEUE, url='/users/bigquery/sync-task', method=\"POST\")"
    },
    {
      "7184": "taskqueue.add(queue_name=BIG_QUERY_QUEUE, url='/users/bigquery/sync-task', method=\"POST\","
    }
  ],
  "happierWork\\app\\components\\happier_pages\\py\\GoogleDrive.py": [
    {
      "584": "taskqueue.add(url=\"/gapi/v1/drive/resource/renewwatch\",countdown=countdown,method=\"POST\")"
    },
    {
      "615": "taskqueue.add(url=\"/gapi/v1/drive/resource/renewwatch\", method=\"POST\",countdown=600,params={\"cursor\":cursor.urlsafe()})"
    }
  ],
  "happierWork\\app\\components\\happier_pages\\py\\HelloSign.py": [
    {
      "436": "taskqueue.add(url=metadata[\"callbackUrl\"], method=\"POST\", payload=json.dumps(payload), countdown=5)"
    }
  ],
  "happierWork\\app\\components\\happier_pages\\py\\Workplace.py": [
    {
      "243": "taskqueue.add(url='/hire/applicants/' + str(interview_link_details.applicantId.urlsafe()) + '/jobs/' + str("
    }
  ],
  "happierWork\\app\\components\\initial_setup\\py\\initial_setup_service.py": [
    {
      "715": "#~ taskqueue.add(url='/people/update-all-dataprofiles', method=\"GET\",countdown=10)"
    },
    {
      "716": "taskqueue.add(url=\"/notifications/triggers\", method=\"GET\", params={\"getPutFlag\":\"PUT\",\"allTriggers\":\"YES\"},countdown=15)"
    },
    {
      "717": "taskqueue.add(url=\"/notifications/sendmail/trigger/setup\", payload=json.dumps({\"putFlag\": \"YES\", \"namespace\": [namespace_manager.get_namespace()]}), method=\"PUT\",countdown=30)"
    },
    {
      "1078": "taskqueue.add(url=\"/init/onboardingsetup\", method=\"GET\", params={\"user\":superadminemail, \"namespace\":domain})"
    },
    {
      "1079": "taskqueue.add(url=\"/onboarding/admin/defaultonboardprofile/setup\", method=\"POST\", params={\"namespace\":domain,\"initSetup\":True},countdown=20)"
    },
    {
      "1082": "taskqueue.add(url=\"/init/offboardingsetup\", method=\"GET\", params={\"user\":superadminemail,\"namespace\":domain})"
    },
    {
      "1083": "taskqueue.add(url=\"/separation/defaultprofile/setup\", method=\"POST\", params={\"namespace\":domain,\"initSetup\":True},countdown=40)"
    },
    {
      "1112": "taskqueue.add(url=\"/init/travelsetup\", method= \"GET\", params={\"namespace\":str(dobj.Namespace), \"user\":superadminemail})"
    },
    {
      "1126": "taskqueue.add(url='/happierDeck/admin/setup/cards', method=\"POST\", params = {\"modules\": json.dumps(modules)}, countdown=10)"
    },
    {
      "1131": "# taskqueue.add(url='/announcement', method=\"POST\",payload=json.dumps(json_data),countdown=30)"
    },
    {
      "1133": "# taskqueue.add(url='/hSafe/admin/sso/agreementPolicies', method=\"POST\",payload=json.dumps(json_data))"
    },
    {
      "1146": "# taskqueue.add(url='/common/applytorule/AGREEMENT_POLICY', method=\"POST\",payload=json.dumps(json_data),countdown=40)"
    },
    {
      "1151": "taskqueue.add(url=\"/hSafe/admin/sso/init/setup\", method='GET',"
    },
    {
      "2052": "taskqueue.add(url=\"/notifications/sendmail/trigger/setup\", method=\"POST\", payload=json.dumps({\"triggerName\": ["
    },
    {
      "2056": "taskqueue.add(url=\"/notifications/sendmail/trigger/setup\", method=\"POST\", payload=json.dumps({\"triggerName\": ["
    }
  ],
  "happierWork\\app\\components\\notification_engine\\py\\customised_triggers.py": [
    {
      "99": "taskqueue.add(url='/notifications/triggers/custom/taskqueue', method='POST', payload=json.dumps(output_json))"
    },
    {
      "123": "taskqueue.add(url='/notifications/triggers/custom/taskqueue', method='POST', payload=json.dumps(json_input))"
    }
  ],
  "happierWork\\app\\components\\notification_engine\\py\\reminder.py": [
    {
      "683": "taskqueue.add(url='/notifications/reminder-task',countdown=int(i/10), method=\"POST\", payload=json.dumps({\"approver\":key,\"body\": value}))"
    },
    {
      "772": "taskqueue.add(url='/notifications/reminder-task', method=\"GET\")"
    }
  ],
  "happierWork\\app\\components\\notification_engine\\py\\views.py": [
    {
      "7709": "taskqueue.add(url='/notifications/update-org-preferences', method=\"POST\", countdown=int(5),"
    },
    {
      "7731": "taskqueue.add(url='/notifications/update-org-preferences', method=\"POST\","
    },
    {
      "7982": "taskqueue.add(url='/notifications/update-org-preferences', method=\"POST\", countdown=int(5),"
    },
    {
      "8006": "taskqueue.add(url='/notifications/update-org-preferences', method=\"POST\","
    },
    {
      "8294": "taskqueue.add(url='/notifications/update-org-preferences', method=\"POST\", countdown=int(5),"
    },
    {
      "8372": "taskqueue.add(url=\"/notifications/update-userwise-preferences\", countdown=5, method=\"GET\")"
    },
    {
      "8515": "taskqueue.add(url=\"/notifications/update-userwise-preferences\", method=\"GET\", countdown=5, params={\"changedList\": json.dumps(changedList)})"
    },
    {
      "10287": "taskqueue.add(url='/notifications/update-org-preferences', method=\"POST\", countdown=int(6),"
    },
    {
      "10570": "taskqueue.add(url='/notifications/reportfororg', method=\"POST\", countdown=int(i), payload=json.dumps(params))"
    },
    {
      "10636": "taskqueue.add(url='/notifications/reportfororg', method=\"POST\", countdown=int(5), payload=json.dumps(params))"
    },
    {
      "11845": "taskqueue.add(url='/notifications/scheduler', countdown=i,method=\"POST\", params={\"calcWhat\": \"NOTIFICATION_SCHEDULER\"})"
    },
    {
      "11880": "taskqueue.add(url='/notifications/user-triggers', method='GET', params={\"namespace\": namespace, \"userList\": json.dumps(user_list)})"
    },
    {
      "11882": "taskqueue.add(url='/notifications/scheduler', method=\"POST\", params={\"namespace\": namespace, \"offset\": str(offset)})"
    },
    {
      "11961": "taskqueue.add(url='/notifications/user-triggers', method='GET', params=params)"
    }
  ],
  "happierWork\\app\\components\\notification_engine\\py\\views_deck.py": [
    {
      "152": "taskqueue.add(url='/notifications/deck/triggers', method='POST', payload=json.dumps({\"triggerType\":\"TASK_ASSIGNED\",\"requestType\":\"TASK_ASSIGNED\",\"body\":value,\"sender\":key}))"
    }
  ],
  "happierWork\\app\\components\\notification_engine\\py\\views_hire.py": [
    {
      "896": "taskqueue.add(url='/notifications/hire/triggers', method='GET',"
    },
    {
      "1329": "taskqueue.add(url='/notifications/hire/triggers', method='POST', payload=json.dumps({\"body\": value, \"triggerType\": \"DAILY_DIGEST\", \"requestType\": \"DAILY_DIGEST\"}))"
    },
    {
      "1632": "taskqueue.add(url='/notifications/hire/triggers', method='GET',params = params_json)"
    },
    {
      "1857": "taskqueue.add(url = \"/notifications/hire/triggers\",method = \"GET\",params = {\"requestId\":requestId,\"requestType\":\"OFFER_APPROVAL_REQUEST\",\"triggerType\":\"OFFER_APPROVAL_REQUEST\"})"
    },
    {
      "2048": "taskqueue.add(url='/notifications/hire/triggers', method='POST',"
    },
    {
      "2059": "taskqueue.add(url='/notifications/hire/triggers', method='POST',"
    },
    {
      "2070": "taskqueue.add(url='/notifications/hire/triggers', method='POST',"
    },
    {
      "2080": "taskqueue.add(url='/notifications/hire/triggers', method='POST',"
    },
    {
      "2089": "taskqueue.add(url='/notifications/hire/triggers', method='POST',"
    },
    {
      "2097": "taskqueue.add(url='/notifications/hire/triggers', method='POST', payload=json.dumps("
    },
    {
      "2105": "taskqueue.add(url='/notifications/hire/triggers', method='POST', payload=json.dumps("
    },
    {
      "2166": "taskqueue.add(url='/notifications/hire/triggers', method='POST',"
    },
    {
      "2178": "taskqueue.add(url='/notifications/hire/triggers', method='POST',"
    },
    {
      "2191": "taskqueue.add(url='/notifications/hire/triggers', method='GET',"
    },
    {
      "2207": "taskqueue.add(url='/notifications/hire/triggers', method='POST',"
    },
    {
      "2308": "taskqueue.add(url='/notifications/hire/triggers', method='POST',"
    }
  ],
  "happierWork\\app\\components\\notification_engine\\py\\views_offboarding.py": [
    {
      "1409": "taskqueue.add(url='/notifications/offboarding/triggers-task', method='POST', payload=json.dumps("
    },
    {
      "1413": "taskqueue.add(url='/notifications/offboarding/triggers-task', method='POST', payload=json.dumps("
    },
    {
      "1776": "taskqueue.add(url='/notifications/offboarding/triggers-task', method='POST',"
    }
  ],
  "happierWork\\app\\components\\notification_engine\\py\\views_onboarding.py": [
    {
      "1145": "taskqueue.add(url='/notifications/onboarding/triggers-task', method='GET',"
    },
    {
      "2125": "taskqueue.add(url='/notifications/onboarding/triggers-task', method='GET',"
    }
  ],
  "happierWork\\app\\modules\\admin\\py\\models.py": [
    {
      "185": "taskqueue.add(url='/people/profiles/task', method='POST',"
    },
    {
      "1086": "taskqueue.add(url='/people/update-all-dataprofiles', method=\"GET\", countdown=5)"
    },
    {
      "1088": "taskqueue.add(url='/people/empcodeapplytousers', method=\"POST\",payload=json.dumps({\"isUpdateAllUser\": True}), countdown=10)"
    },
    {
      "1348": "#taskqueue.add(url=\"/documents/update-all-filter-set\", method=\"POST\")"
    }
  ],
  "happierWork\\app\\modules\\admin\\py\\org_service.py": [
    {
      "44": "taskqueue.add(url='/admin/api/v1/users/googleAppsAdmins', method=\"GET\", params={\"namespace\":aDomain.Namespace}, countdown=countDown)"
    },
    {
      "51": "taskqueue.add(url=\"/admin/api/v1/users/sync/diff\", method=\"GET\", params={\"namespace\":self.request.get(\"namespace\")})"
    },
    {
      "94": "# \t\ttaskqueue.add(url='/admin/api/v1/users/accounts/sync/all', method=\"POST\", params={\"namespace\":namespace_manager.get_namespace(),\"syncWhat\":sync_what, \"gcu\":getgcu(self)})"
    },
    {
      "111": "taskqueue.add(url='/admin/api/v1/users/accounts/sync/all', method=\"POST\", params={\"namespace\":namespace_manager.get_namespace(),\"syncWhat\":\"BOTH\"}, countdown=countDown)"
    },
    {
      "222": "taskqueue.add(url='/users/move-snapshot', method='POST',params={\"userList\": json.dumps([primaryEmail]), \"isDeleteDoc\": True,\"isDeleteAccountStatus\":True, \"gcu\": googleAppsAdmin})"
    },
    {
      "255": "# \t\ttaskqueue.add(url='/users/move-snapshot', method='POST',params={\"userList\": json.dumps([primaryEmail]), \"isDeleteDoc\": True,\"isDeleteDirectoryProfile\":True, \"gcu\": googleAppsAdmin})"
    },
    {
      "272": "taskqueue.add(url='/admin/api/v1/users/accounts/sync/all', method=\"POST\", params=params, countdown=10)"
    },
    {
      "273": "taskqueue.add(url='/admin/api/v1/users/accounts/sync/all', method=\"POST\",params={\"domain\":domain,\"namespace\": namespace, \"syncWhat\": \"SEND_MAIL\",\"spreadsheetId\": spreadsheet_id, \"gcu\": gcu}, countdown=1200)"
    },
    {
      "279": "taskqueue.add(url='/admin/api/v1/users/accounts/sync/all', method=\"POST\", params=params, countdown=10)"
    },
    {
      "382": "taskqueue.add(url='/users/email/update/task', countdown=10, method='PUT',"
    },
    {
      "449": "taskqueue.add(url='/admin/api/v1/users/accounts/sync/all', method=\"POST\", params=params,countdown=10)"
    },
    {
      "469": "taskqueue.add(url=\"/notifications/sso/triggers\", countdown=20, method=\"GET\", params=params)"
    },
    {
      "476": "taskqueue.add(url=\"/users/upload/sync/task\", countdown=5, method='POST',"
    },
    {
      "482": "taskqueue.add(url='/people/advanced-search/task', method=\"PUT\",params={\"offset\": 0, \"requestFromCron\": \"true\"})"
    },
    {
      "483": "taskqueue.add(url='/common/applytorule/cron', payload=json.dumps({\"effectiveFrom\": getHRMSDate(datetime.datetime.now().date()), \"type\": \"CONTROL_POLICY\"}),method=\"PUT\", countdown=2*60*60)"
    },
    {
      "575": "taskqueue.add(url='/admin/api/v1/users/accounts/sync/task', method=\"POST\", params={\"namespace\":namespace_manager.get_namespace(),\"domain\":domain,\"syncWhat\":sync_what, \"gcu\":isAuthORcurrentUser})"
    },
    {
      "592": "taskqueue.add(url='/admin/api/v1/users/accounts/sync/task', method=\"POST\", params={\"namespace\":namespace_manager.get_namespace(),\"syncWhat\":\"BOTH\"}, countdown=countDown)"
    },
    {
      "742": "taskqueue.add(url=url, params=param_dict, method=\"PUT\")"
    },
    {
      "767": "taskqueue.add(url='/users/email/update/task', countdown=10, method='PUT',"
    },
    {
      "827": "taskqueue.add(url='/users/move-snapshot', method='POST',params={\"isDeleteDoc\": True,\"isDeleteAccountStatus\":True, \"gcu\": gcu, \"accountIds\": json.dumps([user_id])})"
    },
    {
      "839": "# \t\ttaskqueue.add(url='/users/move-snapshot', method='POST',params={\"userList\":json.dumps([user_account.userEmail]),\"isDeleteDoc\":True,\"isDeleteDirectoryProfile\":True,\"gcu\":gcu})"
    },
    {
      "882": "taskqueue.add(url='/common/applytorule/cron',payload=json.dumps({\"effectiveFrom\":getHRMSDate(datetime.datetime.now()),\"userListMatcher\":org_unit_updated_users,\"type\":\"CONTROL_POLICY\"}), method=\"PUT\", countdown=60)"
    },
    {
      "888": "taskqueue.add(url=os.environ['REQUEST_URI'],params=params, method=\"POST\")"
    },
    {
      "899": "taskqueue.add(url=\"/notifications/sso/triggers\", countdown=20, method=\"GET\", params=notif_params)"
    },
    {
      "907": "taskqueue.add(url=\"/users/upload/sync/task\", countdown=5, method='POST',"
    },
    {
      "913": "taskqueue.add(url='/people/advanced-search', method=\"PUT\",params={\"offset\": 0, \"requestFromCron\": \"true\"})"
    },
    {
      "915": "taskqueue.add(url='/common/applytorule/cron', payload=json.dumps({\"effectiveFrom\":getHRMSDate(datetime.datetime.now().date()),\"type\":\"EMAIL_SIGNATURE\"}),method=\"PUT\", countdown=600)"
    }
  ],
  "happierWork\\app\\modules\\admin\\py\\views_masters.py": [
    {
      "39": "taskqueue.add(url=URLLINK, method=\"PUT\","
    },
    {
      "55": "taskqueue.add(url=URLLINK, method=\"PUT\","
    },
    {
      "59": "taskqueue.add(url=URLLINK, method=\"PUT\","
    },
    {
      "123": "taskqueue.add(url='/people/profiles/task', method='POST', params={\"userList\": json.dumps(user_list)})"
    },
    {
      "212": "taskqueue.add(url=URLLINK, method=\"PUT\","
    },
    {
      "253": "taskqueue.add(url='/people/advanced-search/task', method=\"PUT\", params={\"tq\": \"yes\"},"
    },
    {
      "256": "taskqueue.add(url=self.URLLINK, method=\"POST\","
    },
    {
      "277": "#taskqueue.add(url='/people/profiles', method='POST', params={\"userList\": json.dumps(user_list)})"
    },
    {
      "279": "taskqueue.add(url='/people/advanced-search/task', method=\"PUT\", params={\"tq\":\"yes\"},payload=json.dumps(advance_search_json), countdown=3)"
    },
    {
      "421": "taskqueue.add(url=self.URLLINK, method=\"POST\", payload=json.dumps("
    },
    {
      "425": "taskqueue.add(url=\"/admin/masters/reset-doc\", method=\"POST\","
    },
    {
      "430": "taskqueue.add(url=\"/users/apply-assets/task\", method=\"POST\", payload=json.dumps({\"assets\": asset_json}))"
    },
    {
      "782": "taskqueue.add(url=\"/happierVisit/admin/timezone\", method=\"POST\","
    },
    {
      "1354": "taskqueue.add(url=\"/happierVisit/admin/timezone\", method=\"POST\","
    },
    {
      "1655": "taskqueue.add(url=URLLINK, method=\"POST\", params={\"modelName\": self.list_models[nextModelIndex]})"
    },
    {
      "1681": "taskqueue.add(url=URLLINK, method=\"POST\",params={\"cursor\": next_cursor.urlsafe(),\"modelName\":modelName})"
    },
    {
      "1774": "taskqueue.add(url=\"/admin/masters/repairAsciiValues\", method=\"POST\",params={\"modelName\": self.list_models[0]})"
    },
    {
      "1783": "taskqueue.add(url=\"/admin/masters/repairAsciiValues\", method=\"POST\", params={\"modelName\":self.list_models[0]})"
    },
    {
      "1977": "taskqueue.add(url=\"/admin/weather\", method=\"POST\","
    },
    {
      "2101": "taskqueue.add(url='/admin/mdata/csv/task', method='GET', countdown=10,"
    },
    {
      "2106": "taskqueue.add(url='/admin/mdata/csv/task', method='GET', countdown=10,"
    },
    {
      "2146": "taskqueue.add(url='/admin/mdata/csv/task', countdown=10, method='PUT',"
    }
  ],
  "happierWork\\app\\modules\\admin\\py\\views_profile_structure.py": [
    {
      "75": "taskqueue.add(url=\"/admin/delete-profilefields\", method=\"POST\","
    },
    {
      "224": "# taskqueue.add(url=\"/documents/update-all-filter-set\", method=\"POST\")"
    },
    {
      "227": "taskqueue.add(url='/request/update-requests-after-prostruc', method=\"GET\","
    },
    {
      "230": "# taskqueue.add(url='/documents/update-after-prostruc', method=\"PUT\", payload=json.dumps({\"ProfileFieldUpdation\":profile_field_updation}), countdown=20)"
    },
    {
      "250": "taskqueue.add(url='/people/updateautoincrementer', method=\"POST\",params=paramJson, countdown=2)"
    },
    {
      "275": "taskqueue.add(url='/admin/prostruc/maintenance/cron',method=\"POST\")"
    },
    {
      "316": "taskqueue.add(url=\"/admin/prostruc/maintenance/report\", method=\"GET\",params=given_data)"
    },
    {
      "726": "# \t\t\ttaskqueue.add(url=\"/admin/prostruc/maintenance/cron\", method=\"PUT\")"
    },
    {
      "750": "taskqueue.add(url=\"/notifications/triggers\", countdown=30,method=\"GET\", params=params)"
    },
    {
      "772": "taskqueue.add(url=\"/notifications/triggers\", countdown=30,method=\"GET\", params=params)"
    },
    {
      "800": "taskqueue.add(url=\"/notifications/triggers\", countdown=30,method=\"GET\", params=params)"
    },
    {
      "898": "taskqueue.add(url=\"/notifications/triggers\", countdown=30,method=\"GET\", params=params)"
    },
    {
      "923": "taskqueue.add(url=self.URLLINK, method=\"PUT\","
    },
    {
      "928": "taskqueue.add(url=self.URLLINK, method=\"PUT\","
    },
    {
      "934": "taskqueue.add(url=self.URLLINK, method=\"PUT\","
    },
    {
      "959": "taskqueue.add(url='/people/profiles/task', method='POST', params={\"userList\": json.dumps(user_list)})"
    },
    {
      "977": "taskqueue.add(url=\"/admin/prostruc/managefreshness/task\", method=\"PUT\")"
    },
    {
      "981": "taskqueue.add(url=\"/admin/prostruc/managefreshness/task\", params={\"runNow\":\"YES\",\"host\":self.request.host},method=\"PUT\",countdown=30)"
    },
    {
      "1121": "taskqueue.add(url=\"/notifications/triggers\", countdown=30,method=\"GET\", params=params)"
    }
  ],
  "happierWork\\app\\modules\\admin\\py\\views_role_and_permission.py": [
    {
      "167": "taskqueue.add(url='/people/profiles/task', method='POST',"
    },
    {
      "251": "taskqueue.add(url='/hire/applicants/documents/permission',"
    },
    {
      "263": "taskqueue.add(url=\"/request/doc-permission-syncer\",method=\"POST\", payload=json.dumps(tsk_json))"
    },
    {
      "270": "taskqueue.add(url=\"/common/gfolder-permission-syncer\",method=\"POST\", payload=json.dumps(json_dict))"
    },
    {
      "274": "taskqueue.add(url='/people/profiles/task', method='POST',"
    }
  ],
  "happierWork\\app\\modules\\admin\\py\\views_setup.py": [
    {
      "177": "taskqueue.add(url=\"/pay/admin/initial-setup\",method=\"POST\",payload=json.dumps({\"esic\":True,\"adminEmail\":str(param_json[\"happierWorkAdministratorEmail\"])}))"
    },
    {
      "179": "taskqueue.add(url=\"/perform/admin/initial-setup\",method=\"POST\")"
    },
    {
      "181": "taskqueue.add(url=\"/hire/admin/initial-setup\",method=\"POST\",payload=json.dumps({\"emailForOffers\":\"\",\"emailForDocuments\":\"\",\"adminEmail\":str(param_json[\"happierWorkAdministratorEmail\"])}))"
    },
    {
      "183": "taskqueue.add(url=\"/happierVisit/initial-setup\", method=\"POST\")"
    },
    {
      "189": "taskqueue.add(url=\"/init/setup\",method=\"GET\",params={\"domainNamespace\":str(domain_obj.Namespace),\"currentUserEmail\":str(param_json[\"happierWorkAdministratorEmail\"]),\"domains\":json.dumps(param_json[\"domains\"])})"
    },
    {
      "692": "taskqueue.add(url=\"/admin/domainSubscription\", method=\"POST\", params={\"activity\": \"ONBOARD\",\"gcu\":getgcu(self)})"
    },
    {
      "694": "taskqueue.add(url=\"/admin/domainSubscription\",method=\"POST\",params={\"activity\":\"OFFBOARD\",\"gcu\":getgcu(self)})"
    },
    {
      "706": "taskqueue.add(url=\"/onboarding/resetprocess\", params={\"userEmail\":user_obj.userEmail,\"active\":\"YES\"}, method=\"GET\")"
    },
    {
      "709": "taskqueue.add(url=\"/onboarding/resetprocess\", params={\"userEmail\":user_obj.userEmail}, method=\"GET\")"
    },
    {
      "713": "taskqueue.add(url=\"/separation/terminateOffboardingProcess/task/\"+user_obj.uniqueId,method=\"PUT\",params={\"gcu\":str(gcu)})"
    }
  ],
  "happierWork\\app\\modules\\admin\\py\\views_workflow.py": [
    {
      "52": "taskqueue.add(url=\"/init/timesheetsetup\", method=\"GET\", params={\"user\":gcu, \"namespace\":namespace_manager.get_namespace()})"
    },
    {
      "53": "taskqueue.add(url=\"/timesheet/masters\",method=\"POST\", payload=json.dumps({\"name\":\"Task\",\"namespace\":namespace_manager.get_namespace()}))"
    },
    {
      "54": "# taskqueue.add(url=\"/admin/req\",method=\"POST\", payload=json.dumps({ \"mrName\": \"Updates In Work Log\", \"mrDispName\": \"Updates In Work Log\", \"mrType\": 3 }))"
    },
    {
      "55": "# taskqueue.add(url=\"/admin/req\",method=\"POST\", payload=json.dumps({ \"mrName\": \"Updates In Project\", \"mrDispName\": \"Updates In Project\", \"mrType\": 3 }))"
    },
    {
      "56": "# taskqueue.add(url=\"/admin/req\",method=\"POST\", payload=json.dumps({ \"mrName\": \"Worklog Regularisation\", \"mrDispName\": \"Worklog Regularisation\", \"mrType\": 3 }))"
    }
  ],
  "happierWork\\app\\modules\\announcement\\py\\views.py": [
    {
      "244": "taskqueue.add(url=\"/announcement/cron\",params={\"id\":object[0][\"id\"]},method=\"GET\",countdown=30)"
    },
    {
      "245": "taskqueue.add(url=\"/announcement/notification\",method=\"POST\",params={\"id\":object[0][\"id\"],\"namespace\":namespace_manager.get_namespace()},countdown=700)"
    },
    {
      "255": "taskqueue.add(url=\"/announcement/cron\",params={\"id\":list_object_dict_list[0]},method=\"GET\",countdown=30)"
    },
    {
      "256": "taskqueue.add(url=\"/announcement/notification\",params={\"id\":list_object_dict_list[0],\"namespace\":namespace_manager.get_namespace()},method=\"POST\",countdown=700)"
    },
    {
      "330": "taskqueue.add(url='/announcement/cron',params={\"off\":str(off),\"id\":json_input[\"id\"]}, method=\"GET\",countdown=2)"
    },
    {
      "332": "taskqueue.add(url='/announcement/cron',params={\"off\":str(off)}, method=\"GET\",countdown=2)"
    },
    {
      "792": "taskqueue.add(url=\"/announcement/notification\", method=\"POST\")"
    },
    {
      "1076": "taskqueue.add(url=\"/announcement/notification\",params={\"id\":ua_obj.announcementId,\"namespace\":namespace_manager.get_namespace()},method=\"POST\",countdown=10)"
    }
  ],
  "happierWork\\app\\modules\\attendance\\py\\utils.py": [
    {
      "3548": "taskqueue.add(url='/time-and-attendance/daily-overtime-task',countdown=5, method='POST',params={\"userList\":json.dumps([email]),\"dateFor\":getHRMSDate(date_for)})"
    },
    {
      "3554": "# \t\ttaskqueue.add(url='/time-and-attendance/daily-overtime-task',countdown=5, method='POST',params={\"userList\":json.dumps([email]),\"dateFor\":getHRMSDate(date_for)})"
    },
    {
      "3623": "taskqueue.add(url=\"/request/init/leave/task\",countdown=10,method=\"POST\",params={\"gcu\":\"happierWork\",\"requestType\":\"LEAVE\",\"data\":json.dumps(reqJson)})"
    },
    {
      "3650": "taskqueue.add(url=\"/request/init/leave/task\",countdown=10,method=\"POST\",params={\"gcu\":\"happierWork\",\"requestType\":\"LEAVE\",\"data\":json.dumps(reqJson)})"
    },
    {
      "4927": "taskqueue.add(url='/time-and-attendance/intimationnoncompliance', countdown=i * 20,"
    },
    {
      "5870": "# taskqueue.add(url='/time-and-attendance/putrecalcdata',params={\"userList\":[email],\"startDate\":getHRMSDate(dateFor),\"endDate\":getHRMSDate(dateFor)}, method=\"POST\")"
    },
    {
      "5945": "# taskqueue.add(url='/time-and-attendance/putrecalcdata',params={\"userList\":[email],\"startDate\":getHRMSDate(dateFor),\"endDate\":getHRMSDate(dateFor)}, method=\"POST\")"
    }
  ],
  "happierWork\\app\\modules\\attendance\\py\\views_allowance.py": [
    {
      "385": "taskqueue.add(url='/time-and-attendance/oddshift',method=\"POST\", params={\"date\":getHRMSDate(allowanceLastSyncDate), \"jobId\":newAllowanceJob.jobId, \"offset\":0}, countdown=100)"
    },
    {
      "428": "taskqueue.add(url='/time-and-attendance/oddshift',method=\"POST\", params={\"date\":dateForString, \"jobId\":jobId, \"offset\":offset+limit}, countdown=100)"
    },
    {
      "437": "taskqueue.add(url='/time-and-attendance/oddshift',method=\"POST\", params={\"date\":getHRMSDate(pendingAllowanceJob.dateFor), \"jobId\":pendingAllowanceJob.jobId, \"offset\":0}, countdown=100)"
    },
    {
      "454": "taskqueue.add(url='/time-and-attendance/oddshift',method=\"POST\", params={\"monthStartDate\":getHRMSDate(monthStartDate), \"monthEndDate\":getHRMSDate(monthEndDate), \"userEmail\":userEmail}, countdown=countDown)"
    },
    {
      "491": "taskqueue.add(url='/time-and-attendance/report/oddshift/task',method=\"POST\",payload=json.dumps(paramDict))"
    },
    {
      "718": "taskqueue.add(url='/time-and-attendance/daily-oddshift-task', method='POST',params={\"namespace\":namespace,\"userList\":json.dumps(user_list),\"dateFor\":getHRMSDate(dateFor)})"
    },
    {
      "720": "taskqueue.add(url='/time-and-attendance/daily-oddshift-task',method=\"GET\",params={\"namespace\":namespace,\"allUsers\":\"YES\",\"offset\":str(offset),\"dateFor\":getHRMSDate(dateFor)})"
    },
    {
      "723": "taskqueue.add(url='/time-and-attendance/daily-oddshift-task',countdown=500,method=\"GET\",params={\"namespace\":namespace,\"recalcUsers\":\"YES\"})"
    },
    {
      "755": "taskqueue.add(url='/time-and-attendance/daily-oddshift-task',method='POST',params={\"namespace\":namespace,\"userList\":json.dumps([userEmail]),\"dateFor\":getHRMSDate(dateFor)})"
    },
    {
      "760": "taskqueue.add(url='/time-and-attendance/daily-oddshift-task',method=\"GET\",params={\"namespace\":namespace,\"recalcUsers\":\"YES\",\"offset\":str(offset)})"
    },
    {
      "772": "taskqueue.add(url='/time-and-attendance/daily-oddshift-task',method=\"GET\",params={\"namespace\":aNamespace,\"allUsers\":\"YES\"})"
    },
    {
      "908": "taskqueue.add(url='/time-and-attendance/daily-oddshift-task', method='POST',params={\"namespace\":namespace,\"userList\":json.dumps(user_list),\"dateFor\":getHRMSDate(dateFor)})"
    },
    {
      "910": "taskqueue.add(url='/time-and-attendance/daily-oddshift-task',method=\"GET\",params={\"namespace\":namespace,\"allUsers\":\"YES\",\"offset\":str(offset),\"dateFor\":getHRMSDate(dateFor)})"
    },
    {
      "913": "taskqueue.add(url='/time-and-attendance/daily-oddshift-task',countdown=500,method=\"GET\",params={\"namespace\":namespace,\"recalcUsers\":\"YES\"})"
    },
    {
      "945": "taskqueue.add(url='/time-and-attendance/daily-oddshift-task',method='POST',params={\"namespace\":namespace,\"userList\":json.dumps([userEmail]),\"dateFor\":getHRMSDate(dateFor)})"
    },
    {
      "950": "taskqueue.add(url='/time-and-attendance/daily-oddshift-task',method=\"GET\",params={\"namespace\":namespace,\"recalcUsers\":\"YES\",\"offset\":str(offset)})"
    },
    {
      "965": "taskqueue.add(url='/time-and-attendance/daily-oddshift-task',method=\"GET\",params={\"namespace\":aNamespace,\"allUsers\":\"YES\"})"
    },
    {
      "1280": "taskqueue.add(url='/time-and-attendance/daily-overtime-task', method='POST',params={\"namespace\":namespace,\"userList\":json.dumps(user_list),\"dateFor\":getHRMSDate(tempDate)})"
    },
    {
      "1316": "taskqueue.add(url='/time-and-attendance/daily-overtime-task', method='POST',params={\"namespace\":namespace,\"userList\":json.dumps(user_list),\"dateFor\":getHRMSDate(dateFor)})"
    },
    {
      "1318": "taskqueue.add(url='/time-and-attendance/daily-overtime-task',method=\"GET\",params={\"namespace\":namespace,\"allUsers\":\"YES\",\"offset\":str(offset),\"dateFor\":getHRMSDate(dateFor)})"
    },
    {
      "1320": "taskqueue.add(url='/time-and-attendance/daily-overtime-task',method=\"GET\",params={\"namespace\":namespace,\"allUsers\":\"RECALC_USERS\"})"
    },
    {
      "1332": "taskqueue.add(url='/time-and-attendance/daily-overtime-task', method='POST',params={\"namespace\":namespace,\"userList\":json.dumps([a_recalc_obj.userEmail]),\"dateFor\":getHRMSDate(a_recalc_obj.dateFor)})"
    },
    {
      "1336": "taskqueue.add(url='/time-and-attendance/daily-overtime-task',countdown=5,method=\"GET\",params={\"namespace\":namespace,\"allUsers\":\"RECALC_USERS\",\"pageToken\":nextCurs})"
    },
    {
      "1349": "taskqueue.add(url='/time-and-attendance/daily-overtime-task',method=\"GET\",params={\"namespace\":aNamespace,\"allUsers\":\"YES\"})"
    },
    {
      "1654": "taskqueue.add(url='/time-and-attendance/daily-overtime-task', method='POST',params={\"namespace\":namespace,\"userList\":json.dumps(user_list),\"dateFor\":getHRMSDate(tempDate)})"
    },
    {
      "1690": "taskqueue.add(url='/time-and-attendance/daily-overtime-task', method='POST',params={\"namespace\":namespace,\"userList\":json.dumps(user_list),\"dateFor\":getHRMSDate(dateFor)})"
    },
    {
      "1692": "taskqueue.add(url='/time-and-attendance/daily-overtime-task',method=\"GET\",params={\"namespace\":namespace,\"allUsers\":\"YES\",\"offset\":str(offset),\"dateFor\":getHRMSDate(dateFor)})"
    },
    {
      "1694": "taskqueue.add(url='/time-and-attendance/daily-overtime-task',method=\"GET\",params={\"namespace\":namespace,\"allUsers\":\"RECALC_USERS\"})"
    },
    {
      "1706": "taskqueue.add(url='/time-and-attendance/daily-overtime-task', method='POST',params={\"namespace\":namespace,\"userList\":json.dumps([a_recalc_obj.userEmail]),\"dateFor\":getHRMSDate(a_recalc_obj.dateFor)})"
    },
    {
      "1710": "taskqueue.add(url='/time-and-attendance/daily-overtime-task',countdown=5,method=\"GET\",params={\"namespace\":namespace,\"allUsers\":\"RECALC_USERS\",\"pageToken\":nextCurs})"
    },
    {
      "1727": "taskqueue.add(url='/time-and-attendance/daily-overtime-task',method=\"GET\",params={\"namespace\":aNamespace,\"allUsers\":\"YES\"})"
    },
    {
      "2035": "taskqueue.add(url='/time-and-attendance/daily-nightshift', method='POST',params={\"namespace\":namespace,\"userList\":json.dumps(user_list),\"dateFor\":getHRMSDate(tempDate)})"
    },
    {
      "2064": "taskqueue.add(url='/time-and-attendance/daily-nightshift', method='POST',params={\"namespace\":namespace,\"userList\":json.dumps(user_list),\"dateFor\":getHRMSDate(dateFor)})"
    },
    {
      "2066": "taskqueue.add(url='/time-and-attendance/daily-nightshift',countdown=int(offset/20),method=\"GET\",params={\"namespace\":namespace,\"allUsers\":\"YES\",\"offset\":str(offset),\"dateFor\":getHRMSDate(dateFor)})"
    },
    {
      "2068": "taskqueue.add(url='/time-and-attendance/daily-nightshift',countdown=30,method=\"GET\",params={\"namespace\":namespace,\"allUsers\":\"RECALC_USERS\"})"
    },
    {
      "2082": "taskqueue.add(url='/time-and-attendance/daily-nightshift', method='POST',params={\"namespace\": namespace, \"userList\": json.dumps([a_recalc_obj.userEmail]),\"dateFor\": getHRMSDate(a_recalc_obj.dateFor)})"
    },
    {
      "2086": "taskqueue.add(url='/time-and-attendance/daily-nightshift', countdown=5, method=\"GET\", params={\"namespace\": namespace, \"allUsers\": \"RECALC_USERS\", \"pageToken\": nextCurs})"
    },
    {
      "2101": "taskqueue.add(url='/time-and-attendance/daily-nightshift',method=\"GET\",params={\"namespace\":aNamespace,\"allUsers\":\"YES\"})"
    },
    {
      "2105": "# taskqueue.add(url='/time-and-attendance/daily-nightshift',method=\"GET\",params={\"namespace\":\"747b4d70-9f2d-4633-88ba-0e764ad69cfa\",\"allUsers\":\"YES\"})"
    },
    {
      "2260": "taskqueue.add(url='/time-and-attendance/nightshift/eligibilty', method='POST',params={\"namespace\":namespace,\"userList\":json.dumps(user_list),\"dateFor\":getHRMSDate(tempDate)})"
    },
    {
      "2289": "taskqueue.add(url='/time-and-attendance/nightshift/eligibilty', method='POST',params={\"namespace\":namespace,\"userList\":json.dumps(user_list),\"dateFor\":getHRMSDate(dateFor)})"
    },
    {
      "2291": "taskqueue.add(url='/time-and-attendance/nightshift/eligibilty',method=\"GET\",params={\"namespace\":namespace,\"allUser\":\"YES\",\"offset\":str(offset),\"dateFor\":getHRMSDate(dateFor)})"
    },
    {
      "2305": "# \ttaskqueue.add(url='/attendance/nightshift/eligiblity',method=\"GET\",params={\"namespace\":aNamespace,\"allUser\":\"YES\"})"
    },
    {
      "2310": "taskqueue.add(url='/time-and-attendance/nightshift/eligibilty', method=\"GET\",params={\"namespace\":\"747b4d70-9f2d-4633-88ba-0e764ad69cfa\", \"allUser\": \"YES\"})"
    }
  ],
  "happierWork\\app\\modules\\attendance\\py\\views_attendance_reports.py": [
    {
      "95": "taskqueue.add(url='/time-and-attendance/report/actiontaken',method=\"POST\",payload=json.dumps(params))"
    },
    {
      "228": "taskqueue.add(url='/time-and-attendance/report/absent-task', method=\"POST\", payload=json.dumps(params))"
    },
    {
      "388": "taskqueue.add(url='/time-and-attendance/report/absent-task',method=\"POST\",payload=json.dumps(params))"
    },
    {
      "480": "taskqueue.add(url='/time-and-attendance/report/masigracewhole',method=\"POST\",payload=json.dumps(params))"
    },
    {
      "498": "taskqueue.add(url='/time-and-attendance/report/masigracewhole',method=\"POST\",payload=requestBody)"
    },
    {
      "558": "taskqueue.add(url='/time-and-attendance/report/masigracewhole', method=\"POST\", payload=json.dumps(params))"
    },
    {
      "608": "taskqueue.add(url='/time-and-attendance/report/missed-punch-task',method=\"POST\",payload=json.dumps(params))"
    },
    {
      "676": "taskqueue.add(url='/time-and-attendance/report/missed-punch-task',method=\"POST\",payload=json.dumps(params))"
    },
    {
      "773": "taskqueue.add(url='/time-and-attendance/report/missed-punch-task',method=\"POST\",payload=json.dumps(params))"
    },
    {
      "831": "taskqueue.add(url='/time-and-attendance/logs/download-task', method=\"PUT\", payload=requestBody,"
    },
    {
      "837": "# taskqueue.add(url='/time-and-attendance/logs/download', method=\"PUT\", payload=self.request.body, params={\"currentUser\":\"vishal.soriya@searce.com\"})"
    },
    {
      "2497": "taskqueue.add(url='/time-and-attendance/logs/download-task',method=\"PUT\", payload=json.dumps(para_dict))"
    },
    {
      "2548": "taskqueue.add(url='/time-and-attendance/logs/download-task',method=\"PUT\", payload=json.dumps(para_dict))"
    },
    {
      "2607": "taskqueue.add(url='/time-and-attendance/logs/download-task',method=\"PUT\", payload=json.dumps(para_dict))"
    },
    {
      "2694": "taskqueue.add(url='/time-and-attendance/logs/download-task', method=\"PUT\", payload=json.dumps(para_dict))"
    },
    {
      "2749": "taskqueue.add(url='/time-and-attendance/logs/download-task', method=\"PUT\","
    },
    {
      "2826": "taskqueue.add(url='/time-and-attendance/logs/download-task', method=\"PUT\", payload=json.dumps(para_dict))"
    },
    {
      "3142": "taskqueue.add(url='/time-and-attendance/logs/downloadreport', method=\"PUT\", payload=json.dumps(payload_data), params={\"currentUser\":str(self.request.get(\"currentUser\"))},target=\"happierhr.heavy-module\")"
    },
    {
      "3351": "taskqueue.add(url='/time-and-attendance/report/overtime',method=\"POST\",payload=json.dumps(params))"
    },
    {
      "3493": "taskqueue.add(url='/time-and-attendance/report/overtime',method=\"POST\",payload=json.dumps(params))"
    },
    {
      "3696": "taskqueue.add(url='/time-and-attendance/report/overtimefreeze', method=\"POST\", payload=json.dumps(paramDict))"
    },
    {
      "3934": "taskqueue.add(url='/time-and-attendance/report/overtimefreeze', countdown=int(5), method=\"POST\","
    },
    {
      "4052": "taskqueue.add(url='/time-and-attendance/report/nightshift',method=\"POST\",payload=json.dumps(params))"
    },
    {
      "4182": "# taskqueue.add(url='/time-and-attendance/report/nightshift',method=\"POST\",payload=json.dumps(params))"
    },
    {
      "4200": "taskqueue.add(url='/time-and-attendance/report/nightshift', method=\"POST\", payload=json.dumps(params))"
    },
    {
      "4408": "taskqueue.add(url='/time-and-attendance/report/nightshiftfreeze', countdown=int(5), method=\"POST\","
    },
    {
      "4655": "taskqueue.add(url='/time-and-attendance/report/nightshiftfreeze', countdown=int(5), method=\"POST\","
    },
    {
      "5319": "taskqueue.add(url='/time-and-attendance/report/cronreport', method='PUT', countdown=random.randint(3,20),  payload=json.dumps({'namespace': namespace_manager.get_namespace(), 'key': config_entity.key.urlsafe(), 'user_id': user_id}))"
    },
    {
      "5328": "taskqueue.add(url='/time-and-attendance/report/cron-task',method=\"POST\")"
    },
    {
      "5357": "taskqueue.add(url='/time-and-attendance/report/cron-task', method='POST',params={'namespace': namespace_manager.get_namespace(),'recursive':'YES','key': config_entity.key.urlsafe()})"
    },
    {
      "5411": "taskqueue.add(url='/time-and-attendance/report/cron-task',method='POST',countdown=15,params={'namespace': namespace_manager.get_namespace(), 'key': key,'offset':str(offset),'recursive':'YES'})"
    },
    {
      "5482": "taskqueue.add(url='/time-and-attendance/report/cron-task', method='POST',params={'namespace': namespace_manager.get_namespace(),'recursive':'YES','key': config_entity.key.urlsafe()})"
    },
    {
      "7683": "taskqueue.add(url='/time-and-attendance/report/cronreport', method='PUT', countdown=5, payload=json.dumps(params))"
    },
    {
      "7805": "taskqueue.add(url='/time-and-attendance/report/cronreport', method='POST', countdown=5, payload=json.dumps(params))"
    },
    {
      "7977": "taskqueue.add(url='/time-and-attendance/report/cronreport', method='POST', countdown=5, payload=json.dumps(params))"
    },
    {
      "8024": "taskqueue.add(url='/time-and-attendance/reducedwork-report',method=\"POST\",params={\"namespace\":aNamespace})"
    },
    {
      "8112": "# taskqueue.add(url='/time-and-"
    },
    {
      "8155": "taskqueue.add(url='/time-and-attendance/request/report-task', method='POST', countdown=5, payload=json.dumps(paraDict))"
    },
    {
      "8317": "taskqueue.add(url='/time-and-attendance/request/report-task', method='POST', countdown=5, payload=json.dumps(paraDict))"
    },
    {
      "8433": "taskqueue.add(url='/time-and-attendance/request/report-task', method='POST', countdown=5, payload=json.dumps(paraDict))"
    },
    {
      "8577": "taskqueue.add(url='/time-and-attendance/roster/shiftmaster', method=\"POST\",params={\"currentUser\": self.currentUser, \"spreadsheetId\": gs_res[\"spreadsheetId\"]})"
    },
    {
      "8715": "taskqueue.add(url='/time-and-attendance/report/yearreport-task', method='POST', countdown=1,payload=json.dumps(para_dict))"
    },
    {
      "9232": "taskqueue.add(url='/time-and-attendance/report/yearreport-task', method='POST', countdown=5,payload=json.dumps(para_dict))"
    },
    {
      "9318": "taskqueue.add(url='/time-and-attendance/report/wsmismatch', method='PUT', countdown=5, payload=json.dumps(params))"
    },
    {
      "9374": "taskqueue.add(url='/time-and-attendance/report/duplicates-task',countdown=i,method=\"POST\",payload=json.dumps(paraDict))"
    },
    {
      "9484": "taskqueue.add(url='/time-and-attendance/workhours-task',countdown=10,method='GET', params={\"namespace\":namespace_manager.get_namespace(),\"startDate\":getHRMSDate(fromDate),\"endDate\":getHRMSDate(fromDate),\"userEmail\":userEmail})"
    },
    {
      "9517": "taskqueue.add(url='/time-and-attendance/report/duplicates-task',method=\"POST\",payload=json.dumps(para_dict))"
    },
    {
      "9606": "taskqueue.add(url='/time-and-attendance/report/duplicates-task',method=\"POST\",payload=json.dumps(para_dict))"
    }
  ],
  "happierWork\\app\\modules\\attendance\\py\\views_bigquery.py": [
    {
      "296": "taskqueue.add(queue_name=BIG_QUERY_QUEUE,countdown=500*index, url='/time-and-attendance/att/sync-task', method=\"PUT\",params={\"namespace\":aNamespace}, payload=json.dumps({\"changeDates\":[aSyncDate]}))"
    },
    {
      "348": "taskqueue.add(queue_name=BIG_QUERY_QUEUE,countdown=int(offset/3), url='/time-and-attendance/att/sync-task', method=\"POST\",params={\"namespace\":namespace,\"dataSetName\":DATASET_NAME,\"tableName\":aTableName,\"startDate\":getHRMSDate(dateRange[0]),\"endDate\":getHRMSDate(dateRange[1]),\"userList\":json.dumps(userList)})"
    },
    {
      "352": "taskqueue.add(queue_name=BIG_QUERY_QUEUE,countdown=20, url='/time-and-attendance/att/sync-task', method=\"PUT\",params={\"namespace\":namespace,\"offset\":str(offset)}, payload=json.dumps({\"changeDates\":requestBody[\"changeDates\"]}))"
    },
    {
      "571": "taskqueue.add(queue_name=BIG_QUERY_QUEUE,countdown=500*index, url='/time-and-attendance/att/sync-task', method=\"PUT\",params={\"namespace\":aNamespace}, payload=json.dumps({\"changeDates\":[aSyncDate]}))"
    },
    {
      "644": "taskqueue.add(queue_name=BIG_QUERY_QUEUE,countdown=int(offset/3), url='/time-and-attendance/att/sync-task', method=\"POST\",params={\"namespace\":namespace,\"dataSetName\":DATASET_NAME,\"tableName\":aTableName,\"startDate\":getHRMSDate(dateRange[0]),\"endDate\":getHRMSDate(dateRange[1]),\"userList\":json.dumps(userList)})"
    },
    {
      "648": "taskqueue.add(queue_name=BIG_QUERY_QUEUE,countdown=10, url='/time-and-attendance/att/sync-task', method=\"PUT\",params={\"namespace\":namespace,\"offset\":str(offset)}, payload=json.dumps({\"changeDates\":requestBody[\"changeDates\"]}))"
    }
  ],
  "happierWork\\app\\modules\\attendance\\py\\views_intimation.py": [
    {
      "436": "#~ taskqueue.add(url=\"/notifications/triggers\", method=\"GET\", params={\"requestType\":\"LEAVE_INTIMATION\",\"triggerType\":\"LEAVE_INTIMATION\",\"userEmail\":non_compliance_obj.UserEmail,\"inititorUserEmail\":SYSTEM_NAME,\"nonComplianceId\":non_compliance_obj.MasterNonComplianceID})"
    }
  ],
  "happierWork\\app\\modules\\attendance\\py\\views_noncompliance.py": [
    {
      "107": "taskqueue.add(url='/time-and-attendance/internal/cron-scheduler-task',method=\"POST\")"
    },
    {
      "138": "taskqueue.add(queue_name=TQNAME,url='/time-and-attendance/usernoncomplianceforday-task',method=\"GET\", params={\"date\":getHRMSDate(nowTime.date()), \"jobId\":newNCJob.JobId}, countdown=300)"
    },
    {
      "504": "# taskqueue.add(queue_name=TQNAME,url='/time-and-attendance/nc-manual',countdown=5,method=\"GET\",params={\"jobId\":jobId})"
    },
    {
      "505": "taskqueue.add(url='/time-and-attendance/nc-manual',countdown=5,method=\"GET\",params={\"jobId\":jobId})"
    },
    {
      "528": "taskqueue.add(url='/time-and-attendance/close-requests-cron-task',method=\"POST\")"
    },
    {
      "577": "taskqueue.add(url='/request/payperiod-close-request', method='PUT',payload=json.dumps({\"userEmailList\":(user_list),\"closeDate\":getHRMSDate(closeDate)}))"
    },
    {
      "579": "taskqueue.add(url='/time-and-attendance/close-requests-cron-task',countdown=4,method=\"POST\",params={\"offset\":str(offset)})"
    },
    {
      "607": "taskqueue.add(queue_name=TQNAME,url='/time-and-attendance/nc-manual',countdown=int(offset/5),method=\"POST\",params={\"jobId\":para_dict[\"jobId\"],\"calcWhat\":\"CLOSE_REQ\",\"userList\":json.dumps(userList[offset:offset+limit])})"
    },
    {
      "611": "taskqueue.add(queue_name=TQNAME,url='/time-and-attendance/nc-manual',method=\"POST\",params={\"jobId\":para_dict[\"jobId\"],\"calcWhat\":\"CLOSE_REQ\",\"userList\":json.dumps(userList)})"
    },
    {
      "654": "# taskqueue.add(url='/request/payperiod-close-request', method='POST',payload={\"userEmailList\":json.dumps(userList),\"closeDate\":getHRMSDate(closeDate)})"
    },
    {
      "656": "taskqueue.add(queue_name=TQNAME,url='/time-and-attendance/nc-manual',method=\"POST\",params={\"jobId\":jobId,\"userList\":json.dumps(userList),\"offset\":str(offset)})"
    },
    {
      "658": "taskqueue.add(queue_name=TQNAME,url='/time-and-attendance/nc-manual',method=\"POST\",params={\"jobId\":jobId,\"userList\":json.dumps(userList),\"calcWhat\":\"DAILY_ATTENDANCE\"})"
    },
    {
      "660": "# taskqueue.add(url='/request/payperiod-close-request', method='POST',payload={\"userEmailList\":json.dumps(userList),\"closeDate\":getHRMSDate(closeDate)})"
    },
    {
      "661": "taskqueue.add(queue_name=TQNAME,url='/time-and-attendance/nc-manual',countdown=20*len(userList),method=\"POST\",params={\"jobId\":jobId,\"userList\":json.dumps(userList),\"calcWhat\":\"DAILY_ATTENDANCE\"})"
    },
    {
      "683": "taskqueue.add(queue_name=TQNAME,url='/time-and-attendance/nc-manual',method=\"POST\",params={\"jobId\":jobId,\"userList\":json.dumps(userList),\"pageToken\":nextCurs,\"calcWhat\":\"DAILY_ATTENDANCE\"})"
    },
    {
      "685": "taskqueue.add(queue_name=TQNAME,url='/time-and-attendance/nc-manual',countdown=20,method=\"POST\",params={\"jobId\":jobId,\"userList\":json.dumps(userList),\"calcWhat\":\"DAILY_WORK_HOURS\"})"
    },
    {
      "698": "taskqueue.add(queue_name=TQNAME,url='/time-and-attendance/nc-manual',countdown=5*len(userList),method=\"POST\",params={\"jobId\":jobId,\"userList\":json.dumps(userList),\"calcWhat\":\"DAILY_WORK_HOURS\"})"
    },
    {
      "717": "taskqueue.add(queue_name=TQNAME,url='/time-and-attendance/nc-manual',countdown=1,method=\"POST\",params={\"jobId\":jobId,\"userList\":json.dumps(userList),\"pageToken\":nextCurs,\"calcWhat\":\"DAILY_WORK_HOURS\"})"
    },
    {
      "719": "taskqueue.add(queue_name=TQNAME,url='/time-and-attendance/nc-manual',countdown=20*len(userList),method=\"POST\",params={\"jobId\":jobId,\"userList\":json.dumps(userList),\"calcWhat\":\"DAILY_NON_COMPLIANCE\"})"
    },
    {
      "732": "taskqueue.add(queue_name=TQNAME,url='/time-and-attendance/nc-manual',countdown=10*len(userList),method=\"POST\",params={\"jobId\":jobId,\"userList\":json.dumps(userList),\"calcWhat\":\"DAILY_NON_COMPLIANCE\"})"
    },
    {
      "752": "taskqueue.add(url='/time-and-attendance/nc-userwise', method='POST',params={\"jobId\":jobId,\"userEmail\":userEmail,\"startDate\":getHRMSDate(ncJob.startDate),\"endDate\":getHRMSDate(ncJob.endDate)})"
    },
    {
      "754": "taskqueue.add(queue_name=TQNAME,url='/time-and-attendance/nc-manual',method=\"POST\",params={\"jobId\":jobId,\"userList\":json.dumps(userList),\"offset\":str(offset),\"calcWhat\":\"DAILY_NON_COMPLIANCE\"})"
    },
    {
      "762": "taskqueue.add(url='/notifications/triggers',countdown=30,method=\"GET\",params={\"jobId\":jobId,\"actionedBy\":ncJob.actionedBy,\"requestType\":\"MANUAL_NC_COMPLED\",\"triggerType\":\"MANUAL_NC_COMPLED\"})"
    },
    {
      "765": "taskqueue.add(url='/time-and-attendance/nc-userwise', method='POST',params={\"jobId\":jobId,\"userEmail\":aUser,\"startDate\":getHRMSDate(ncJob.startDate),\"endDate\":getHRMSDate(ncJob.endDate)})"
    },
    {
      "774": "taskqueue.add(url='/notifications/triggers',countdown=30,method=\"GET\",params={\"jobId\":jobId,\"actionedBy\":ncJob.actionedBy,\"requestType\":\"MANUAL_NC_COMPLED\",\"triggerType\":\"MANUAL_NC_COMPLED\"})"
    },
    {
      "781": "taskqueue.add(queue_name=TQNAME,url='/time-and-attendance/nc-manual',method=\"GET\",params={\"jobId\":inCompleteObj.jobId})"
    },
    {
      "800": "taskqueue.add(url='/time-and-attendance/nc-userwise', method='POST', params=params)"
    },
    {
      "933": "taskqueue.add(queue_name=TQNAME,url='/time-and-attendance/usernoncomplianceforday-task',method=\"GET\", params={\"date\":getHRMSDate(ncLastSyncDateTime), \"jobId\":newNCJob.JobId}, countdown=300)"
    },
    {
      "969": "taskqueue.add(url='/time-and-attendance/userworkhoursforday-task',method=\"POST\",params={\"calcWhat\":\"SET_DUMMY_RECORDS\"})"
    },
    {
      "1013": "taskqueue.add(url='/time-and-attendance/userworkhoursforday-task',method=\"POST\",params={\"calcWhat\":\"DAILY_ATTENDANCE\"})"
    },
    {
      "1033": "taskqueue.add(url='/time-and-attendance/userworkhoursforday-task',countdown=random.randint(1,8)*random.randint(4,8),method=\"POST\",params={\"pageToken\":nextCurs,\"calcWhat\":\"DAILY_ATTENDANCE\"})"
    },
    {
      "1036": "taskqueue.add(url='/time-and-attendance/userworkhoursforday-task',countdown=120,method=\"POST\",params={\"calcWhat\":\"DAILY_WORK_HOURS\"})"
    },
    {
      "1048": "taskqueue.add(url='/time-and-attendance/userworkhoursforday-task',countdown=random.randint(1,8)*random.randint(4,8),method=\"POST\",params={\"pageToken\":nextCurs,\"calcWhat\":\"DAILY_WORK_HOURS\"})"
    },
    {
      "1059": "# \ttaskqueue.add(url='/time-and-attendance/userworkhoursforday-task',countdown=2,method=\"POST\",params={\"pageToken\":nextCurs,\"calcWhat\":\"DAILY_WORK_HOURS\"})"
    },
    {
      "1104": "taskqueue.add(queue_name=TQNAME,url='/time-and-attendance/usernoncomplianceforday-task',method=\"POST\",params={\"jobId\":jobId,\"calcWhat\":\"DAILY_ATTENDANCE\",\"cronDate\":getHRMSDate(todaysdate)})"
    },
    {
      "1160": "taskqueue.add(queue_name=TQNAME,url='/time-and-attendance/usernoncomplianceforday-task',countdown=random.randint(1,8)*random.randint(4,8),method=\"POST\",params={\"jobId\":jobId,\"pageToken\":nextCurs,\"calcWhat\":\"DAILY_ATTENDANCE\",\"cronDate\":para_dict[\"cronDate\"]})"
    },
    {
      "1165": "taskqueue.add(queue_name=TQNAME,url='/time-and-attendance/usernoncomplianceforday-task',countdown=30,method=\"POST\",params={\"jobId\":jobId,\"calcWhat\":\"DAILY_WORK_HOURS\",\"cronDate\":para_dict[\"cronDate\"]})"
    },
    {
      "1186": "taskqueue.add(queue_name=TQNAME,url='/time-and-attendance/usernoncomplianceforday-task',countdown=random.randint(1,4)*random.randint(0,8),method=\"POST\",params={\"jobId\":jobId,\"pageToken\":nextCurs,\"calcWhat\":\"DAILY_WORK_HOURS\",\"cronDate\":para_dict[\"cronDate\"]})"
    },
    {
      "1192": "taskqueue.add(queue_name=TQNAME,url='/time-and-attendance/usernoncomplianceforday-task',countdown=30,method=\"POST\",params={\"jobId\":jobId,\"calcWhat\":\"DAILY_NON_COMPLIANCE\",\"cronDate\":para_dict[\"cronDate\"]})"
    },
    {
      "1215": "taskqueue.add(queue_name=TQNAME,url='/time-and-attendance/usernoncomplianceforday-task',countdown=random.randint(1,4)*random.randint(0,8),method=\"POST\",params={\"jobId\":jobId,\"pageToken\":nextCurs,\"calcWhat\":\"DAILY_NON_COMPLIANCE\",\"cronDate\":para_dict[\"cronDate\"]})"
    },
    {
      "1220": "taskqueue.add(queue_name=TQNAME,url='/time-and-attendance/usernoncomplianceforday-task',countdown=30,method=\"POST\",params={\"jobId\":jobId,\"calcWhat\":\"MARK_ABSENT_USERS\",\"cronDate\":para_dict[\"cronDate\"]})"
    },
    {
      "1243": "taskqueue.add(queue_name=TQNAME,url='/time-and-attendance/usernoncomplianceforday-task',countdown=random.randint(4,8)*random.randint(0,3),method=\"POST\", params={\"jobId\":jobId,\"offset\":offset,\"cronDate\":para_dict[\"cronDate\"],\"calcWhat\":\"MARK_ABSENT_USERS\"})"
    },
    {
      "1263": "taskqueue.add(queue_name=TQNAME,url='/time-and-attendance/usernoncomplianceforday-task',method=\"POST\", params={\"offset\":0, \"cronDate\":getHRMSDate(pendingNonComplianceJob.DateFor),\"jobId\":pendingNonComplianceJob.JobId,\"calcWhat\":\"DAILY_ATTENDANCE\"}, countdown=30)"
    },
    {
      "1280": "taskqueue.add(url=\"/notifications/attendance/triggers\",countdown=int(offset/50), method=\"GET\", params=params)"
    },
    {
      "1304": "# \ttaskqueue.add(queue_name=TQNAME,url='/time-and-attendance/usernoncomplianceforday',countdown=1,method=\"POST\", params={\"jobId\":jobId,\"offset\":offset,\"totalUserCount\":str(totalUserCount),\"cronDate\":para_dict[\"cronDate\"],\"calcWhat\":\"MARK_ABSENT_USERS\"})"
    },
    {
      "1318": "# \t\ttaskqueue.add(queue_name=TQNAME,url='/time-and-attendance/usernoncomplianceforday',method=\"POST\", params={\"offset\":0, \"cronDate\":getHRMSDate(pendingNonComplianceJob.DateFor),\"jobId\":pendingNonComplianceJob.JobId,\"calcWhat\":\"DAILY_ATTENDANCE\"}, countdown=30)"
    },
    {
      "2511": "taskqueue.add(url=\"/notifications/attendance/triggers\", method=\"GET\", params=params)"
    },
    {
      "4632": "taskqueue.add(url=\"/notifications/attendance/triggers\", method=\"GET\", params=params)"
    }
  ],
  "happierWork\\app\\modules\\attendance\\py\\views_tna.py": [
    {
      "1986": "taskqueue.add(url='/time-and-attendance/usertnadataforday', method='POST', params=params)"
    }
  ],
  "happierWork\\app\\modules\\attendance\\py\\views_userattendance.py": [
    {
      "250": "taskqueue.add(url='/time-and-attendance/internal/addtodb',method=\"POST\", params=return_data)"
    },
    {
      "366": "taskqueue.add(url='/time-and-attendance/userattendanceforday',params={\"userList\":json.dumps([a_user]),\"startDate\":getHRMSDate(startDate),\"endDate\":getHRMSDate(endDate),\"changeFlag\":change_flag}, method=\"POST\")"
    },
    {
      "493": "#~ taskqueue.add(url=\"/benefits/trackingdata\",method=\"POST\",params=return_dict)"
    },
    {
      "1092": "# taskqueue.add(url='/time-and-attendance/autoregularise', method=\"POST\", payload=json.dumps(para_dict))"
    },
    {
      "1094": "taskqueue.add(url='/time-and-attendance/autoregularise', method=\"POST\", payload=self.request.body)"
    },
    {
      "1152": "taskqueue.add(url=\"/notifications/triggers\",countdown=10,method=\"GET\",params={\"triggerType\":\"REGULARISATION_AUTO_APPROVED\",\"requestType\":\"REGULARISATION_AUTO_APPROVED\",\"requestId\":request_id,\"workProfileId\":\"WORK_PROFILE_ID\",\"userEmail\":a_user,\"inititorUserEmail\":input_dict[\"Initiator\"],\"fromDate\":fromdate,\"toDate\":todate})"
    },
    {
      "1247": "taskqueue.add(url=\"/time-and-attendance/webclock\",method=\"POST\",params=para_dict)"
    },
    {
      "1250": "taskqueue.add(url=\"/time-and-attendance/webclock\",method=\"GET\",params=para_dict)"
    },
    {
      "1263": "taskqueue.add(url=\"/time-and-attendance/webclock\",method=\"POST\",params=para_dict)"
    },
    {
      "1266": "taskqueue.add(url=\"/time-and-attendance/webclock\",method=\"GET\",params=para_dict)"
    },
    {
      "1317": "taskqueue.add(url=\"/time-and-attendance/webclock\",method=\"POST\",params=para_dict)"
    },
    {
      "1333": "taskqueue.add(url=\"/time-and-attendance/webclock\",method=\"GET\",params=para_dict)"
    },
    {
      "1360": "taskqueue.add(url=\"/time-and-attendance/webclock\",method=\"POST\",params=para_dict)"
    },
    {
      "1394": "taskqueue.add(url=\"/time-and-attendance/webclock\",method=\"GET\",params=para_dict)"
    },
    {
      "1764": "taskqueue.add(url='/time-and-attendance/internal/addtodb',method=\"POST\", params=return_data)"
    },
    {
      "1861": "taskqueue.add(url='/time-and-attendance/internal/pull',method=\"POST\", params=params, countdown=countdown)"
    },
    {
      "1993": "taskqueue.add(url='/time-and-attendance/internal/addtodb',method=\"POST\", params=return_data)"
    },
    {
      "2008": "taskqueue.add(url='/time-and-attendance/internal/pull',method=\"POST\", params=return_data)"
    },
    {
      "2016": "taskqueue.add(url='/time-and-attendance/internal/pull',method=\"POST\", params=return_data)"
    },
    {
      "2025": "taskqueue.add(url='/time-and-attendance/internal/pull',method=\"POST\", params=return_data)"
    },
    {
      "2055": "taskqueue.add(url='/time-and-attendance/internal/pull',method=\"POST\", params=return_data)"
    },
    {
      "2068": "taskqueue.add(url='/time-and-attendance/internal/pull',method=\"POST\", params=return_data)"
    },
    {
      "2090": "taskqueue.add(url=\"/notifications/triggers\", method=\"GET\", params=params)"
    },
    {
      "2136": "taskqueue.add(url='/time-and-attendance/internal/addtodb',method=\"POST\", params=return_data)"
    },
    {
      "2184": "taskqueue.add(url='/time-and-attendance/internal/addtodb',method=\"POST\", params=return_data)"
    },
    {
      "2194": "taskqueue.add(url=\"/notifications/other/triggers\",countdown=30,method=\"GET\", params=params)"
    },
    {
      "2211": "taskqueue.add(url=\"/notifications/other/triggers\",countdown=30,method=\"GET\", params=params)"
    },
    {
      "2230": "taskqueue.add(url='/time-and-attendance/internal/addtodb',method=\"POST\", params=return_data)"
    },
    {
      "2250": "taskqueue.add(url=\"/notifications/triggers\",countdown=30,method=\"GET\", params=params)"
    },
    {
      "2405": "taskqueue.add(url='/time-and-attendance/workhours-task',countdown=i, method='GET',params={\"namespace\":namespace_manager.get_namespace(),\"userEmail\":user_email,\"startDate\":getHRMSDate(startDate),\"endDate\":getHRMSDate(endDate),\"changeFlag\":\"WEB_CLOCKING\"})"
    },
    {
      "2915": "taskqueue.add(url='/time-and-attendance/regularisation-types', method=\"POST\", payload=json.dumps({\"offset\":str(offset),\"totalWS\":str(totalWS),\"regularisationTypes\":regularisationTypes}))"
    },
    {
      "3140": "taskqueue.add(url='/time-and-attendance/userattendanceforday',method=\"POST\",params=para_dict)"
    },
    {
      "3180": "taskqueue.add(url='/time-and-attendance/putrecalcdata',params={\"userList\":json.dumps(all_user_list),\"skipDateHash\":json.dumps(skipDateHash),\"startDate\":getHRMSDate(startDate),\"endDate\":getHRMSDate(endDate),\"changeFlag\":changeFlag}, method=\"POST\")"
    },
    {
      "3465": "taskqueue.add(url='/time-and-attendance/putrecalcdata', method='POST', params=params)"
    },
    {
      "3515": "taskqueue.add(url='/time-and-attendance/putrecalcdata',countdown=i*3, method='POST', params={\"userList\":json.dumps([aUser]),\"skipDateHash\":json.dumps(skipDateHash),\"startDate\":getHRMSDate(startDate),\"endDate\":getHRMSDate(endDate),\"changeFlag\":para_dict[\"changeFlag\"]})"
    },
    {
      "3638": "taskqueue.add(url='/time-and-attendance/wsdetails/backup-task',method=\"POST\", params={\"namespace\":aNamespace})"
    },
    {
      "3679": "taskqueue.add(url='/time-and-attendance/wsdetails/backup-task',method=\"POST\",params={\"namespace\":namespace,\"offset\":str(offset)})"
    },
    {
      "3709": "taskqueue.add(url='/time-and-attendance/userattendanceforday', method='GET',params={\"namespace\":namespace,\"userList\":json.dumps([userEmail]),\"changeFlag\":changeFlag,\"startDate\":getHRMSDate(startDate),\"endDate\":getHRMSDate(endDate)})"
    },
    {
      "3712": "taskqueue.add(url='/time-and-attendance/workhours-task',countdown=30,method='POST', params=params)"
    },
    {
      "4045": "taskqueue.add(url='/time-and-attendance/roster/upload',countdown=2,method=\"POST\",params={\"jobId\":jobId})"
    },
    {
      "4365": "taskqueue.add(url='/notifications/attendance/triggers',method=\"POST\",countdown=30,payload=json.dumps(paramDict))"
    },
    {
      "4370": "taskqueue.add(url='/time-and-attendance/roster/upload',countdown=2,method=\"POST\",params={\"jobId\":pendingObj.jobId})"
    },
    {
      "4424": "taskqueue.add(url='/time-and-attendance/internal/addtodb', method=\"POST\", params=returnData)"
    },
    {
      "4520": "taskqueue.add(url='/time-and-attendance/internal/addtodb', method=\"POST\", params=returnData)"
    }
  ],
  "happierWork\\app\\modules\\bot\\py\\views.py": [
    {
      "116": "taskqueue.add(url=\"/request/cancel/task\", method=\"POST\", params=result)"
    },
    {
      "333": "taskqueue.add(url=\"/request/init/leave/task\",countdown=1,method=\"POST\",params=send_param)"
    },
    {
      "397": "taskqueue.add(url=\"/request/init/regularisation/task\",params = {\"gcu\": logged_user ,\"data\": json.dumps(new_request_dict),\"requestType\":\"OTHER\"},method=\"POST\")"
    }
  ],
  "happierWork\\app\\modules\\happierControl\\py\\patches.py": [
    {
      "41": "#taskqueue.add(url=\"/notifications/triggers\", countdown=30,method=\"GET\", params=params)"
    },
    {
      "184": "taskqueue.add(url='/people/profiles', countdown=20, method=\"POST\","
    },
    {
      "199": "taskqueue.add(url=\"/happierControl/sso/move_event_logs_to_bigquery\", method=\"POST\","
    },
    {
      "399": "taskqueue.add(url=\"/happierControl/sso/AddHtmlToPredefinedLoginDesigns\", method=\"POST\","
    },
    {
      "609": "taskqueue.add(url='/happierControl/sso/getActiveUserNumber', method=\"POST\","
    },
    {
      "665": "taskqueue.add(url='/happierControl/sso/getActiveUserNumber', method=\"POST\","
    },
    {
      "676": "taskqueue.add(url='/happierControl/sso/CreateUsers', method=\"POST\","
    },
    {
      "739": "taskqueue.add(url='/happierControl/sso/CreateUsers', method=\"POST\","
    },
    {
      "747": "#         taskqueue.add(url='/happierControl/sso/getUsersEmailAlias', method=\"POST\","
    },
    {
      "848": "taskqueue.add(url='/happierControl/sso/getUsersEmailAlias', method=\"POST\","
    },
    {
      "893": "taskqueue.add(url='/happierControl/sso/getUsersEmailAlias', method=\"POST\","
    },
    {
      "926": "taskqueue.add(url='/happierControl/sso/test', method=\"POST\", params={\"namespace\":aDomain.Namespace}, countdown=countDown)"
    },
    {
      "1017": "taskqueue.add(url='/happierControl/sso/userFunctions', method=\"POST\","
    },
    {
      "1056": "taskqueue.add(url=\"/users/upload/sync\", method='POST',"
    },
    {
      "1202": "taskqueue.add(url=\"/happierControl/sso/dhavalTestHandler\", method=\"POST\", params=dict(self.request.params))"
    },
    {
      "1360": "taskqueue.add(url=\"/happierControl/sso/passwordMigration\", method=\"GET\", params = dict(self.request.params))"
    },
    {
      "1398": "taskqueue.add(url=\"/happierControl/sso/passwordMigration\", method=\"GET\", params = dict(self.request.params))"
    },
    {
      "1597": "# \t\t\t\ttaskqueue.add(url=url, params=param_dict, method=\"PUT\")"
    }
  ],
  "happierWork\\app\\modules\\happierControl\\py\\utils.py": [
    {
      "440": "#     taskqueue.add(url=\"/hSafe/sso/invalidatesession\","
    },
    {
      "1380": "taskqueue.add(url=\"/notifications/sso/triggers\", countdown=20, method=\"GET\", params=notif_params)"
    },
    {
      "2015": "taskqueue.add(url=\"/notifications/triggers\", countdown=30, method=\"GET\", params=params)"
    },
    {
      "2185": "taskqueue.add(url=\"/notifications/sso/triggers\", method=\"POST\", params=params)"
    },
    {
      "2209": "taskqueue.add(url=\"/notifications/sso/triggers\", method=\"POST\", params=params)"
    }
  ],
  "happierWork\\app\\modules\\happierControl\\py\\views.py": [
    {
      "643": "taskqueue.add(url=\"/hSafe/sso/orgUnits/sync\", method=\"POST\", params={\"namespace\": self.request.get(\"namespace\")})"
    },
    {
      "653": "taskqueue.add(url=\"/hSafe/sso/orgUnits/sync\", method=\"POST\", params=params)"
    },
    {
      "696": "taskqueue.add(url='/admin/api/v1/users/accounts/sync/task', method=\"POST\","
    },
    {
      "702": "taskqueue.add(url='/people/advanced-search/task', method=\"PUT\", params={\"offset\": 0, \"requestFromCron\": \"true\"})"
    },
    {
      "706": "taskqueue.add(url='/people/advanced-search/aggregator', params={\"namespace\": namespace_manager.get_namespace()},"
    },
    {
      "923": "taskqueue.add(url=\"/notifications/sso/triggers\", countdown=20, method=\"GET\", params=notif_params)"
    },
    {
      "1238": "taskqueue.add(url=\"/notifications/triggers\", countdown=30, method=\"GET\", payload=json.dumps(params))"
    },
    {
      "1247": "taskqueue.add(url='/hSafe/sso/applytorule/cron/' + str(policy_id) + \"/\" + str(cnt),"
    },
    {
      "1250": "taskqueue.add(url='/hSafe/sso/applytorule/cron/' + str(policy_id) + \"/\" + str(cnt),"
    },
    {
      "1599": "taskqueue.add(url=\"/request/init/device-restrictions\",params={\"gcu\":username,\"requestType\":\"OTHER\",\"data\":json.dumps(request_dict)},method=\"POST\")"
    },
    {
      "1924": "taskqueue.add(url=\"/hSafe/sso/resetpasswordnotification\", countdown=cnt, method=\"POST\",params=requestParams)"
    },
    {
      "1964": "taskqueue.add(url=\"/notifications/other/triggers\", countdown=30, method=\"GET\", params=params)"
    },
    {
      "2109": "taskqueue.add(url=\"/notifications/sso/triggers\", countdown=30, method=\"GET\", params=params)"
    },
    {
      "3024": "taskqueue.add(url=\"/hSafe/sso/invalidatesession\","
    },
    {
      "4034": "taskqueue.add(url=\"/request/init/ip-restrictions\","
    },
    {
      "4436": "taskqueue.add(url=\"/hSafe/sso/eventlogs/sync\", method=\"POST\","
    },
    {
      "4656": "taskqueue.add(url=\"/hSafe/sso/eventlogs/sync\", method=\"POST\","
    },
    {
      "4735": "task = taskqueue.add(url=\"/hSafe/sso/invalidatesession\","
    },
    {
      "4773": "taskqueue.add(url=\"/hSafe/sso/invalidatesession\","
    },
    {
      "4801": "taskqueue.add(url='/hSafe/sso/passwordSync/report/task', method=\"GET\", params=params)"
    },
    {
      "4866": "taskqueue.add(url='/hSafe/sso/passwordSync/report/task', method=\"GET\", params=params)"
    },
    {
      "5254": "taskqueue.add(url=url, params=param_dict, method=\"PUT\")"
    },
    {
      "5265": "taskqueue.add(url='/users/email/update/task', countdown=10, method='PUT',"
    },
    {
      "5320": "taskqueue.add(url='/common/applytorule/cron',payload=json.dumps({\"effectiveFrom\":getHRMSDate(datetime.datetime.now()),\"userListMatcher\":[userEmail],\"type\":\"CONTROL_POLICY\"}), method=\"PUT\", countdown=20)"
    },
    {
      "5348": "taskqueue.add(url=url, params=param_dict, method=\"PUT\")"
    },
    {
      "5354": "taskqueue.add(url='/users/move-snapshot', method='POST',params={\"userList\":json.dumps([user_email]),\"isDeleteDoc\":True,\"gcu\":adminEmail,\"isDeleteAccountStatus\":True})"
    },
    {
      "5514": "taskqueue.add(url=\"/hSafe/sso/forceLogoutUsersOnSSOEnabled\","
    },
    {
      "5548": "taskqueue.add(url=\"/hSafe/sso/forceLogoutUsersOnSSOEnabled\","
    },
    {
      "5615": "taskqueue.add(url=\"/hSafe/sso/forceLogoutUsersOnSSOEnabled\","
    },
    {
      "5661": "taskqueue.add(url=\"/hSafe/sso/forceLogoutUsersOnCPUpdate\","
    },
    {
      "5691": "taskqueue.add(url=\"/hSafe/sso/forceLogoutUsersOnCPUpdate\","
    },
    {
      "5753": "taskqueue.add(url=\"/hSafe/sso/forceLogoutUsersOnCPUpdate\","
    },
    {
      "5797": "taskqueue.add(url=os.environ['REQUEST_URI'],params=requestParams, method=\"POST\")"
    },
    {
      "5856": "taskqueue.add(url=os.environ['REQUEST_URI'],params=requestParams, method=\"POST\")"
    }
  ],
  "happierWork\\app\\modules\\happierControl\\py\\views_extension.py": [
    {
      "88": "taskqueue.add(url=\"/notifications/sso/triggers\", countdown=30, method=\"GET\", params=params)"
    }
  ],
  "happierWork\\app\\modules\\happierDeck\\py\\views_anniversary.py": [
    {
      "108": "taskqueue.add(url=\"/happierDeck/anniversary/cron\", params={\"namespace\": namespace_manager.get_namespace(),\"onlyReset\":True,\"currentUser\":isAuthORcurrentUser,\"isRefreshed\":True}, method=\"POST\")"
    },
    {
      "350": "taskqueue.add(url='/appIntegrations', method='POST',payload=json.dumps({\"type\":\"WISHES\",\"data\":{\"anniversary\":final_json[\"anniversary\"]}}))"
    },
    {
      "353": "taskqueue.add(url='/appIntegrations', method='POST',payload=json.dumps({\"type\":\"WISHES\",\"data\":{\"birth\":final_json[\"birth\"]}}),countdown=10)"
    },
    {
      "356": "taskqueue.add(url='/appIntegrations', method='POST',payload=json.dumps({\"type\":\"WISHES\",\"data\":{\"marriage\":final_json[\"marriage\"]}}),countdown=10)"
    },
    {
      "357": "# taskqueue.add(url='/appIntegrations', method='POST',payload=json.dumps({\"type\":\"WISHES\",\"data\":final_json}))"
    }
  ],
  "happierWork\\app\\modules\\happierDeck\\py\\views_bulletin.py": [
    {
      "251": "taskqueue.add(url='/notifications/deck/triggers',"
    }
  ],
  "happierWork\\app\\modules\\happierDeck\\py\\views_cards.py": [
    {
      "29": "taskqueue.add(url='/notifications/deck/triggers', method='POST',"
    },
    {
      "37": "taskqueue.add(url='/notifications/deck/triggers', method='GET', params=({\"triggerType\": trigger_type,"
    },
    {
      "1196": "taskqueue.add(url='/notifications/triggers', method=\"POST\", payload=json.dumps(payload))"
    },
    {
      "1734": "taskqueue.add(url=self.URL, method='POST', params=params)"
    }
  ],
  "happierWork\\app\\modules\\happierDeck\\py\\views_smartgroups.py": [
    {
      "63": "taskqueue.add(url='/happierDeck/smartgroups/sync/groups',"
    }
  ],
  "happierWork\\app\\modules\\happierDeck\\py\\views_smartstuffs.py": [
    {
      "281": "taskqueue.add(url='/happierDeck/smartgroups/sync/groups', method=\"PUT\","
    },
    {
      "323": "taskqueue.add(url='/happierDeck/smartcontacts/sync/task', method=\"PUT\","
    },
    {
      "400": "taskqueue.add(url='/happierDeck/smartgroups/sync/groups',"
    },
    {
      "428": "taskqueue.add(url='/happierDeck/smartcontacts/sync/task', method=\"PUT\","
    },
    {
      "459": "taskqueue.add(url=url, method=\"DELETE\", params={\"key\": a_key, \"action\": \"REMOVE\"})"
    }
  ],
  "happierWork\\app\\modules\\happierDeck\\py\\views_taskqueues.py": [
    {
      "45": "taskqueue.add(url=\"/happierDeck/update/users\", method=\"POST\", params={\"serviceMethod\": \"UserPreferenceService\"})"
    },
    {
      "78": "taskqueue.add(url=\"/happierDeck/update/users\", method=\"POST\", params={\"serviceMethod\": \"UserPreferenceService\"})"
    },
    {
      "146": "taskqueue.add(url=\"/happierDeck/initialise/users\", method=\"POST\", payload=json.dumps(changes_dict))"
    },
    {
      "401": "taskqueue.add(url='/happierDeck/initialise/users', method=\"POST\", params={\"namespace\": namespace}, payload=requestBody)"
    },
    {
      "468": "taskqueue.add(url='/happierDeck/initialise/users', method=\"POST\", payload=json.dumps(para_dict))"
    },
    {
      "480": "taskqueue.add(url='/happierDeck/update/users', method=\"GET\")"
    },
    {
      "600": "taskqueue.add(url=\"/happierDeck/update/news/\" + card_id, method=\"POST\", payload=(json.dumps(para_dict)))"
    },
    {
      "625": "taskqueue.add(url=url, method=\"POST\")"
    },
    {
      "646": "taskqueue.add(url=\"/happierDeck/cards/prefTask/\" + pref_type, method=\"POST\", params={\"offset\": offset+limit, \"limit\": limit})"
    },
    {
      "650": "taskqueue.add(url=\"/happierDeck/cards/prefTask/\" + pref_type, method=\"PUT\")"
    },
    {
      "707": "taskqueue.add(url=\"/happierDeck/sync/DeckCards\", method=\"POST\", payload=json.dumps({\"userlist\": user_list, \"offset\": offset, \"limit\": limit}), countdown=int(countdown))"
    },
    {
      "775": "taskqueue.add(url=\"/happierDeck/admin/cards/checkVisibility/ALL_CARDS\", method=\"PUT\",payload=json.dumps("
    },
    {
      "857": "taskqueue.add(url=url, method=\"PUT\")"
    },
    {
      "862": "taskqueue.add(url=\"/happierDeck/update/users\", method=\"PUT\", payload=(json.dumps(changes_dict)))"
    },
    {
      "940": "taskqueue.add(url=\"/happierDeck/cards/deckCards/resetPrefForHiddenCard\", method=\"POST\","
    },
    {
      "1062": "taskqueue.add(url='/happierDeck/domain/insights', method=\"POST\", params={\"namespace\": aDomain.Namespace,\"domain\":domain})"
    },
    {
      "1063": "# taskqueue.add(url='/happierDeck/domain/insights', method=\"POST\", params={\"namespace\": \"747b4d70-9f2d-4633-88ba-0e764ad69cfa\"})"
    },
    {
      "1278": "taskqueue.add(url='/notifications/other/triggers', method=\"POST\", payload=json.dumps({\"triggerName\":\"DOMAIN_INSIGHTS\",\"domainData\":insight}))"
    },
    {
      "1286": "# taskqueue.add(url='/notifications/triggers', method=\"POST\", payload=json.dumps(insight))"
    },
    {
      "1465": "# \ttaskqueue.add(url=\"/notifications/triggers\", method=\"GET\", params={\"userEmail\":anniversary_object.userId,\"triggerType\":\"BIRTHDAY_WISH\",\"requestType\":\"BIRTHDAY_WISH\"})"
    },
    {
      "1472": "taskqueue.add(url=\"/happierDeck/anniversarybot\", method=\"GET\", countdown=150)"
    },
    {
      "1495": "taskqueue.add(url=\"/notifications/other/triggers\", method=\"GET\","
    },
    {
      "1501": "taskqueue.add(url=\"/notifications/other/triggers\", method=\"GET\","
    },
    {
      "1506": "taskqueue.add(url=\"/notifications/other/triggers\", method=\"GET\","
    },
    {
      "1512": "taskqueue.add(url=\"/notifications/other/triggers\", method=\"GET\","
    },
    {
      "1522": "taskqueue.add(url=\"/happierDeck/anniversary/cron\", params={\"namespace\": aDomain.Namespace},"
    },
    {
      "1576": "taskqueue.add(url=\"/happierDeck/smartgroups/sync/groups\", method=\"POST\", params={\"domain\":domain},countdown=countdown)"
    },
    {
      "1736": "taskqueue.add(url=\"/happierDeck/smartgroups/sync/groups\", method=\"POST\","
    },
    {
      "1797": "taskqueue.add(url='/happierDeck/smartcontacts/sync/myteam', method=\"POST\", countdown=countDown)"
    },
    {
      "1851": "taskqueue.add(url='/happierDeck/smartcontacts/sync', method=\"PUT\", countdown=count_down,"
    },
    {
      "1861": "taskqueue.add(url='/happierDeck/smartcontacts/sync/myteam', method=\"POST\", params=params, countdown=180)"
    },
    {
      "1966": "taskqueue.add(url='/happierDeck/sync/profileFields', method=\"POST\", countdown=countdown)"
    },
    {
      "2000": "# taskqueue.add(url=\"/happierDeck/smartgroups/sync/profileFields\", method=\"POST\", params=params)"
    },
    {
      "2001": "taskqueue.add(url=\"/happierDeck/smartcontacts/sync/profileFields\", method=\"POST\", params=params)"
    },
    {
      "2002": "taskqueue.add(url=\"/happierDeck/dashboard/sync/profileFields\", method=\"POST\", params=params)"
    },
    {
      "2003": "taskqueue.add(url=\"/happierDeck/happiercards/sync/profileFields\", method=\"POST\", params=params)"
    },
    {
      "2004": "taskqueue.add(url=\"/happierDeck/cardsdata/sync/profileFields\", method=\"POST\", params=params)"
    },
    {
      "2008": "taskqueue.add(url=\"/happierDeck/MyTeam/sync/profileFields\", method=\"POST\", params=params)"
    },
    {
      "2035": "taskqueue.add(url='/happierDeck/smartcontacts/sync/myteam', method=\"POST\","
    },
    {
      "2059": "taskqueue.add(url='/happierDeck/smartcontacts/sync/task', method=\"PUT\", countdown=count * 5,"
    },
    {
      "2081": "taskqueue.add(url='/happierDeck/smartgroups/sync/groups',"
    },
    {
      "2106": "taskqueue.add(url='/happierDeck/smartcontacts/sync/task', method=\"PUT\", countdown=count * 5,"
    }
  ],
  "happierWork\\app\\modules\\happierVisit\\py\\views.py": [
    {
      "287": "taskqueue.add(url='/notification/happierVisit/check-in', method=\"POST\",payload=json.dumps({\"visitorId\": given_data[\"visitorId\"],\"locationKey\":locationKey}))"
    },
    {
      "289": "#     taskqueue.add(url='/notification/scheduledNotification', method=\"POST\",payload=json.dumps({\"visitorId\": given_data[\"visitorId\"],\"locationKey\":locationKey}))"
    },
    {
      "291": "taskqueue.add(url='/happierVisit/advanced-field-search', method=\"PUT\",payload=json.dumps({\"visitorIdList\": [given_data[\"visitorId\"]]}))"
    },
    {
      "292": "taskqueue.add(url='/happierVisit/advanced-global-search/task', method=\"POST\",payload=json.dumps({\"visitorIdList\": [given_data[\"visitorId\"]], \"namespace\":namespace_manager.get_namespace()}))"
    },
    {
      "328": "taskqueue.add(url='/happierVisit/advanced-field-search', method=\"PUT\",payload=json.dumps({\"visitorIdList\": [visitorId]}))"
    },
    {
      "329": "taskqueue.add(url='/happierVisit/advanced-global-search/task', method=\"POST\",payload=json.dumps({\"visitorIdList\": [visitorId], \"namespace\": namespace_manager.get_namespace()}))"
    },
    {
      "330": "taskqueue.add(url='/notification/happierVisit/check-out', method=\"POST\", payload=json.dumps({\"visitorId\":visitorId}))"
    }
  ],
  "happierWork\\app\\modules\\happierVisit\\py\\views_advanced_search.py": [
    {
      "403": "taskqueue.add(url='/happierVisit/advanced-field-search',method=\"PUT\", params={\"offset\":offset+limit,\"requestFromCron\":\"true\"})"
    },
    {
      "802": "taskqueue.add(url='/happierVisit/advanced-global-search/task', method=\"POST\", payload=json.dumps(json_input))"
    },
    {
      "817": "taskqueue.add(url='/happierVisit/advanced-global-search/task', method=\"POST\", payload=json.dumps({\"visitorIdList\":users_data,\"namespace\":namespace_manager.get_namespace()}), countdown=cd)"
    },
    {
      "835": "taskqueue.add(url='/happierVisit/advanced-global-search/task', method=\"POST\","
    }
  ],
  "happierWork\\app\\modules\\happierVisit\\py\\views_common.py": [
    {
      "384": "taskqueue.add(url='/notification/happierVisit/forceCheckoutHostNotification', method=\"POST\",payload=json.dumps({\"visitorId\": visitorId,\"deleteJob\":True,\"locationKey\":locationKey}))"
    }
  ],
  "happierWork\\app\\modules\\happierVisit\\py\\views_visitors.py": [
    {
      "264": "taskqueue.add(url=self.URL_LINK, method=\"PUT\", payload=json.dumps(json_input))"
    },
    {
      "360": "taskqueue.add(url=self.URL_LINK, method=\"PUT\", payload=json.dumps(json_input))"
    },
    {
      "394": "taskqueue.add(url=self.URL_LINK, method=\"PUT\", params={\"namespace\": namespace})"
    },
    {
      "475": "taskqueue.add(url=self.URL_LINK, method=\"PUT\", params=params,payload=json.dumps(json_input))"
    },
    {
      "518": "taskqueue.add(url='/notification/happierVisit/insights', method=\"POST\","
    }
  ],
  "happierWork\\app\\modules\\hrAnalytics\\py\\views.py": [
    {
      "727": "taskqueue.add(url=\"/analytics/dashboard/hr/task\", method=\"POST\")"
    }
  ],
  "happierWork\\app\\modules\\hrAnalytics\\py\\views_myanalytics.py": [
    {
      "283": "taskqueue.add(url='/analytics/myanalytics/calendar-task',countdown=i,method=\"POST\",params={\"namespace\":aNamespace})"
    },
    {
      "306": "# \ttaskqueue.add(url='/analytics/myanalytics/calendar-task',countdown=i, method=\"POST\",params={\"namespace\": \"747b4d70-9f2d-4633-88ba-0e764ad69cfa\",\"syncDate\":getHRMSDate(startDate)})"
    },
    {
      "430": "taskqueue.add(url='/analytics/myanalytics/calendar-task',countdown=15,method=\"POST\",params={\"namespace\":namespace,\"offset\":str(offset),\"syncDate\":getHRMSDate(nowTime.date())})"
    },
    {
      "499": "taskqueue.add(url='/analytics/myanalytics/calendar-task',countdown=2,method=\"PUT\",params={\"namespace\":namespace,\"pageToken\":nextCurs})"
    },
    {
      "521": "#     taskqueue.add(queue_name=BIG_QUERY_QUEUE, url='/users/bigquery/sync-task', method=\"POST\",params={\"namespace\":aNamespace})"
    },
    {
      "524": "taskqueue.add(url='/analytics/myanalytics/mail', method=\"POST\", params=params)"
    },
    {
      "525": "taskqueue.add(url='/analytics/myanalytics/mail', method=\"PUT\", params=params)"
    },
    {
      "601": "taskqueue.add(url='/analytics/myanalytics/mail', method=\"PUT\", params={\"namespace\": namespace, \"offset\":str(offset),\"syncDate\": getHRMSDate(ref_date)})"
    },
    {
      "688": "taskqueue.add(url='/analytics/myanalytics/mail', method=\"POST\",params={\"namespace\": namespace, \"offset\": str(offset),\"syncDate\": getHRMSDate(ref_date)})"
    }
  ],
  "happierWork\\app\\modules\\newDocumentManagement\\py\\views.py": [
    {
      "85": "taskqueue.add(url=\"/documents/visibility-update\", method=\"POST\",params={\"flag\": \"DOCUMENT\", \"gcu\": user, \"id\": str(newobj.uniqueId)},countdown=5)"
    },
    {
      "157": "taskqueue.add(url=\"/documents/visibility-update\", method=\"POST\",params={\"flag\": \"DOCUMENT\", \"gcu\": user, \"id\": str(newobj.uniqueId)},countdown=5)"
    },
    {
      "180": "taskqueue.add(url=\"/documents/visibility-update\", method=\"POST\",params={\"flag\": \"DOCUMENT\", \"gcu\": user, \"id\": str(newobj.uniqueId)},countdown=5)"
    },
    {
      "257": "taskqueue.add(url=\"/documents/visibility-update\", method=\"POST\",params={\"flag\": \"FLOW\", \"gcu\": user, \"id\": str(newobj.uniqueId)},countdown=5)"
    },
    {
      "323": "taskqueue.add(url=\"/documents/visibility-update\", method=\"POST\",params={\"flag\": \"FLOW\", \"gcu\": user, \"id\": str(newobj.uniqueId)},countdown=5)"
    },
    {
      "344": "taskqueue.add(url=\"/documents/visibility-update\", method=\"POST\",params={\"flag\": \"FLOW\", \"gcu\": user, \"id\": str(newobj.uniqueId)},countdown=5)"
    },
    {
      "1179": "taskqueue.add(url=\"/documents/filter-set\", method=\"POST\",params={\"gcu\": gcu, \"userList\": json.dumps(all_user_list)})"
    },
    {
      "1185": "taskqueue.add(url=self.URLLINK, countdown=3, method=\"PUT\",params={\"gcu\":gcu,\"userList\": json.dumps(usr_list), \"offset\": str(offset + limit)})"
    },
    {
      "1222": "taskqueue.add(url=\"/documents/update-all-filter-set\", method=\"POST\", params={\"namespace\":str(namespace_manager.get_namespace())})"
    },
    {
      "1232": "taskqueue.add(url=\"/documents/visibility-update\", method=\"POST\",params={\"flag\": \"DOCUMENT\", \"gcu\": SYSTEM_NAME, \"id\": str(aDocObj.uniqueId)})"
    },
    {
      "1237": "taskqueue.add(url=\"/documents/visibility-update\", method=\"POST\",params={\"flag\": \"FLOW\", \"gcu\": SYSTEM_NAME, \"id\": str(aDocObj.uniqueId)})"
    },
    {
      "1784": "taskqueue.add(url='/documents/visibility-update', method=\"PUT\",params={\"userList\":json.dumps(updated_user_email_list),\"gcu\":gcu})"
    },
    {
      "1947": "taskqueue.add(url=self.URLLINK, countdown=3, method=\"POST\", params={\"gcu\": gcu, \"userList\": json.dumps(usr_list), \"offset\": str(offset + limit)})"
    },
    {
      "1972": "taskqueue.add(url=self.URLLINK, method=\"POST\", params={\"namespace\":aNamespace})"
    },
    {
      "1997": "taskqueue.add(url=\"/documents/filter-set\", method=\"POST\",params={\"gcu\": SYSTEM_NAME, \"userList\": json.dumps(user_list)})"
    },
    {
      "1999": "taskqueue.add(url=self.URLLINK, method=\"POST\", params={\"namespace\": namespace, \"offset\": str(offset)})"
    },
    {
      "2151": "taskqueue.add(url=\"/documents/data-set\", method=\"PUT\", payload=json.dumps(output_json))"
    },
    {
      "2515": "taskqueue.add(url='/documents/visibility-update', method=\"PUT\",params={\"userList\": json.dumps(updated_user_email_list), \"gcu\": gcu})"
    },
    {
      "2525": "taskqueue.add(url=self.URLLINK, method=\"PUT\",params=params)"
    },
    {
      "2547": "taskqueue.add(url='/documents/visibility-update', method=\"PUT\","
    },
    {
      "2551": "taskqueue.add(url=self.URLLINK, method=\"PUT\", params={\"offset\":offset,\"limit\":limit})"
    },
    {
      "3243": "#taskqueue.add(url=\"/documents/data-set\", method=\"PUT\", payload=json.dumps(output_json), countdown=5)"
    },
    {
      "3248": "#taskqueue.add(url=\"/request/decision\", method=\"PUT\", payload=json.dumps({\"reqs\": req_json, \"isSupportiveProvided\": True, \"supportiveDocumentData\": supp_json,\"isFileUploaded\": isUploadFile, \"gcu\": gcu, \"documentDataSet\": output_json,\"reqActionBy\":reqActionBy}))"
    },
    {
      "3249": "taskqueue.add(url=\"/request/decision/task\", method=\"PUT\", payload=json.dumps(send_json_data))"
    },
    {
      "3254": "taskqueue.add(url=\"/documents/data-set\", method=\"PUT\", payload=json.dumps(output_json),countdown=5)"
    },
    {
      "3311": "taskqueue.add(url='/documents/docu-sign-issuance', method=\"PUT\","
    },
    {
      "3411": "taskqueue.add(url=\"/documents/data-set\", method=\"PUT\", payload=json.dumps(output_json))"
    },
    {
      "3416": "taskqueue.add(url=\"/documents/docu-sign-issuance\", method=\"PUT\", payload=json.dumps(payloadJson))"
    },
    {
      "3421": "taskqueue.add(url=\"/notifications/documents/triggers\", countdown=20, method=\"POST\","
    },
    {
      "3465": "taskqueue.add(url='/documents/visibility-update', method=\"PUT\","
    },
    {
      "3471": "taskqueue.add(url=\"/notifications/documents/triggers\", countdown=20, method=\"POST\","
    },
    {
      "3487": "taskqueue.add(url='/documents/visibility-update', method=\"PUT\",params={\"userList\": json.dumps([forUser]), \"gcu\": gcu})"
    },
    {
      "3506": "taskqueue.add(url=self.URL, method=\"POST\")"
    },
    {
      "3575": "taskqueue.add(url=self.URL, method=\"POST\",params={\"sheetId\": sheetId, \"docOwner\": docOwner, \"offset\": offset, \"limit\":limit})"
    },
    {
      "3605": "taskqueue.add(url=self.URL, method=\"POST\")"
    },
    {
      "3639": "taskqueue.add(url=\"/notifications/documents/triggers\", method=\"GET\", params=sendJson)"
    },
    {
      "3647": "taskqueue.add(url=\"/notifications/documents/triggers\", method=\"GET\","
    },
    {
      "3652": "taskqueue.add(url=self.URL, method=\"POST\",params={\"limit\":limit,\"offset\":offset})"
    }
  ],
  "happierWork\\app\\modules\\nonGsuiteSecurity\\py\\views.py": [
    {
      "245": "taskqueue.add(url=\"/notifications/savenotificationconfig\", method=\"PUT\","
    },
    {
      "266": "taskqueue.add(url=\"/notifications/savenotificationconfig\", method=\"PUT\","
    },
    {
      "280": "taskqueue.add(url=\"/notifications/savenotificationconfig\", method=\"PUT\","
    }
  ],
  "happierWork\\app\\modules\\offboarding\\py\\utils.py": [
    {
      "1588": "taskqueue.add(url=\"/notifications/offboarding/triggers-task\",countdown=30,method=\"GET\", params=params)"
    },
    {
      "1613": "taskqueue.add(url='/people/advanced-search/task',method=\"PUT\",params={\"tq\":\"yes\"}, payload=json.dumps(advance_search_json), countdown=10)"
    },
    {
      "1626": "taskqueue.add(url='/pay/offboardingonhold',method = \"POST\",payload=json.dumps({\"userEmail\":user_obj.userEmail,\"offboarding\":True,\"currentUser\":gcu,\"salaryOnHoldDetailsList\":json.dumps(salary_on_hold_details_list)}))"
    },
    {
      "1633": "taskqueue.add(url='/pay/offboardingonhold',method = \"PUT\",payload=json.dumps({\"offboarding\":True,\"currentUser\":gcu,\"salaryOnHoldDetailsList\":json.dumps(salary_on_hold_details_list)}))"
    },
    {
      "1641": "taskqueue.add(url='/pay/offboardingonhold',method = \"PUT\",payload=json.dumps({\"offboarding\":True,\"currentUser\":gcu,\"salaryOnHoldDetailsList\":json.dumps(salary_on_hold_details_list)}))"
    },
    {
      "1649": "taskqueue.add(url='/pay/offboardingonhold',method = \"PUT\",payload=json.dumps({\"offboarding\":True,\"currentUser\":gcu,\"salaryOnHoldDetailsList\":json.dumps(salary_on_hold_details_list)}))"
    },
    {
      "1890": "taskqueue.add(url=\"/pay/task/inputs/fof\",payload = json.dumps(params), method=\"POST\")"
    },
    {
      "1940": "taskqueue.add(url=\"/pay/task/inputs/fof\",payload = json.dumps(params), method=\"POST\")"
    },
    {
      "1965": "taskqueue.add(url=\"/pay/task/inputs/fof\",payload = json.dumps(params), method=\"POST\")"
    }
  ],
  "happierWork\\app\\modules\\offboarding\\py\\views.py": [
    {
      "27": "taskqueue.add(url=\"/offboarding/tracking/task/cancel/\"+aTrackingId, params={\"gcu\":gcu, \"isBulk\":\"YES\"}, method=\"PUT\")"
    },
    {
      "169": "taskqueue.add(url='/people/advanced-search/task',method=\"PUT\",params={\"tq\":\"yes\"}, payload=json.dumps(advance_search_json), countdown=10)"
    },
    {
      "228": "#\ttaskqueue.add(url=\"/request/delegate\", method=\"PUT\", payload=json.dumps(request_updateApprover_json))"
    },
    {
      "240": "#taskqueue.add(url=\"/request/delegate\", method=\"PUT\", payload=json.dumps(request_updateApprover_json))"
    },
    {
      "313": "taskqueue.add(url=\"/request/update\", method=\"PUT\", payload=json.dumps(request_updation_json))"
    },
    {
      "317": "taskqueue.add(url=\"/notifications/offboarding/triggers-task\",countdown=30,method=\"GET\", params=params)"
    },
    {
      "336": "taskqueue.add(url=\"/request/cancel/task\", method=\"POST\", params=request_cancellation_json)"
    },
    {
      "356": "taskqueue.add(url=\"/notifications/offboarding/triggers-task\",countdown=30,method=\"GET\", params=params)"
    },
    {
      "361": "taskqueue.add(url=\"/request/reopen-pending-req\", method=\"GET\", params={\"reqId\":tracking_obj.requestId})"
    },
    {
      "365": "taskqueue.add(url=\"/notifications/offboarding/triggers-task\",countdown=30,method=\"GET\", params=params)"
    },
    {
      "372": "taskqueue.add(url='/people/advanced-search/task',method=\"PUT\",params={\"tq\":\"yes\"}, payload=json.dumps(advance_search_json), countdown=10)"
    },
    {
      "1088": "taskqueue.add(url=\"/notifications/offboarding/triggers-task\",countdown=30,method=\"PUT\",params={\"curOwner\":user_email,\"newOwner\":to_user,\"doWhat\":\"Transfer\"})"
    },
    {
      "1092": "taskqueue.add(url=\"/notifications/offboarding/triggers-task\",countdown=30,method=\"PUT\",params={\"curOwner\":user_email,\"newOwner\":to_user,\"doWhat\":\"Transfer\"})"
    },
    {
      "1128": "taskqueue.add(url=\"/offboarding/requestDelegation\",countdown=1,method=\"GET\", params={\"userEmail\":user_email,\"toUser\":to_user})"
    },
    {
      "1340": "taskqueue.add(url=\"/notifications/offboarding/triggers-task\",countdown=30,method=\"GET\", params=params)"
    },
    {
      "1354": "taskqueue.add(url=\"/notifications/offboarding/triggers-task\",countdown=30,method=\"GET\", params=params)"
    },
    {
      "1376": "taskqueue.add(url=\"/notifications/offboarding/triggers-task\",countdown=30,method=\"GET\", params={\"triggerType\":\"SEND_EXPERIENCE_LETTER\",\"requestType\":\"SEND_EXPERIENCE_LETTER\",\"workProfileId\":\"WORK_PROFILE_ID\",\"userEmail\":user_email,\"experienceRequestId\":offboarding_tracking_obj_new.requestId,\"letterTemplateId\":template_Id,\"sendEmailTo\":json.dumps(tempList)})"
    },
    {
      "1396": "taskqueue.add(url=\"/notifications/offboarding/triggers-task\",countdown=30,method=\"GET\", params={\"triggerType\":\"SEND_RELIEVING_LETTER\",\"requestType\":\"SEND_RELIEVING_LETTER\",\"workProfileId\":\"WORK_PROFILE_ID\",\"userEmail\":user_email,\"relievingRequestId\":offboarding_tracking_obj_new.requestId,\"letterTemplateId\":template_Id,\"sendEmailTo\":json.dumps(tempList)})"
    },
    {
      "1415": "taskqueue.add(url=\"/notifications/offboarding/triggers-task\",countdown=30,method=\"GET\", params={\"triggerType\":\"SEND_THANK_YOU_NOTE\",\"requestType\":\"SEND_THANK_YOU_NOTE\",\"workProfileId\":\"WORK_PROFILE_ID\",\"userEmail\":user_email,\"letterTemplateId\":template_Id,\"sendEmailTo\":json.dumps(tempList)})"
    },
    {
      "1430": "taskqueue.add(url=\"/notifications/offboarding/triggers-task\",countdown=30,method=\"GET\", params={\"triggerType\":\"SEND_REHIRE_POLICY\",\"requestType\":\"SEND_REHIRE_POLICY\",\"workProfileId\":\"WORK_PROFILE_ID\",\"userEmail\":user_email,\"letterTemplateId\":template_Id,\"sendEmailTo\":json.dumps(tempList)})"
    },
    {
      "1456": "# \t\t\ttaskqueue.add(url=\"/offboarding/trigger\", method=\"GET\")"
    },
    {
      "1478": "taskqueue.add(url=\"/offboarding/trigger/task\",params=newParams,method=\"GET\")"
    },
    {
      "1753": "taskqueue.add(url=task_url, params={\"data\":json.dumps(data),\"requestType\":\"OTHER\",\"gcu\":SYSTEM_NAME}, method=\"POST\",countdown=int(10))"
    },
    {
      "1773": "taskqueue.add(url=\"/notifications/offboarding/triggers-task\",countdown=30,method=\"GET\", params=params)"
    },
    {
      "1785": "taskqueue.add(url='/people/advanced-search/task',method=\"PUT\",params={\"tq\":\"yes\"}, payload=json.dumps(advance_search_json), countdown=10)"
    }
  ],
  "happierWork\\app\\modules\\onboarding\\py\\views.py": [
    {
      "86": "taskqueue.add(url=\"/onboarding/tracking/task/cancel/\"+aTrackingId, params={\"gcu\":gcu, \"isBulk\":\"YES\"}, method=\"PUT\")"
    },
    {
      "258": "# taskqueue.add(url=\"/happierDeck/cards/sync\",params=json.dumps({\"email_ids\":[user_email]}),method=\"GET\")"
    },
    {
      "259": "taskqueue.add(url=\"/happierDeck/cards/sync/task\",params={\"email_ids\":json.dumps([user_email])},method=\"GET\")"
    },
    {
      "262": "taskqueue.add(url='/people/advanced-search/task',method=\"PUT\",params={\"tq\":\"yes\"}, payload=json.dumps(advance_search_json), countdown=10)"
    },
    {
      "310": "taskqueue.add(url=\"/request/delegate/task\", method=\"PUT\", payload=json.dumps(request_updateApprover_json))"
    },
    {
      "324": "taskqueue.add(url=\"/request/update\", method=\"PUT\", payload=json.dumps(request_updation_json))"
    },
    {
      "342": "taskqueue.add(url=\"/notifications/onboarding/triggers-task\",countdown=30,method=\"GET\", params=params)"
    },
    {
      "398": "taskqueue.add(url=\"/request/cancel/task\", method=\"POST\", params=request_cancellation_json)"
    },
    {
      "401": "taskqueue.add(url=\"/notifications/onboarding/triggers-task\",countdown=30,method=\"GET\", params=params)"
    },
    {
      "411": "taskqueue.add(url=\"/request/reopen-pending-req\", method=\"GET\",params={\"reqId\": tracking_obj.requestId})"
    },
    {
      "420": "taskqueue.add(url=\"/notifications/onboarding/triggers-task\", countdown=30, method=\"GET\", params=params)"
    },
    {
      "425": "taskqueue.add(url='/people/advanced-search/task',method=\"PUT\",params={\"tq\":\"yes\"}, payload=json.dumps(advance_search_json), countdown=10)"
    },
    {
      "901": "taskqueue.add(url=\"/notifications/onboarding/triggers-task\",countdown=30,method=\"GET\", params={\"triggerType\":\"SEND_APPOINTMENT_LETTER\",\"requestType\":\"SEND_APPOINTMENT_LETTER\",\"workProfileId\":\"WORK_PROFILE_ID\",\"userEmail\":user_email,\"appointmentRequestId\":request_id,\"letterTemplateId\":template_Id,\"sendEmailTo\":json.dumps(tempList)})"
    },
    {
      "1123": "# \t\t\ttaskqueue.add(url=\"/onboarding/trigger\", method=\"GET\")"
    },
    {
      "1143": "taskqueue.add(url=\"/onboarding/trigger/task\", params=newParams, method=\"GET\")"
    },
    {
      "1180": "taskqueue.add(url=\"/notifications/onboarding/triggers-task\",countdown=30,method=\"GET\", params=params)"
    },
    {
      "1251": "taskqueue.add(url=\"/notifications/onboarding/triggers-task\",countdown=30,method=\"GET\", params=params)"
    },
    {
      "1348": "taskqueue.add(url=task_url, params={\"data\":json.dumps(data),\"requestType\":\"OTHER\",\"gcu\":SYSTEM_NAME}, method=\"POST\",countdown=int(10))"
    },
    {
      "1355": "taskqueue.add(url=task_url, params={\"data\":json.dumps(data),\"requestType\":\"OTHER\",\"gcu\":SYSTEM_NAME}, method=\"POST\",countdown=int(10))"
    },
    {
      "1357": "taskqueue.add(url=task_url, params={\"data\":json.dumps(data),\"requestType\":\"OTHER\",\"gcu\":SYSTEM_NAME}, method=\"POST\",countdown=int(10))"
    },
    {
      "1358": "#taskqueue.add(url=task_url, params={\"data\":json.dumps(data),\"requestType\":\"OTHER\",\"gcu\":SYSTEM_NAME}, method=\"POST\",countdown=int(10))"
    },
    {
      "1363": "taskqueue.add(url=task_url, payload=json.dumps(request_data), method=\"POST\",countdown=int(10))"
    },
    {
      "1690": "taskqueue.add(url='/people/profiles/task',countdown=45, method=\"POST\", params={\"userList\":json.dumps(user_list)})"
    },
    {
      "1722": "taskqueue.add(url=\"/onboarding/resetprocess\", params={\"userEmail\":user_email,\"status\":\"NOT_JOIN\"}, method=\"GET\")"
    },
    {
      "1725": "taskqueue.add(url=\"/hire/applicants/\"+user_obj.uniqueId+\"/offers/drop\", params={\"currentUser\":gcu,\"reason\":reason}, method=\"PUT\")"
    },
    {
      "1744": "taskqueue.add(url='/onboarding/tracking/internal',method=\"POST\",payload=json.dumps({\"userEmail\":user_email,\"onboarding_completed_tasks\":onboarding_completed_tasks}))"
    },
    {
      "1779": "taskqueue.add(url=\"/notifications/onboarding/triggers-task\",countdown=30,method=\"GET\", params=params)"
    },
    {
      "1782": "taskqueue.add(url='/people/advanced-search/task',method=\"PUT\",params={\"tq\":\"yes\"}, payload=json.dumps(advance_search_json), countdown=10)"
    }
  ],
  "happierWork\\app\\modules\\pay\\py\\patches.py": [
    {
      "304": "taskqueue.add(url = \"/pay/changeuserkey\",method = \"GET\")"
    },
    {
      "421": "taskqueue.add(url=\"/pay/adhocbulkdelete\", method=\"POST\", payload=json.dumps({\"fromDate\":json_input['fromDate'],\"email\":email,\"taskqueue\":True}))"
    },
    {
      "543": "taskqueue.add(url = \"/pay/allprojection\", method = \"POST\",payload = json.dumps({\"section\": \"Section 24, 80EE-House Loan Repayment\",\"email\": emp_details,\"details\": {\"sectionName\": \"\", \"limit\": \"\", \"categories\": dict_list}}) )"
    },
    {
      "551": "taskqueue.add(url = \"/pay/allprojection\", method = \"POST\",payload = json.dumps({\"email\": emp_details, \"section\": \"Section 10(13A)-House Rental\",\"details\": {\"toggle\": False, \"limit\": 500000, \"section\": \"10(13 A)\",\"categories\": dict_list}}))"
    },
    {
      "579": "taskqueue.add(url = \"/pay/allprojection\", method = \"POST\",payload = json.dumps({\"details\": {\"categories\": attire_category_list}, \"section\": \"Reimbursements\",\"email\": emp_details}))"
    },
    {
      "620": "taskqueue.add(url = \"/pay/allprojection\",method = \"POST\",payload = json.dumps({\"email\": emp_details, \"section\": \"Section 80C\", \"deletedList\": [],\"details\": {\"sectionName\":'',\"limit\":\"\",\"totalAmount\": total_amount, \"categories\": categories}}))"
    },
    {
      "764": "taskqueue.add(url = \"/pay/allprojection\",method = \"POST\",payload = json.dumps(emp_dict))"
    },
    {
      "801": "taskqueue.add(url = \"/pay/patch/generateidjson\",method = \"GET\",params = requestParams)"
    },
    {
      "1358": "taskqueue.add(url=\"/pay/verifylopamounts\", method=\"POST\", payload=json.dumps({\"userList\": user_list}))"
    },
    {
      "2194": "# taskqueue.add(url = \"/pay/admin/initial-setup\",method=\"POST\",payload = json.dumps({\"adminEmail\":\"sarath.kaul@searcelabs.com\"}))"
    },
    {
      "2317": "taskqueue.add(url = \"/pay/task/applychangedctcpf\",method = \"POST\",payload = json.dumps(json_input))"
    },
    {
      "2378": "#                 taskqueue.add(url = \"/pay/ctc/apply\",method = \"PUT\",payload = json.dumps(data))"
    },
    {
      "2455": "taskqueue.add(url=\"/pay/mergedform16mapper\", method=\"POST\", payload=json.dumps(json_input))"
    },
    {
      "2582": "taskqueue.add(url=\"/pay/addincometaxadjustmentpatch\", method=\"POST\", payload=requestBody)"
    },
    {
      "2890": "taskqueue.add(url=\"/pay/generatefedoraleaveencashment\", method=\"POST\", payload=requestBody)"
    }
  ],
  "happierWork\\app\\modules\\pay\\py\\tds_calculation.py": [
    {
      "1171": "taskqueue.add(url = '/pay/tds', method = \"GET\", params = {\"user\" : json.dumps(complete_list[lower:upper]), \"fromDate\" : from_date, \"toDate\" : to_date,\"payrollId\":payroll_id.urlsafe()})"
    },
    {
      "1172": "taskqueue.add(url=\"/pay/runtds/ack\", method=\"GET\","
    },
    {
      "1199": "taskqueue.add(url=\"/pay/runtds/ack\",method=\"GET\",params={\"payrollId\":payroll_id,\"totalUsers\":total_users},countdown=60)"
    }
  ],
  "happierWork\\app\\modules\\pay\\py\\utils.py": [
    {
      "6238": "taskqueue.add(url='/pay/test', method='POST',"
    },
    {
      "7861": "# taskqueue.add(url=\"/pay/ctcinvestmenthandler\", method=\"POST\","
    },
    {
      "7873": "# taskqueue.add(url=\"/pay/calculatearrear\", method=\"POST\", payload=json.dumps(json_input), countdown=10)"
    },
    {
      "7879": "#     taskqueue.add(url=\"/pay/payrollcheck\", method=\"POST\","
    },
    {
      "7882": "# taskqueue.add(url='/pay/inputs/fof', method=\"POST\", payload=json.dumps({\"email\":json_input[\"user\"],\"ctcChanged\":True}))"
    }
  ],
  "happierWork\\app\\modules\\pay\\py\\views_admin.py": [
    {
      "74": "taskqueue.add(url='/init/claimsetup', method='GET', params=parameters)"
    },
    {
      "75": "taskqueue.add(url='/init/loansetup', method='GET', params=parameters)"
    },
    {
      "76": "taskqueue.add(url='/init/investmentdeclarationsetup', method='GET', params=parameters)"
    },
    {
      "77": "taskqueue.add(url='/init/vpfsetup', method='GET', params=parameters)"
    },
    {
      "79": "taskqueue.add(url='/init/tempsetup', method='GET', params=parameters)"
    },
    {
      "87": "taskqueue.add(url='/pay/testesic', method='GET', params=parameters)"
    },
    {
      "90": "taskqueue.add(url='/pay/configurepfformula', method='POST', payload=json.dumps(a_json))"
    },
    {
      "93": "taskqueue.add(url='/pay/configurepfformula', method='POST', payload=json.dumps(a_json))"
    },
    {
      "97": "taskqueue.add(url='/pay/reportcolumn', method='POST', payload=json.dumps(a_setup))"
    },
    {
      "670": "taskqueue.add(url=\"/pay/deadlineconfiguration\", method=\"PUT\", payload=json.dumps(json_input[\"deadLine\"]))"
    },
    {
      "1016": "taskqueue.add(url=\"/pay/createallowancedeadlines\", method=\"GET\", params={}, countdown=10)"
    }
  ],
  "happierWork\\app\\modules\\pay\\py\\views_audit.py": [
    {
      "173": "taskqueue.add(url=task_queue, method=\"POST\","
    },
    {
      "176": "taskqueue.add(url=\"/pay/sendreportlinkmail\", method=\"POST\","
    },
    {
      "231": "taskqueue.add(url=\"/pay/checkpayrolloverviewchunks\", method=\"POST\", payload=json.dumps(json_input))"
    },
    {
      "320": "taskqueue.add(url=\"/pay/checkpaysliptaxsheetstatus\", method=\"POST\", payload=json.dumps(json_input))"
    },
    {
      "413": "taskqueue.add(url=\"/pay/checktaxpaidstatus\", method=\"POST\", payload=json.dumps(json_input))"
    },
    {
      "517": "taskqueue.add(url=\"/pay/checktotaltaxpaidstatus\", method=\"POST\", payload=json.dumps(json_input))"
    },
    {
      "625": "taskqueue.add(url=\"/pay/sendreportlinkmail\", method=\"POST\","
    }
  ],
  "happierWork\\app\\modules\\pay\\py\\views_bonus.py": [
    {
      "82": "taskqueue.add(url=\"/pay/payrollcheck\", method=\"POST\","
    },
    {
      "89": "taskqueue.add(url=\"/pay/payrollcheck\", method=\"POST\","
    },
    {
      "132": "taskqueue.add(url=\"/pay/payrollcheck\", method=\"POST\","
    }
  ],
  "happierWork\\app\\modules\\pay\\py\\views_claims.py": [
    {
      "208": "taskqueue.add(url='/pay/settleclaiminadvance', method=\"POST\","
    },
    {
      "548": "taskqueue.add(url=\"/pay/task/settleclaims\", method=\"POST\","
    },
    {
      "555": "taskqueue.add(url=\"/pay/settleclaims/ack\", method=\"GET\","
    },
    {
      "659": "taskqueue.add(url=\"/pay/settleclaims/finalize\", method=\"POST\","
    },
    {
      "663": "taskqueue.add(url=\"/pay/settleclaims/ack\", method=\"GET\","
    },
    {
      "923": "taskqueue.add(url='/notifications/pay/triggers', method=\"POST\","
    },
    {
      "1249": "taskqueue.add(url=\"/request/init/claim/task\","
    },
    {
      "1254": "taskqueue.add(url=\"/pay/claiminadvanceclone\", method='GET', params={'cursor': cursor.urlsafe()})"
    }
  ],
  "happierWork\\app\\modules\\pay\\py\\views_cron.py": [
    {
      "42": "taskqueue.add(url='/pay/reportcolumn', method='POST', payload=json.dumps(report_config_dict[a_report]))"
    },
    {
      "55": "taskqueue.add(url='/pay/onholdnotification', method='GET', params={'namespace': a_namespace})"
    },
    {
      "56": "taskqueue.add(url='/pay/salarynotconfigurednotification', method='GET', params={'namespace': a_namespace})"
    },
    {
      "57": "taskqueue.add(url='/pay/fnfsettlementpendingnotification', method='GET', params={'namespace': a_namespace})"
    },
    {
      "107": "taskqueue.add(url=\"/pay/notificationcsvgenerator\", method=\"POST\","
    },
    {
      "144": "taskqueue.add(url=\"/pay/salarynotconfigurednotification\", method=\"POST\", payload=json.dumps(json_input))"
    },
    {
      "220": "taskqueue.add(url=\"/pay/notificationcsvgenerator\", method=\"POST\", payload=json.dumps(payload))"
    },
    {
      "270": "taskqueue.add(url=\"/pay/notificationcsvgenerator\", method=\"POST\","
    }
  ],
  "happierWork\\app\\modules\\pay\\py\\views_ctc.py": [
    {
      "171": "taskqueue.add(url=\"/pay/appendpftoprofile\", method=\"POST\","
    },
    {
      "326": "taskqueue.add(url=\"/pay/appendpftoprofile\", method=\"POST\","
    },
    {
      "529": "taskqueue.add(url=\"/pay/cloneprofile/apply\", method=\"GET\", params=(self.json_output))"
    },
    {
      "670": "taskqueue.add(url=\"/pay/startapplyingctcprofile\", method=\"GET\","
    },
    {
      "714": "taskqueue.add(url=\"/pay/applyctcprofile/\" + getEmailFromKey(a_user.urlsafe()), method=\"POST\","
    },
    {
      "906": "taskqueue.add(url=\"/pay/calculatesalary\", method=\"PUT\", payload=json.dumps("
    },
    {
      "1311": "taskqueue.add(url=\"/pay/calculatesalary\", method=\"PUT\","
    },
    {
      "1344": "taskqueue.add(url=\"/pay/calculatesalary\", method=\"PUT\", payload=json.dumps("
    },
    {
      "1675": "taskqueue.add(url=\"/pay/ctcinvestmenthandler\", method=\"POST\","
    },
    {
      "1684": "taskqueue.add(url=\"/pay/calculatearrear\", method=\"POST\", payload=json.dumps(json_input), countdown=10,"
    },
    {
      "1691": "taskqueue.add(url=\"/pay/payrollcheck\", method=\"POST\","
    },
    {
      "1694": "taskqueue.add(url='/pay/task/inputs/fof', method=\"POST\","
    },
    {
      "1696": "taskqueue.add(url='/pay/zerosalary', method='PUT', payload=json.dumps(json_input))"
    },
    {
      "1756": "taskqueue.add(url=\"/pay/task/ctcprofile/apply\", method=\"POST\", payload=json.dumps(json_to_send))"
    },
    {
      "4720": "taskqueue.add(url='/offboarding/salaryholdstatusupdate/task', method='PUT',"
    },
    {
      "4863": "taskqueue.add(url=\"/pay/runpayroll\", method=\"POST\", payload=json.dumps(json_input))"
    },
    {
      "4945": "taskqueue.add(url=\"/pay/runpayroll\", method=\"POST\", payload=json.dumps({"
    },
    {
      "4951": "taskqueue.add(url=\"/pay/runpayroll/ack\", method=\"GET\","
    },
    {
      "5058": "taskqueue.add(url='/notifications/pay/triggers', method='GET', params=notification_json)"
    },
    {
      "5092": "taskqueue.add(url=\"/pay/runpayroll/ack\", method=\"GET\","
    },
    {
      "5175": "#         taskqueue.add(url=\"/pay/payrollcheck\", method=\"POST\","
    },
    {
      "5556": "taskqueue.add(url=\"/pay/task/filterusers\", method=\"POST\", payload=json.dumps(data_json))"
    },
    {
      "5558": "taskqueue.add(url=\"/pay/ack/filterusers\", method=\"GET\","
    },
    {
      "5900": "taskqueue.add(url=\"/pay/ack/filterusers\", method=\"GET\", params=self.request.params, countdown=8)"
    },
    {
      "6366": "taskqueue.add(url=\"/pay/generatepayslip\", method=\"POST\","
    },
    {
      "6541": "taskqueue.add(url='/pay/runpayroll/complete', method='POST', payload=json.dumps(json_input))"
    },
    {
      "6542": "taskqueue.add(url=\"/pay/generatepayslip\", method=\"POST\","
    },
    {
      "6580": "taskqueue.add(url=\"/pay/generatepayslip\", method=\"POST\","
    },
    {
      "6651": "taskqueue.add(url=\"/pay/deletesalaryslips\", method=\"POST\", payload=json.dumps(json_input))"
    },
    {
      "6731": "taskqueue.add(url=\"/pay/recalculatesummary\", method=\"POST\","
    },
    {
      "6901": "taskqueue.add(url=\"/pay/processcsv\", method=\"POST\", payload=json.dumps({\"csvObjKey\": doc_obj.key.urlsafe(), \"offset\": 0}), queue_name =\"payroll\", retry_options=TaskRetryOptions(task_retry_limit=0))"
    },
    {
      "6975": "taskqueue.add(url=\"/pay/calculatesalary\", method=\"PUT\", payload=json.dumps({\"user\": email,\"effectiveFrom\": getHRMSDate(effective_from)}), countdown=5)"
    },
    {
      "7068": "taskqueue.add(url=\"/pay/calculatesalary\", method=\"PUT\", payload=json.dumps({\"user\": email, \"effectiveFrom\": getHRMSDate(effective_from)}), countdown=5)"
    },
    {
      "7116": "taskqueue.add(url=\"/pay/payrollcheck\", method=\"POST\","
    },
    {
      "7123": "taskqueue.add(url=\"/pay/payrollcheck\", method=\"POST\","
    },
    {
      "7255": "taskqueue.add(url=\"/pay/task/adduserperk\", method=\"PUT\", payload=json.dumps(json_for_put))"
    },
    {
      "7278": "taskqueue.add(url=\"/pay/perkrecoverydata\", method=\"PUT\", payload=json.dumps(json_input))"
    },
    {
      "7416": "taskqueue.add(url='/notifications/pay/triggers', method='POST', payload=json.dumps(taskqueue_json))"
    },
    {
      "7430": "taskqueue.add(url='/notifications/pay/triggers', method='POST', payload=json.dumps(taskqueue_json))"
    },
    {
      "7460": "taskqueue.add(url='/notifications/pay/triggers', method='POST', payload=json.dumps(taskqueue_json))"
    },
    {
      "7885": "taskqueue.add(url=\"/pay/processcsv\", method=\"POST\", payload=json.dumps(taskqueue_json),queue_name=\"payroll\",retry_options=TaskRetryOptions(task_retry_limit=0) )"
    },
    {
      "8528": "taskqueue.add(url=\"/pay/changepeopledata\", method=\"POST\","
    },
    {
      "8824": "taskqueue.add(url=\"/pay/getlopcount\", method=\"POST\", payload=json.dumps({\"userList\":"
    },
    {
      "8939": "taskqueue.add(url=\"/pay/calculatesalary\", method=\"PUT\", payload=json.dumps("
    },
    {
      "8986": "taskqueue.add(url=\"/pay/generatepayslip\", method=\"POST\","
    }
  ],
  "happierWork\\app\\modules\\pay\\py\\views_forms.py": [
    {
      "176": "taskqueue.add(url = \"/pay/task/filterform12ba\",method=\"PUT\",payload = json.dumps(json_input))"
    },
    {
      "270": "taskqueue.add(url=\"/pay/createform12ba\", method=\"POST\","
    },
    {
      "509": "taskqueue.add(url = \"/pay/task/filterforform16\",method=\"PUT\",payload = json.dumps(json_input))"
    },
    {
      "586": "taskqueue.add(url=\"/pay/createform16b\", method=\"POST\","
    },
    {
      "929": "taskqueue.add(url=\"/pay/createform16b\", method=\"POST\","
    },
    {
      "1159": "taskqueue.add(url='/pay/createtaxworksheet', method='POST', payload=json.dumps(json_input))"
    },
    {
      "1161": "taskqueue.add(url='/pay/email/payslip', method='POST', payload=json.dumps(json_input),"
    },
    {
      "1366": "taskqueue.add(url='/pay/createform16b', method='POST', payload=json.dumps(json_dict))"
    },
    {
      "1779": "taskqueue.add(url='/pay/generateyearlysalarysummary', method='POST', payload=json.dumps(json_dict))"
    },
    {
      "2050": "taskqueue.add(url=\"/pay/task/form16breport\", method=\"POST\", payload=json.dumps(json_input))"
    }
  ],
  "happierWork\\app\\modules\\pay\\py\\views_full_and_final_settlement.py": [
    {
      "121": "taskqueue.add(url='/pay/task/inputs/fof', method=\"POST\","
    },
    {
      "152": "taskqueue.add(url=\"/pay/createuserdeclarationwindow\", method= \"GET\" , params = {\"email\" : self.email, \"relievingDate\" : getHRMSDate(self.relieving_date), \"type\" : \"CREATE\"})"
    },
    {
      "184": "taskqueue.add(url = \"/pay/createuserdeclarationwindow\", method = \"GET\", params = {\"email\" :self.email, \"type\" :\"DELETE\" })"
    },
    {
      "783": "taskqueue.add(url='/pay/finalsettlementreport', method='POST', payload=json.dumps(json_for_task), countdown=20)"
    },
    {
      "853": "taskqueue.add(url='/pay/finalsettlementreport', method='POST', payload=json.dumps(self.json_input),countdown=20)"
    },
    {
      "879": "taskqueue.add(url=\"/pay/runpayroll\", method=\"GET\", params=json.dumps({"
    }
  ],
  "happierWork\\app\\modules\\pay\\py\\views_holidays.py": [
    {
      "45": "taskqueue.add(url = '/pay/holidaycalculator' , method = 'POST' , payload = json.dumps({\"userList\" : [getkeyFromEmail(email)],"
    },
    {
      "513": "taskqueue.add(url=\"/pay/holidaycalculator\", method=\"POST\", payload=json.dumps({\"userList\": user_list}))"
    }
  ],
  "happierWork\\app\\modules\\pay\\py\\views_investments.py": [
    {
      "134": "taskqueue.add(url=\"/pay/adddeclarationamount\", method=\"POST\","
    },
    {
      "139": "taskqueue.add(url=\"/pay/adddeclarationamount\", method=\"POST\","
    },
    {
      "143": "taskqueue.add(url=\"/pay/adddeclarationamount\", method=\"POST\","
    },
    {
      "147": "taskqueue.add(url='/pay/payrollcheck', method='POST',"
    },
    {
      "276": "taskqueue.add(url=\"/pay/adddeclarationamount\", method=\"POST\","
    },
    {
      "279": "taskqueue.add(url='/pay/payrollcheck', method='POST',"
    },
    {
      "529": "taskqueue.add(url=\"/pay/task/projection\", method=\"POST\","
    },
    {
      "1537": "taskqueue.add(url=\"/pay/task/pastinfo\", method=\"POST\", payload=json.dumps(data))"
    },
    {
      "1704": "taskqueue.add(url=\"/pay/task/projection\", method=\"POST\","
    },
    {
      "2119": "taskqueue.add(url='/pay/ctcinvestmenthandler', method='POST',"
    },
    {
      "2298": "taskqueue.add(url='/notifications/pay/triggers', method='POST', payload=json.dumps(taskqueue_json))"
    },
    {
      "2304": "taskqueue.add(url=\"/pay/idnotification\", method=\"GET\", params={\"cursor\": next_cursor.urlsafe()})"
    }
  ],
  "happierWork\\app\\modules\\pay\\py\\views_investments_revamp.py": [
    {
      "1240": "taskqueue.add(url=\"/pay/newprojection\", method=\"PUT\", payload=json.dumps(json_input))"
    },
    {
      "1242": "taskqueue.add(url=\"/pay/newprojection\", method=\"POST\", payload=json.dumps(json_input))"
    },
    {
      "1685": "taskqueue.add(url=\"/pay/newprojection\", method=\"POST\", payload=json.dumps(json_input))"
    },
    {
      "1743": "taskqueue.add(url = \"/pay/createprojectiondeadline\",method = \"POST\",payload = json.dumps(json_input))"
    }
  ],
  "happierWork\\app\\modules\\pay\\py\\views_leave_encashment.py": [
    {
      "40": "taskqueue.add(url=\"/pay/leaveencashmentcronhandler\", method=\"POST\","
    }
  ],
  "happierWork\\app\\modules\\pay\\py\\views_loans.py": [
    {
      "278": "taskqueue.add(url = \"/pay/perquisitehandler\" , method = \"POST\" , payload  = json.dumps({\"user\" :self.user.urlsafe() , \"financialYear\" : get_financial_year(date.today()) }))"
    },
    {
      "305": "taskqueue.add(url=\"/pay/perquisitehandler\", method=\"POST\", payload=json.dumps("
    },
    {
      "639": "taskqueue.add(url=\"/pay/perquisitehandler\", method=\"POST\", payload=json.dumps("
    },
    {
      "680": "taskqueue.add(url = \"/pay/task/loanpayment\", method = \"PUT\" , payload = json.dumps(json_input) )"
    },
    {
      "778": "taskqueue.add(url=\"/pay/perquisitehandler\", method=\"POST\", payload=json.dumps("
    },
    {
      "1389": "taskqueue.add(url = '/pay/task/skiploanemi', method = \"PUT\", payload = json.dumps(json_input), retry_options=TaskRetryOptions(task_retry_limit=0))"
    },
    {
      "1574": "taskqueue.add(url='/pay/loanreport', method='POST', payload=json.dumps(json_for_task), countdown=20)"
    },
    {
      "1667": "taskqueue.add(url='/pay/loanreport', method='POST', payload=json.dumps(self.json_input), countdown=20)"
    },
    {
      "1826": "taskqueue.add(url='/pay/loansummary', method='POST', payload=json.dumps(json_for_task),"
    },
    {
      "1930": "taskqueue.add(url='/pay/loansummary', method='POST', payload=json.dumps(self.json_input),"
    }
  ],
  "happierWork\\app\\modules\\pay\\py\\views_lop.py": [
    {
      "419": "taskqueue.add(url = \"/pay/lopgenerator\", method = \"GET\", params = {\"namespace\":namespace})"
    },
    {
      "460": "taskqueue.add(url=\"/pay/lopcalculator\", method=\"POST\", payload=json.dumps({\"userList\": user_list}))"
    },
    {
      "1541": "taskqueue.add(url='/pay/lopcsv', method=\"POST\", payload=json.dumps(json_input))"
    },
    {
      "1576": "taskqueue.add(url='/pay/lopcsv', method='POST', payload=json.dumps(json_input))"
    },
    {
      "1615": "taskqueue.add(url='/pay/lopcalculator', method='POST',"
    },
    {
      "1642": "taskqueue.add(url='/pay/lopcalculator', method='POST', payload=json.dumps("
    },
    {
      "1646": "taskqueue.add(url='/pay/filterlopack', method='POST', payload=json.dumps("
    },
    {
      "1696": "taskqueue.add(url='/pay/filterlopack', method='POST', payload=json.dumps(json_input), countdown=5)"
    },
    {
      "1829": "taskqueue.add(url='/notifications/pay/triggers', method='POST', payload=json.dumps(taskqueue_json))"
    },
    {
      "1835": "taskqueue.add(url=\"/pay/task/lopnotification\", method=\"GET\","
    },
    {
      "1909": "taskqueue.add(url=\"/pay/verifylopamount\", method=\"POST\", payload=json.dumps({\"userList\": user_list}))"
    },
    {
      "2164": "taskqueue.add(url='/pay/verifylopamount', method='POST', payload=json.dumps("
    },
    {
      "2168": "taskqueue.add(url='/pay/filterverifyack', method='POST', payload=json.dumps("
    },
    {
      "2211": "taskqueue.add(url='/pay/filterverifyack', method='POST', payload=json.dumps(json_input), countdown=5)"
    }
  ],
  "happierWork\\app\\modules\\pay\\py\\views_overtime.py": [
    {
      "432": "taskqueue.add(url=\"/pay/task/overtimecron\", method=\"GET\", params={\"cursor\": next_cursor.urlsafe()})"
    }
  ],
  "happierWork\\app\\modules\\pay\\py\\views_payroll.py": [
    {
      "310": "taskqueue.add(url='/pay/task/initiatereport', method=\"POST\", payload=json.dumps(json_for_report))"
    },
    {
      "322": "taskqueue.add(url='/pay/task/initiatereport', method=\"POST\", payload=json.dumps(json_for_report))"
    },
    {
      "399": "taskqueue.add(url='/pay/task/publishpayroll',"
    },
    {
      "403": "taskqueue.add(url=\"/pay/runpayroll/complete\", method=\"POST\","
    },
    {
      "458": "taskqueue.add(url='/pay/task/publishpayroll',"
    },
    {
      "583": "taskqueue.add(url=\"/pay/generatepayslip\", method=\"POST\","
    },
    {
      "645": "taskqueue.add(url='/pay/task/flushpayroll', method='POST', payload=json.dumps(task_json))"
    },
    {
      "649": "# taskqueue.add(url=\"/pay/task/flushpayroll\", method=\"POST\", payload=json.dumps(json_input))"
    },
    {
      "818": "taskqueue.add(url=\"/pay/createpayrollsummary\", method=\"POST\","
    },
    {
      "859": "taskqueue.add(url=\"/pay/runrecalculation\", method=\"POST\", payload=json.dumps(json_input))"
    },
    {
      "935": "taskqueue.add(url=\"/pay/runpayroll\", method=\"POST\","
    },
    {
      "943": "taskqueue.add(url=\"/pay/runrecalculation/ack\", method=\"POST\","
    },
    {
      "983": "taskqueue.add(url=\"/pay/recalculatesummary\", method=\"POST\","
    },
    {
      "989": "taskqueue.add(url=\"/pay/runrecalculation/ack\", method=\"POST\","
    },
    {
      "1069": "taskqueue.add(url=\"/pay/calculatearrear\", method=\"POST\","
    },
    {
      "1328": "taskqueue.add(url='/pay/vapttask/publishpayroll', method='GET', params=json_input)"
    },
    {
      "1343": "taskqueue.add(url='/pay/task/publishall', method='GET', params={'payrollId': a_payroll.key.urlsafe(),"
    },
    {
      "1376": "taskqueue.add(url='/pay/task/nuclear/deleter', method='POST', payload=json.dumps(json_input))"
    },
    {
      "1405": "taskqueue.add(url='/pay/nuclear/runner', method='POST', payload=json.dumps(json_input))"
    },
    {
      "1409": "taskqueue.add(url='/pay/task/nuclear/deleter', method='POST', payload=json.dumps(json_input))"
    },
    {
      "1506": "taskqueue.add(url='/pay/runpayroll', method='POST', payload=json.dumps(json_input))"
    },
    {
      "1509": "taskqueue.add(url='/pay/nuclear/runner', method='POST', payload=json.dumps(json_input), countdown=60)"
    },
    {
      "1520": "taskqueue.add(url='/pay/nuclear/runner', method='POST', payload=json.dumps(json_input))"
    },
    {
      "1522": "taskqueue.add(url='/pay/nuclear/runner', method='POST', payload=json.dumps(json_input), countdown=60)"
    },
    {
      "1539": "taskqueue.add(url=\"/pay/runpayroll/complete\", method=\"POST\","
    },
    {
      "1556": "taskqueue.add(url='/pay/nuclear/runner', method='POST', payload=json.dumps(json_input))"
    },
    {
      "1746": "taskqueue.add(url='/pay/task/process/finalpayroll',"
    },
    {
      "2036": "taskqueue.add(url = \"/pay/createtaskflushpayroll\", method = \"POST\", payload = json.dumps({\"statusKey\":task_key.urlsafe(),\"email\":self.json_input['email']}))"
    },
    {
      "2044": "taskqueue.add(url='/pay/task/deletepayrollforusers', method='PUT', payload=json.dumps(task_json))"
    },
    {
      "2046": "taskqueue.add(url='/pay/handlefilterdata', method='POST', payload=json.dumps(self.json_input))"
    }
  ],
  "happierWork\\app\\modules\\pay\\py\\views_payroll_inputs.py": [
    {
      "1272": "taskqueue.add(url=\"/pay/processpayrolldatahandler\", method=\"POST\", payload=json.dumps(data_json))"
    },
    {
      "1277": "taskqueue.add(url=\"/pay/processpayrollackhandler\", method=\"POST\", payload=json.dumps(json_input))"
    },
    {
      "1340": "taskqueue.add(url = \"/pay/processpayrollackhandler\", method = \"POST\", payload = json.dumps(json_input),countdown=5)"
    }
  ],
  "happierWork\\app\\modules\\pay\\py\\views_perquisite.py": [
    {
      "109": "taskqueue.add(url = \"/pay/task/adduserperk\" , method = \"PUT\" , payload = json.dumps(json_for_put))"
    },
    {
      "134": "taskqueue.add(url = \"/pay/perkrecoverydata\" , method = \"PUT\", payload = json.dumps(self.json_input))"
    }
  ],
  "happierWork\\app\\modules\\pay\\py\\views_reports.py": [
    {
      "56": "taskqueue.add(url='/pay/taxliabilityreport',"
    },
    {
      "59": "taskqueue.add(url='/pay/payrollreport',"
    },
    {
      "62": "taskqueue.add(url='/pay/taxsheetreport',"
    },
    {
      "65": "taskqueue.add(url='/pay/annualtaxsheetreport',"
    },
    {
      "69": "taskqueue.add(url='/pay/pfreport',"
    },
    {
      "72": "taskqueue.add(url='/pay/esicreport',"
    },
    {
      "76": "taskqueue.add(url='/pay/incentivereport', method='POST', payload=json.dumps(json_input))"
    },
    {
      "78": "taskqueue.add(url='/pay/reimbursementreport', method='POST', payload=json.dumps(json_input))"
    },
    {
      "81": "taskqueue.add(url='/pay/monthlyincometaxreport', method='POST', payload=json.dumps(json_input))"
    },
    {
      "84": "taskqueue.add(url='/pay/monthlyincentivereport', method='POST', payload=json.dumps(json_input))"
    },
    {
      "86": "taskqueue.add(url='/pay/bankfile', method='POST', payload=json.dumps(json_input))"
    },
    {
      "88": "taskqueue.add(url='/pay/leaveencashmentreport', method='POST', payload=json.dumps(json_input))"
    },
    {
      "90": "taskqueue.add(url='/pay/lopholidayreport', method='POST', payload=json.dumps(json_input))"
    },
    {
      "92": "taskqueue.add(url='/pay/investmentreport', method='POST', payload=json.dumps(json_input))"
    },
    {
      "94": "taskqueue.add(url='/pay/yearlysalarysummaryreport', method='POST', payload=json.dumps(json_input))"
    },
    {
      "96": "taskqueue.add(url='/pay/finalsettlementreport', method='POST', payload=json.dumps(json_input))"
    },
    {
      "98": "taskqueue.add(url='/pay/loanreport', method='POST', payload=json.dumps(json_input))"
    },
    {
      "100": "taskqueue.add(url='/pay/loansummary', method='POST', payload=json.dumps(json_input))"
    },
    {
      "102": "taskqueue.add(url='/pay/providentfundecr', method='POST', payload=json.dumps(json_input))"
    },
    {
      "103": "taskqueue.add(url='/pay/providentfundarrearecr', method='POST', payload=json.dumps(json_input))"
    },
    {
      "105": "taskqueue.add(url='/pay/montlyesicreport', method='POST', payload=json.dumps(json_input))"
    },
    {
      "110": "taskqueue.add(url='/pay/professionaltaxreport', method='POST', payload=json.dumps(json_input))"
    },
    {
      "112": "taskqueue.add(url=\"/pay/generatereport\", method=\"POST\","
    },
    {
      "128": "taskqueue.add(url = '/pay/payrollreport',"
    },
    {
      "1991": "taskqueue.add(url=\"/pay/generatereport\", method=\"POST\", payload=json.dumps(json_input), countdown=1)"
    },
    {
      "2555": "taskqueue.add(url=\"/pay/downloadreport\", method=\"POST\", payload=json.dumps(json_input))"
    },
    {
      "2689": "taskqueue.add(url='/notifications/pay/triggers', method='POST', payload=json.dumps(notification_json))"
    },
    {
      "2962": "taskqueue.add(url='/notifications/pay/triggers', method='POST', payload=json.dumps(notification_json))"
    },
    {
      "2990": "taskqueue.add(url=url, method='POST', payload=json.dumps(json_for_task))"
    },
    {
      "3823": "taskqueue.add(url='/pay/payrollreport', method='POST', payload=json.dumps(json_for_task))"
    },
    {
      "3955": "taskqueue.add(url='/pay/payrollreport', method='POST', payload=json.dumps(self.json_input),countdown=60)"
    },
    {
      "4407": "taskqueue.add(url='/pay/taxsheetreport', method='POST', payload=json.dumps(json_for_task), countdown=20)"
    },
    {
      "4589": "taskqueue.add(url='/pay/taxsheetreport', method='POST', payload=json.dumps(json_for_task), countdown=20)"
    },
    {
      "4637": "taskqueue.add(url='/pay/annualtaxsheetreport', method='POST', payload=json.dumps(json_for_task), countdown=20)"
    },
    {
      "4817": "taskqueue.add(url='/pay/annualtaxsheetreport', method='POST', payload=json.dumps(json_for_task), countdown=20)"
    },
    {
      "5082": "taskqueue.add(url='/pay/pfreport', method='POST', payload=json.dumps(json_for_task), countdown=20)"
    },
    {
      "5239": "taskqueue.add(url='/pay/pfreport', method='POST', payload=json.dumps(json_for_task), countdown=20)"
    },
    {
      "5417": "taskqueue.add(url='/pay/esicreport', method='POST', payload=json.dumps(json_for_task), countdown=20)"
    },
    {
      "5557": "taskqueue.add(url='/pay/esicreport', method='POST', payload=json.dumps(json_for_task), countdown=20)"
    },
    {
      "5767": "taskqueue.add(url='/pay/incentivereport', method='POST', payload=json.dumps(json_for_task), countdown=20)"
    },
    {
      "5817": "taskqueue.add(url='/pay/incentivereport', method='POST', payload=json.dumps(json_for_task),"
    },
    {
      "5951": "taskqueue.add(url='/pay/reimbursementreport', method='POST', payload=json.dumps(json_for_task),"
    },
    {
      "6073": "taskqueue.add(url='/pay/reimbursementreport', method='POST', payload=json.dumps(json_for_task),"
    },
    {
      "6127": "taskqueue.add(url='/pay/monthlyincometaxreport', method='POST', payload=json.dumps(json_for_task),"
    },
    {
      "6237": "taskqueue.add(url='/pay/monthlyincometaxreport', method='POST', payload=json.dumps(json_for_task),"
    },
    {
      "6292": "taskqueue.add(url='/pay/monthlyincentivereport', method='POST', payload=json.dumps(json_for_task),"
    },
    {
      "6423": "taskqueue.add(url='/pay/monthlyincentivereport', method='POST', payload=json.dumps(json_for_task),countdown=20)"
    },
    {
      "6492": "taskqueue.add(url='/pay/lopholidayreport', method='POST', payload=json.dumps(json_for_task), countdown=20)"
    },
    {
      "6568": "taskqueue.add(url='/pay/lopholidayreport', method='POST', payload=json.dumps(self.json_input),"
    },
    {
      "7122": "taskqueue.add(url='/notifications/pay/triggers', method='POST', payload=json.dumps(notification_json))"
    },
    {
      "7146": "taskqueue.add(url=url, method='POST', payload=json.dumps(json_for_task))"
    },
    {
      "7154": "taskqueue.add(url=url, method='POST', payload=json.dumps(json_for_task), countdown=20)"
    },
    {
      "7710": "taskqueue.add(url=\"/notifications/pay/triggers\", method=\"POST\", payload=json.dumps(payload))"
    },
    {
      "7715": "taskqueue.add(url=url, method='POST', payload=json.dumps(json_input), countdown=60)"
    },
    {
      "8042": "taskqueue.add(url = '/pay/reimbursementreport',payload = json.dumps(json_for_task),method = 'POST')"
    },
    {
      "8050": "taskqueue.add(url='/pay/reimbursementreport', method='POST', payload=json.dumps(json_for_task),countdown=20)"
    },
    {
      "8149": "taskqueue.add(url='/pay/reimbursementreport', method='POST', payload=json.dumps(json_for_task), countdown=20,retry_options=TaskRetryOptions(task_retry_limit=0))"
    },
    {
      "8787": "taskqueue.add(url='/pay/investmentreport', method='POST', payload=json.dumps(json_for_task), countdown=20,retry_options=TaskRetryOptions(task_retry_limit=0))"
    },
    {
      "8852": "taskqueue.add(url='/pay/investmentreport', method='POST', payload=json.dumps(json_for_task), countdown=20,retry_options=TaskRetryOptions(task_retry_limit=0))"
    },
    {
      "9165": "taskqueue.add(url='/pay/montlyesicreport', method='POST', payload=json.dumps(json_for_task), countdown=20)"
    },
    {
      "9257": "taskqueue.add(url='/pay/montlyesicreport', method='POST', payload=json.dumps(self.json_input), countdown=20)"
    },
    {
      "9466": "taskqueue.add(url='/pay/professionaltaxreport', method='POST', payload=json.dumps(json_for_task),"
    },
    {
      "9542": "taskqueue.add(url='/pay/professionaltaxreport', method='POST', payload=json.dumps(json_for_task),"
    }
  ],
  "happierWork\\app\\modules\\pay\\py\\views_salaryslip.py": [
    {
      "807": "taskqueue.add(url='/pay/createtaxworksheet', method='POST', payload=json.dumps(json_input))"
    },
    {
      "881": "taskqueue.add(url = '/notifications/pay/triggers', method  = 'POST' , payload = json.dumps(json_to_send))"
    },
    {
      "1034": "taskqueue.add(url='/notifications/pay/triggers', method='POST', payload=json.dumps(json_to_send))"
    }
  ],
  "happierWork\\app\\modules\\pay\\py\\views_variable.py": [
    {
      "45": "taskqueue.add('/pay/task/variablecron' , method = 'GET' , params = {'namespace' : a_domain.Namespace})"
    },
    {
      "184": "taskqueue.add(url='/request/init/variablepay', method='POST', params={"
    },
    {
      "216": "taskqueue.add('/pay/task/variablecron', method = 'GET', params={'namespace': json_input['namespace'],"
    },
    {
      "517": "taskqueue.add(url='/request/init/variablepay', method='POST', params={"
    }
  ],
  "happierWork\\app\\modules\\pay\\py\\views_voluntary.py": [
    {
      "140": "taskqueue.add(url=\"/pay/task/allnewprojection\", method=\"POST\",payload=json.dumps(final_json))"
    },
    {
      "173": "taskqueue.add(url=\"/pay/task/allnewprojection\", method=\"POST\",payload=json.dumps(final_json))"
    }
  ],
  "happierWork\\app\\modules\\people\\py\\views.py": [
    {
      "745": "taskqueue.add(url='/people/usersearchdocument', method=\"POST\", payload=json.dumps(json_input))"
    },
    {
      "760": "taskqueue.add(url='/people/usersearchdocument', method=\"POST\", payload=json.dumps({\"user_list\":users_data}), countdown=cd)"
    },
    {
      "1201": "taskqueue.add(url='/people/usersearchdocument', method=\"PUT\", payload=json.dumps({\"user_list\":all_user_list}))"
    },
    {
      "1204": "taskqueue.add(url='/people/advanced-search/task',method=\"PUT\",params={\"tq\":\"yes\"}, payload=json.dumps(advance_search_json), countdown=15)"
    },
    {
      "1215": "taskqueue.add(url=\"/happierFlow/processFilterUser\", method=\"PUT\")"
    },
    {
      "1356": "taskqueue.add(url='/people/profiles/task', method='POST',params={\"namespace\":namespace,\"userList\":json.dumps(user_list)})"
    },
    {
      "1358": "taskqueue.add(url='/people/update-all-dataprofiles',method=\"POST\",params={\"namespace\":namespace,\"offset\":str(offset)})"
    },
    {
      "1362": "taskqueue.add(url='/people/update-all-dataprofiles',method=\"POST\", params=para_dict)"
    },
    {
      "1814": "taskqueue.add(url='/people/empcodeapplytousers', method=\"POST\", payload=json.dumps(json_input))"
    },
    {
      "1829": "taskqueue.add(url='/people/empcodeapplytousers', method=\"POST\","
    },
    {
      "1875": "taskqueue.add(url='/people/update-all-dataprofiles', method=\"GET\", countdown=5)"
    },
    {
      "1944": "taskqueue.add(url='/people/empcodeapplytousers', method=\"POST\",payload=json.dumps({\"offset\": offset + limit, \"isUpdateAllUser\":True}), countdown=2)"
    }
  ],
  "happierWork\\app\\modules\\people\\py\\views_advanced_search.py": [
    {
      "153": "# \t\ttaskqueue.add(url='/people/advanced-search',method=\"PUT\", params={\"offset\":0,\"requestFromCron\":\"true\"}, countdown=100)"
    },
    {
      "173": "# \t\ttaskqueue.add(url='/people/advanced-search',method=\"PUT\", params={\"offset\":0,\"requestFromCron\":\"true\"}, countdown=15)"
    },
    {
      "573": "#taskqueue.add(url='/people/advanced-search',method=\"PUT\", params={\"offset\":offset+limit,\"requestFromCron\":\"true\"}, countdown=100)"
    },
    {
      "587": "taskqueue.add(url=\"/onboarding/trigger\", method=\"GET\")"
    },
    {
      "592": "taskqueue.add(url=\"/offboarding/trigger\", method=\"GET\")"
    },
    {
      "608": "taskqueue.add(url=\"/people/advanced-search/task\", method=\"PUT\",payload=self.request.body)"
    },
    {
      "609": "# taskqueue.add(url=\"/happierDeck/sync/DeckCards\", method=\"PUT\",payload=json.dumps({\"userlist\": all_users}), countdown=200)"
    },
    {
      "632": "taskqueue.add(url=\"/happierDeck/sync/DeckCards\", method=\"PUT\", payload=json.dumps({\"userlist\": all_users}),countdown=5)"
    },
    {
      "634": "taskqueue.add(url='/people/advanced-search/task',method=\"PUT\", params={\"offset\":offset+limit,\"requestFromCron\":\"true\"}, countdown=100)"
    },
    {
      "766": "taskqueue.add(url='/people/advanced-search',method=\"PUT\", params={\"offset\":0,\"requestFromCron\":\"true\"}, countdown=100)"
    },
    {
      "786": "taskqueue.add(url='/people/advanced-search',method=\"PUT\", params={\"offset\":0,\"requestFromCron\":\"true\"}, countdown=15)"
    },
    {
      "2236": "taskqueue.add(url='/people/advanced-search/aggregator',params={\"namespace\":aDomain.Namespace},method='PUT')"
    },
    {
      "2238": "#taskqueue.add(url='/people/advanced-search/aggregator',params={\"namespace\":\"f66a15f9-658f-40cb-8910-1edac1dc0888\"},method='POST')"
    },
    {
      "2242": "taskqueue.add(url='/people/advanced-search/aggregator',params={\"namespace\": json_input[\"namespace\"]}, method='POST')"
    },
    {
      "2244": "taskqueue.add(url='/people/advanced-search/aggregator',params={\"namespace\":json_input[\"namespace\"]},method='PUT')"
    },
    {
      "2641": "taskqueue.add(url='/fetch/peoplecsvservice', method=\"POST\", payload=json.dumps(sendData))"
    }
  ],
  "happierWork\\app\\modules\\people\\py\\views_people_timeline.py": [
    {
      "419": "taskqueue.add(url=self.URLLINK, method=\"POST\")"
    },
    {
      "430": "taskqueue.add(url=self.URLLINK, method=\"POST\")"
    },
    {
      "432": "taskqueue.add(url=self.URLLINK, method=\"POST\")"
    },
    {
      "656": "taskqueue.add(url='/notifications/other/triggers', method=\"GET\", params=para_dict)"
    }
  ],
  "happierWork\\app\\modules\\request\\py\\leave_validation_service.py": [
    {
      "73": "taskqueue.add(url=\"/reqlist/leavevalidationbot\",countdown=3,method=\"GET\",params={\"botData\":str(param_dict)})"
    },
    {
      "204": "taskqueue.add(url=\"/request/init/regularisation/task\",params = {\"gcu\": user_email ,\"data\": json.dumps(new_request_dict),\"requestType\":\"OTHER\"},method=\"POST\")"
    },
    {
      "257": "taskqueue.add(url=\"/request/init/leave/task\",countdown=1,method=\"POST\",params=send_param)"
    }
  ],
  "happierWork\\app\\modules\\request\\py\\models_request.py": [
    {
      "806": "taskqueue.add(url=url,countdown=30,method=\"GET\", params = json)"
    }
  ],
  "happierWork\\app\\modules\\request\\py\\scheduled_conf_service.py": [
    {
      "20": "taskqueue.add(url=\"/reqlist/scheduleconf\", countdown=countdown, method=\"POST\")"
    },
    {
      "122": "taskqueue.add(url='/request/init/confirmation/task', params={\"data\":json.dumps({\"initData\":initiation_json,\"requestName\":\"Employee Confirmation\"}),\"requestType\":\"OTHER\"}, method=\"POST\")"
    },
    {
      "150": "taskqueue.add(url=\"/notifications/triggers\",countdown=30,method=\"GET\", params=params)"
    }
  ],
  "happierWork\\app\\modules\\request\\py\\utils.py": [
    {
      "6221": "#\ttaskqueue.add(url=\"/people-profile/update\",params={\"gcu\":gcu,\"requestType\":\"PROFILE\",\"data\":json.dumps(post_work_flow_people_profile_update_json_CIPD)},method=\"POST\")"
    },
    {
      "6310": "taskqueue.add(url=\"/people-profile/update/task\",params={\"gcu\":gcu,\"requestType\":\"PROFILE\",\"data\":json.dumps(data)})"
    },
    {
      "7245": "taskqueue.add(url='/documents/processing-data', method=\"PUT\", payload=json.dumps({\"gcu\":gcu,\"processData\":single_flow_doc_hash,\"processFlag\":\"RUNNING\"}))"
    },
    {
      "7861": "taskqueue.add(url=\"/request/init/offer-letter-signing\",params={\"gcu\":gcu,\"requestType\":\"OTHER\",\"data\":json.dumps(initiation_json)},method=\"POST\")"
    },
    {
      "8454": "taskqueue.add(url='/pay/task/inputs/fof', method=\"POST\",payload=json.dumps({\"email\": userObj.userEmail, \"recalculateComponents\": True}))"
    }
  ],
  "happierWork\\app\\modules\\request\\py\\utils_flow.py": [
    {
      "109": "taskqueue.add(url='/happierDeck/admin/cards/rewards-recognition', headers=header_json,method='PUT', payload=json.dumps(payload_json))"
    }
  ],
  "happierWork\\app\\modules\\request\\py\\views_flow.py": [
    {
      "1512": "taskqueue.add(url='/users/email/update/task', countdown=30,method='POST', params={\"gcu\":current_user, \"oldId\":process_request_object.processInitiatedFor,\"newId\":create_happierWork_account_id})"
    },
    {
      "1891": "taskqueue.add(url=\"/reqlist/process/duedate/notification\", method=\"POST\","
    },
    {
      "2821": "#~ taskqueue.add(url='/appIntegrations', method='POST',payload=json.dumps({\"type\":\"WISHES\",\"data\":final_json}))"
    },
    {
      "2843": "#~ taskqueue.add(url='/appIntegrations', method='POST',payload=json.dumps({\"type\":\"WISHES\",\"data\":final_json}))"
    }
  ],
  "happierWork\\app\\modules\\request\\py\\views_reports_flow.py": [
    {
      "236": "taskqueue.add(url=url,params=given_data,method=\"GET\",target=module_target)"
    },
    {
      "592": "taskqueue.add(url=url, params=given_data, method=\"GET\", target=module_target)"
    },
    {
      "1126": "taskqueue.add(url=\"/reqlist/process/report/template/\"+str(process_id)+\"/\"+str(unique_id)+\"/\"+str(step_id)+\"/\"+gcu,method=\"GET\",target=module_target)"
    },
    {
      "1216": "taskqueue.add(url=\"/reqlist/process/report/template/task/\"+str(process_id)+\"/\"+str(unique_id),method=\"GET\",params={\"gcu\":gcu},target=module_target)"
    },
    {
      "1320": "taskqueue.add(url=\"/reqlist/process/dashboard/task/\" + gcu, method=\"GET\",params=param_dict,target=module_target)"
    },
    {
      "1322": "taskqueue.add(url=\"/reqlist/process/report/templateformat/task/\"+str(process_id)+\"/\"+gcu,method=\"GET\",params=param_dict,target=module_target)"
    },
    {
      "1675": "taskqueue.add(url='/reqlist/processAnalytics/field', method=\"POST\",params={\"namespace\":aNamespace})"
    },
    {
      "1710": "taskqueue.add(url='/reqlist/processAnalytics/field', method=\"POST\",params={\"namespace\":namespace,\"processId\":str(process_object.key.id())},countdown=cnt)"
    },
    {
      "1802": "taskqueue.add(url='/reqlist/processAnalytics/field', method=\"POST\",params={\"namespace\":namespace,\"processId\":str(process_object.key.id()),\"offset\":str(offset)})"
    }
  ],
  "happierWork\\app\\modules\\request\\py\\views_request.py": [
    {
      "127": "taskqueue.add(url=\"/request/decision/task\", method=\"PUT\", payload=json.dumps(other_request_decision_json))"
    },
    {
      "295": "# taskqueue.add(url=\"/notifications/triggers\",countdown=30,method=\"POST\",payload=json.dumps(notification_params_dict))"
    },
    {
      "301": "taskqueue.add(url=\"/notifications/triggers\", countdown=30, method=\"POST\","
    },
    {
      "312": "taskqueue.add(url=\"/notifications/triggers\", countdown=30, method=\"POST\","
    },
    {
      "350": "taskqueue.add(url=\"/request/documents/share-permission\", method=\"PUT\", payload=json.dumps("
    },
    {
      "361": "taskqueue.add(url=\"/notifications/documents/triggers\", method=\"GET\",params=sendJson)"
    },
    {
      "367": "taskqueue.add(url='/users/validate/csvdata',"
    },
    {
      "371": "# taskqueue.add(url = \"/pay/changepeopledata\" , method = \"POST\" , payload = json.dumps({\"email\" : direct_hash.keys()[0]}), countdown = 80)"
    },
    {
      "799": "taskqueue.add(url='/request/init/internal', method=\"POST\","
    },
    {
      "828": "taskqueue.add(url='/request/init/internal', method=\"POST\","
    },
    {
      "901": "taskqueue.add(url='/reqlist/processInitiation/' + initiation_json[\"processId\"], method=\"POST\","
    },
    {
      "919": "taskqueue.add(url='/reqlist/processInitiation/' + initiation_json[\"processId\"], method=\"POST\","
    },
    {
      "935": "taskqueue.add(url='/reqlist/processDraft/' + initiation_json[\"processId\"], method=\"POST\","
    },
    {
      "952": "taskqueue.add(url='/reqlist/processDraft/' + initiation_json[\"processId\"], method=\"POST\","
    },
    {
      "968": "taskqueue.add(url='/request/init/internal', method=\"POST\", payload=json.dumps(initiation_json), countdown=5,"
    },
    {
      "982": "taskqueue.add(url='/request/init/internal', method=\"POST\", payload=json.dumps(initiation_json), countdown=5,retry_options=TaskRetryOptions(task_retry_limit=0))"
    },
    {
      "1337": "taskqueue.add(url='/gapi/v1/calendar/events/task', method=\"POST\", payload=json.dumps(calendar_json))"
    },
    {
      "1352": "taskqueue.add(url='/time-and-attendance/intimationnoncompliance',"
    },
    {
      "1359": "taskqueue.add(url='/resourcerequest/requisitions/task',"
    },
    {
      "1386": "taskqueue.add(url=\"/pay/declaration\", method=\"POST\", payload=json.dumps(init_data))"
    },
    {
      "1402": "taskqueue.add(url=\"/pay/task/adduserclaim\", method=\"POST\", payload=json.dumps(init_data))"
    },
    {
      "1416": "taskqueue.add(url=\"/pay/voluntarypf\", method=\"POST\", payload=json.dumps(init_data))"
    },
    {
      "1430": "taskqueue.add(url=\"/pay/adduserloan\", method=\"POST\", payload=json.dumps(init_data))"
    },
    {
      "1442": "taskqueue.add(url=\"/pay/addusermisccomponent\", method=\"POST\", payload=json.dumps(init_data))"
    },
    {
      "1494": "taskqueue.add(url=\"/perform/actioner/portfolio/list\", method=\"PUT\", payload=json.dumps({\"oldActioners\":old_actioners, \"currentActioners\":current_actioners, \"portfolioKey\":user_plan_obj.key.urlsafe(), \"fromDate\":getHRMSDate(user_plan_obj.fromDate), \"toDate\":getHRMSDate(user_plan_obj.toDate)}))"
    },
    {
      "1518": "taskqueue.add(url=\"/notifications/perform/triggers\", method=\"GET\","
    },
    {
      "1531": "taskqueue.add(url=\"/perform/actioner/portfolio/list\", method=\"PUT\", payload=json.dumps("
    },
    {
      "1542": "taskqueue.add(url='/request/update-travel-req', method=\"POST\", payload=json.dumps({\"requestId\":requestId, \"gcu\":gcu, \"userList\":request_body_dict[\"travellers\"]}),countdown=5)"
    },
    {
      "1585": "taskqueue.add(url=\"/perform/actioner/portfolio/list\", method=\"PUT\", payload=json.dumps("
    },
    {
      "1630": "taskqueue.add(url='/gapi/v1/calendar/events/task', method=\"POST\", payload=json.dumps(calendar_json))"
    },
    {
      "1644": "taskqueue.add(url='/time-and-attendance/intimationnoncompliance',"
    },
    {
      "1913": "taskqueue.add(url='/reqlist/processInitiation/' + document_submission_json[\"processId\"], method=\"PUT\","
    },
    {
      "1941": "taskqueue.add(url='/reqlist/processInitiation/' + document_submission_json[\"processId\"],"
    },
    {
      "1996": "taskqueue.add(url='/request/documents/submit/internal', method=\"POST\","
    },
    {
      "2007": "taskqueue.add(url='/request/cancel/internal', method=\"PUT\", payload=json.dumps(document_submission_json),"
    },
    {
      "2240": "taskqueue.add(url=\"/notifications/documents/triggers\", countdown=30, method=\"GET\", params=params)"
    },
    {
      "2247": "taskqueue.add(url=\"/notifications/pay/triggers\", countdown=30, method=\"GET\", params=params)"
    },
    {
      "2254": "taskqueue.add(url=\"/notifications/pay/triggers\", countdown=30, method=\"GET\", params=params)"
    },
    {
      "2264": "taskqueue.add(url=\"/notifications/documents/triggers\", countdown=30, method=\"GET\", params=params)"
    },
    {
      "2285": "# \ttaskqueue.add(url=\"/notifications/triggers\",countdown=30,method=\"GET\", params=params)"
    },
    {
      "2462": "taskqueue.add(url=\"/notifications/documents/triggers\", countdown=30, method=\"GET\","
    },
    {
      "2468": "taskqueue.add(url=\"/notifications/pay/triggers\", countdown=30, method=\"GET\","
    },
    {
      "2733": "taskqueue.add(url='/people/advanced-search/task', method=\"PUT\", params={\"tq\": \"yes\"},"
    },
    {
      "2803": "taskqueue.add(url='/people/advanced-search/task', method=\"PUT\", params={\"tq\": \"yes\"},"
    },
    {
      "2818": "# \ttaskqueue.add(url='/resourcerequest/requisitions',"
    },
    {
      "2831": "taskqueue.add(url=\"/pay/declaration\", method=\"PUT\", payload=json.dumps(input_json))"
    },
    {
      "2843": "taskqueue.add(url=\"/pay/adduserloan\", method=\"PUT\", payload=json.dumps(init_data))"
    },
    {
      "2857": "taskqueue.add(url=\"/pay/addusermisccomponent\", method=\"PUT\", payload=json.dumps(init_data))"
    },
    {
      "2863": "taskqueue.add(url=\"/pay/task/adduserclaim\", method=\"PUT\", payload=json.dumps(input_json))"
    },
    {
      "2875": "taskqueue.add(url=\"/people-profile/update/task\","
    },
    {
      "2881": "taskqueue.add(url=\"/onboarding/resetprocess\","
    },
    {
      "2885": "taskqueue.add(url='/onboarding/tracking/internal', method=\"POST\","
    },
    {
      "2965": "taskqueue.add(url='/pay/task/variable', method='POST', payload=json.dumps(json_to_send))"
    },
    {
      "3001": "taskqueue.add(url=\"/resourcerequest/cancel\", method=\"PUT\","
    },
    {
      "3011": "taskqueue.add(url=\"/pay/declaration\", method=\"PUT\", payload=json.dumps(input_json))"
    },
    {
      "3017": "taskqueue.add(url=\"/pay/task/adduserclaim\", method=\"PUT\", payload=json.dumps(input_json))"
    },
    {
      "3029": "taskqueue.add(url=\"/pay/adduserloan\", method=\"PUT\", payload=json.dumps(init_data))"
    },
    {
      "3043": "taskqueue.add(url=\"/pay/addusermisccomponent\", method=\"PUT\", payload=json.dumps(init_data))"
    },
    {
      "3058": "taskqueue.add(url='/pay/task/variable', method='POST', payload=json.dumps(json_to_send))"
    },
    {
      "3075": "taskqueue.add(url=\"/onboarding/resetprocess\","
    },
    {
      "3082": "taskqueue.add(url=\"/pay/task/adduserclaim\", method=\"PUT\", payload=json.dumps(input_json))"
    },
    {
      "3095": "taskqueue.add(url=\"/pay/voluntarypf\", method=\"PUT\", payload=json.dumps(input_json))"
    },
    {
      "3100": "taskqueue.add(url='/resourcerequest/requisitions/task',"
    },
    {
      "3110": "taskqueue.add(url=\"/perform/plan/request\", method=\"PUT\", payload=json.dumps({\"requestId\":request_obj.key.urlsafe(),\"gcu\":gcu}))"
    },
    {
      "3113": "taskqueue.add(url=\"/perform/observation/request\", method=\"PUT\","
    },
    {
      "3117": "taskqueue.add(url=\"/perform/observation/feedback/request\", method=\"PUT\","
    },
    {
      "3140": "taskqueue.add(url='/gapi/v1/calendar/events/task', method=\"POST\","
    },
    {
      "3210": "taskqueue.add(url='/gapi/v1/calendar/events/task', method=\"POST\","
    },
    {
      "3220": "taskqueue.add(url=\"/time-and-attendance/intimationcron\", method=\"POST\","
    },
    {
      "3259": "taskqueue.add(url=\"/documents/data-set\", method=\"PUT\", payload=json.dumps(document_data_set))"
    },
    {
      "3279": "taskqueue.add(url='/notifications/user-preferences-task', method=\"POST\", countdown=60,"
    },
    {
      "3289": "taskqueue.add(url=\"/notifications/documents/triggers\", countdown=30, method=\"GET\","
    },
    {
      "3717": "taskqueue.add(url='/pay/task/adduserclaim', method=\"PUT\","
    },
    {
      "3720": "taskqueue.add(url=\"/pay/task/adduserclaim\", method=\"PUT\", payload=json.dumps(input_json))"
    },
    {
      "3749": "taskqueue.add(url=\"/perform/actioner/portfolio/list\", method=\"PUT\","
    },
    {
      "3780": "taskqueue.add(url=\"/perform/actioner/portfolio/list\", method=\"PUT\","
    },
    {
      "3807": "taskqueue.add(url=\"/perform/actioner/portfolio/list\", method=\"PUT\","
    },
    {
      "3823": "taskqueue.add(url=\"/pay/voluntarypf\", method=\"PUT\", payload=json.dumps(input_json))"
    },
    {
      "3833": "taskqueue.add(url=\"/pay/declaration\", method=\"PUT\", payload=json.dumps(input_json))"
    },
    {
      "3839": "taskqueue.add(url=\"/pay/adduserloan\", method=\"PUT\", payload=json.dumps(input_json))"
    },
    {
      "3845": "taskqueue.add(url=\"/pay/addusermisccomponent\", method=\"PUT\", payload=json.dumps(input_json))"
    },
    {
      "3850": "taskqueue.add(url=\"/resourcerequest/cancel\", method=\"PUT\", payload=json.dumps(input_json))"
    },
    {
      "3984": "taskqueue.add(url='/pay/task/adduserclaim', method=\"PUT\","
    },
    {
      "3987": "taskqueue.add(url=\"/pay/task/adduserclaim\", method=\"PUT\", payload=json.dumps(input_json))"
    },
    {
      "3997": "taskqueue.add(url=\"/pay/declaration\", method=\"PUT\", payload=json.dumps(input_json))"
    },
    {
      "4002": "taskqueue.add(url=\"/pay/adduserloan\", method=\"PUT\", payload=json.dumps(init_data))"
    },
    {
      "4008": "taskqueue.add(url=\"/pay/addusermisccomponent\", method=\"PUT\", payload=json.dumps(init_data))"
    },
    {
      "4015": "taskqueue.add(url=\"/pay/voluntarypf\", method=\"PUT\", payload=json.dumps(input_json))"
    },
    {
      "4020": "taskqueue.add(url=\"/resourcerequest/cancel\", method=\"PUT\", payload=json.dumps(input_json))"
    },
    {
      "4035": "taskqueue.add(url='/gapi/v1/calendar/events/task', method=\"POST\","
    },
    {
      "4075": "taskqueue.add(url='/people/advanced-search/task', method=\"PUT\", params={\"tq\": \"yes\"},"
    },
    {
      "4132": "taskqueue.add(url=\"/time-and-attendance/intimationcron\", method=\"POST\","
    },
    {
      "4143": "taskqueue.add(url='/gapi/v1/calendar/events/task', method=\"POST\", payload=json.dumps(calendar_json))"
    },
    {
      "4225": "taskqueue.add(url=\"/notifications/other/triggers\",method=\"GET\",countdown=10,params={\"triggerName\":\"REQUEST_COMMENT\", \"requestId\":requestId, \"actionedBy\":comment[\"commentAuthor\"]})"
    },
    {
      "4383": "taskqueue.add(url=\"/request/filter/user/task\", payload=json.dumps(given_params), method=\"PUT\")"
    },
    {
      "4457": "taskqueue.add(url='/notifications/triggers', method=\"POST\", payload=json.dumps(date_dict), countdown=30)"
    },
    {
      "4474": "taskqueue.add(url=\"/request/filter/user/task\", payload=json.dumps(chunck_payload), method=\"POST\","
    },
    {
      "4759": "taskqueue.add(url=\"/request/init/regularisation/task\","
    },
    {
      "4763": "taskqueue.add(url=\"/people-profile/update/task\","
    },
    {
      "4793": "taskqueue.add(url='/notifications/triggers', method=\"POST\", payload=json.dumps(date_dict), countdown=60)"
    },
    {
      "4823": "taskqueue.add(url=\"/request/cancel/task\", method=\"POST\", params=result)"
    },
    {
      "4838": "taskqueue.add(url=\"/request/decision/task\", method=\"PUT\","
    },
    {
      "4861": "taskqueue.add(url=\"/request/cancel/task\", method=\"POST\", params=result)"
    },
    {
      "4885": "taskqueue.add(url='/reqlist/processInitiation/' + request_id, method=\"PUT\","
    },
    {
      "4890": "taskqueue.add(url=\"/request/decision/task\", method=\"PUT\","
    },
    {
      "5078": "taskqueue.add(url='/request/escalation', method=\"POST\")"
    },
    {
      "5461": "taskqueue.add(url='/resourcerequest/requisitions/task',"
    },
    {
      "5468": "taskqueue.add(url=\"/resourcerequest/cancel\", method=\"PUT\","
    },
    {
      "5554": "taskqueue.add(url='/gapi/v1/calendar/events/task', method=\"POST\","
    },
    {
      "5563": "taskqueue.add(url=\"/time-and-attendance/intimationcron\", method=\"POST\","
    },
    {
      "5987": "taskqueue.add(url='/workprofile/userworkprofilequeue', method='POST', payload=json.dumps(request_data_dict))"
    },
    {
      "6015": "taskqueue.add(url=\"/pay/task/ctcprofile/apply\", method=\"POST\", payload=json.dumps(json_to_send))"
    },
    {
      "6016": "taskqueue.add(url=\"/pay/task/ctc/apply\", method=\"POST\", payload=json.dumps("
    },
    {
      "6058": "taskqueue.add(url=\"/announcement/system\", method=\"POST\", payload=json.dumps(json_to_send))"
    },
    {
      "6062": "taskqueue.add(url=\"/happierDeck/cards/sync/task\","
    },
    {
      "6067": "taskqueue.add(url='/people/advanced-search/task', method=\"PUT\", params={\"tq\": \"yes\"},"
    },
    {
      "6276": "taskqueue.add(url=task_url, params={\"data\": json.dumps(data), \"requestType\": \"OTHER\", \"gcu\": SYSTEM_NAME},"
    },
    {
      "6333": "taskqueue.add(url=\"/request/delegate/task\", method=\"PUT\", payload=json.dumps(request_updateApprover_json))"
    },
    {
      "6480": "taskqueue.add(url='/offboarding/tracking/internal', method=\"POST\", payload=json.dumps("
    },
    {
      "6485": "# taskqueue.add(url='/offboarding/tracking/internal',method=\"POST\",payload=json.dumps({\"userEmail\":request_obj.InitiatedFor,\"lastWorkingDate\":updated_last_working_date,\"requestDataDict\":approver_obj.approverDataJSON}))"
    },
    {
      "6576": "taskqueue.add(url=\"/offboarding/trigger/task\", params={\"tracking_id\":offboarding_tracking_settlement_obj.uniqueId,\"useremail\":request_obj.InitiatedFor,\"manualFlag\":False}, method=\"GET\",countdown=int(10))"
    },
    {
      "6736": "taskqueue.add(url='/pay/zerosalary', method=\"POST\", payload=json.dumps(pay_dict), countdown=10)"
    },
    {
      "6753": "taskqueue.add(url='/people/advanced-search/task', method=\"PUT\", params={\"tq\": \"yes\"},"
    },
    {
      "6847": "taskqueue.add(url='/timesheet/project-updatedocuments',countdown=15, method=\"POST\", payload=json.dumps(paraDict))"
    },
    {
      "6854": "# taskqueue.add(url='/timesheet/sync-project',method=\"PUT\",payload=json.dumps({\"uniqueIds\":[project_obj.key.urlsafe()]}),countdown=10)"
    },
    {
      "6903": "taskqueue.add(url='/timesheet/project-updatedocuments',countdown=5, method=\"POST\", payload=json.dumps(paraDict))"
    },
    {
      "6904": "# taskqueue.add(url='/timesheet/sync-project',method=\"PUT\",payload=json.dumps({\"uniqueIds\":[request_data_dict[\"uniqueId\"]]}),countdown=10)"
    },
    {
      "6938": "# taskqueue.add(url='/timesheet/sync-worklog',method=\"PUT\",payload=json.dumps({\"uniqueIds\":[work_log_obj.key.urlsafe()]}),countdown=10)"
    },
    {
      "6961": "# taskqueue.add(url='/timesheet/sync-worklog',method=\"PUT\",payload=json.dumps({\"uniqueIds\":[request_data_dict[\"uniqueId\"]]}),countdown=10)"
    },
    {
      "7028": "taskqueue.add(url='/timesheet/project-updatedocuments',countdown=5, method=\"POST\", payload=json.dumps(paraDict))"
    },
    {
      "7030": "# taskqueue.add(url='/timesheet/sync-project',method=\"PUT\",payload=json.dumps({\"uniqueIds\":[project_key]}),countdown=10)"
    },
    {
      "7081": "# taskqueue.add(url='/timesheet/sync-worklog',method=\"PUT\",payload=json.dumps({\"uniqueIds\":[project_key]}),countdown=10)"
    },
    {
      "7369": "taskqueue.add(url='/request/reopen-pending-req', method=\"PUT\", params=para_dict)"
    },
    {
      "7448": "taskqueue.add(url=\"/documents/data-set\", method=\"PUT\", payload=json.dumps(output_json))"
    },
    {
      "7617": "taskqueue.add(url=\"/notifications/documents/triggers\", countdown=20, method=\"POST\", payload=json.dumps(params))"
    },
    {
      "7711": "taskqueue.add(url='/request/update-requests-after-prostruc', method=\"POST\", params=para_dict)"
    },
    {
      "7773": "taskqueue.add(url=\"/request/decision/task\", method=\"PUT\", payload=json.dumps({\"gcu\": gcu, \"reqs\": reqs}))"
    },
    {
      "7878": "taskqueue.add(url=\"/request/doc-permission-syncer\",method=\"POST\", payload=json.dumps(json_body))"
    },
    {
      "8065": "taskqueue.add(url=\"/documents/issue-document/task\", method=\"POST\", params=paraDict)"
    }
  ],
  "happierWork\\app\\modules\\timesheet\\py\\sap.py": [
    {
      "138": "taskqueue.add(url=tqUrl, method=\"PUT\","
    },
    {
      "203": "taskqueue.add(url='/users/upload/sync/task', method='POST',"
    },
    {
      "258": "taskqueue.add(url='/time-and-attendance/internal/addtodb', method=\"POST\", params=returnData)"
    },
    {
      "361": "taskqueue.add(url='/employees/leaves', method='PUT',"
    },
    {
      "390": "taskqueue.add(url=\"/employees/leaves\", method='PUT', payload=json.dumps("
    },
    {
      "470": "taskqueue.add(url='/employees/regularisations', method='PUT',"
    },
    {
      "516": "taskqueue.add(url='/employees/regularisations', method='PUT', payload=json.dumps("
    }
  ],
  "happierWork\\app\\modules\\timesheet\\py\\timesheet_reports.py": [
    {
      "66": "taskqueue.add(url='/timesheet/reports/projectcost-task', method='POST', payload=json.dumps(params))"
    },
    {
      "68": "taskqueue.add(url='/timesheet/reports/projectcost-cloud-sql-task', method='POST', payload=json.dumps(params))"
    },
    {
      "651": "response = taskqueue.add(url='/timesheet/reports/projectcost-task', countdown=3,method='POST', payload=json.dumps(paraDict))"
    },
    {
      "1411": "taskqueue.add(url='/timesheet/reports/noworklogs-task', method='POST', payload=json.dumps(params))"
    },
    {
      "1510": "taskqueue.add(url='/timesheet/reports/noworklogs-task',countdown=2, method='POST', payload=json.dumps(paraDict))"
    },
    {
      "2463": "taskqueue.add(url='/timesheet/reports/worklogdetails-task', method=\"POST\", payload=json.dumps(paraDict))"
    },
    {
      "2505": "taskqueue.add(url='/timesheet/reports/worklogdetails-task', method=\"POST\", payload=json.dumps(paraDict))"
    },
    {
      "2770": "taskqueue.add(url='/timesheet/reports/projectdetails-task', method=\"POST\", payload=json.dumps(paraDict))"
    },
    {
      "2811": "taskqueue.add(url='/timesheet/reports/projectdetails-task', method=\"POST\", payload=json.dumps(paraDict))"
    },
    {
      "2833": "taskqueue.add(url=self.URL, method=\"POST\")"
    },
    {
      "2964": "taskqueue.add(url=self.URL, method=\"POST\", params={\"offset\": offset, \"limit\": limit})"
    }
  ],
  "happierWork\\app\\modules\\timesheet\\py\\views.py": [
    {
      "1082": "taskqueue.add(url='/timesheet/project-member-update',method=\"POST\")"
    },
    {
      "1137": "taskqueue.add(url='/timesheet/project-updatedocuments',countdown=60, method=\"POST\", payload=json.dumps(pDict))"
    },
    {
      "1142": "taskqueue.add(url='/timesheet/project-member-update',method=\"POST\",params={\"pageToken\":nextCurs})"
    },
    {
      "1247": "taskqueue.add(url='/timesheet/project-updatedocuments',countdown=int(offset/40), method=\"POST\", payload=json.dumps(paraDict))"
    },
    {
      "1251": "taskqueue.add(url='/timesheet/project-updatedocuments', method=\"POST\", payload=json.dumps(paraDict))"
    },
    {
      "1515": "# taskqueue.add(url='/time-and-attendance/data-migrate',countdown=5,method=\"POST\",params={\"pageToken\":nextCurs})"
    },
    {
      "1526": "taskqueue.add(url='/timesheet/data-migrate', method='POST', params=params)"
    },
    {
      "1554": "taskqueue.add(url='/timesheet/data-migrate',countdown=3,method=\"POST\",params={\"pageToken\":nextCurs,\"namespace\":params['namespace']})"
    },
    {
      "1691": "taskqueue.add(url='/timesheet/validation-cron',method=\"POST\")"
    },
    {
      "1781": "taskqueue.add(url='/notifications/timesheet/noworklogs', countdown=40, method=\"GET\","
    },
    {
      "1785": "taskqueue.add(url='/notifications/timesheet/noworklogs', countdown=30, method=\"GET\","
    },
    {
      "1791": "taskqueue.add(url=\"/timesheet/noworklog-cron-task\",countdown=5, method = \"POST\", params = {'namespace':namespace_manager.get_namespace(), \"offset\":offset , \"startDate\":self.startDate.strftime(\"%d-%m-%Y\"), \"endDate\":self.endDate.strftime(\"%d-%m-%Y\")})"
    },
    {
      "1819": "taskqueue.add(url=\"/timesheet/noworklog-cron-task\", method=\"POST\","
    },
    {
      "1832": "taskqueue.add(url=\"/timesheet/noworklog-cron-task\", method=\"POST\","
    }
  ],
  "happierWork\\app\\modules\\tna\\py\\balance_regularisation_service.py": [
    {
      "191": "taskqueue.add(url='/notifications/attendance/triggers',method=\"POST\",countdown=45,payload=json.dumps(paramDicts))"
    },
    {
      "199": "taskqueue.add(url='/notifications/attendance/triggers',method=\"POST\",countdown=30,payload=json.dumps(paramDicts))"
    },
    {
      "249": "taskqueue.add(url='/notifications/attendance/triggers',method=\"POST\",countdown=5,payload=json.dumps(paraDict))"
    }
  ],
  "happierWork\\app\\modules\\tna\\py\\leavebalance_service.py": [
    {
      "2980": "taskqueue.add(url='/prepare/report/leave-task',method=\"POST\",payload=json.dumps(paramDict))"
    },
    {
      "3360": "taskqueue.add(url='/prepare/report/leave-task',method=\"POST\",payload=json.dumps(paramdict))"
    }
  ],
  "happierWork\\app\\modules\\tna\\py\\patches.py": [
    {
      "14": "taskqueue.add(url='/ureq/updatehrother', method=\"POST\",payload=json.dumps({\"namespace\":namespace}))"
    },
    {
      "80": "taskqueue.add(url='/ureq/updatehrother', method=\"POST\",payload=json.dumps({\"offset\":offset,\"namespace\":namespace}))"
    },
    {
      "90": "taskqueue.add(url='/ureq/updatelvother', method=\"POST\",payload=json.dumps({\"namespace\":namespace}))"
    },
    {
      "161": "taskqueue.add(url='/ureq/updatelvother', method=\"POST\",payload=json.dumps({\"offset\":offset,\"namespace\":str(namespace)}))"
    }
  ],
  "happierWork\\app\\components\\notification_engine\\new_notification_engine\\common\\views_setup.py": [
    {
      "30": "taskqueue.add(url='/notifications/mail/template/setup', method=\"POST\", countdown=30, payload=json.dumps({\"factor\": factor, \"start\": start, \"end\": end}))"
    },
    {
      "164": "taskqueue.add(url='/notifications/sendmail/template/setup', payload=json.dumps({\"triggerName\":trigger_name,\"namespace\":[a_namespace]}), method=\"PUT\")"
    },
    {
      "185": "taskqueue.add(url='/notifications/sendmail/template/setup', payload=json.dumps({\"triggerName\": trigger_key, \"namespace\": [a_namespace]}), method=\"PUT\")"
    }
  ],
  "happierWork\\app\\components\\notification_engine\\new_notification_engine\\modules\\views_attendance.py": [
    {
      "800": "taskqueue.add(url=\"/notifications/attendance/triggers\", method=\"GET\", params=params)"
    }
  ],
  "happierWork\\app\\components\\notification_engine\\new_notification_engine\\modules\\views_offboardings.py": [
    {
      "4233": "taskqueue.add(url='/notifications/offboarding/triggers-task', method='POST', payload=json.dumps("
    },
    {
      "4239": "taskqueue.add(url='/notifications/offboarding/triggers-task', method='POST', payload=json.dumps("
    },
    {
      "4749": "taskqueue.add(url='/notifications/offboarding/triggers-task', method='POST',payload=json.dumps({\"approverbodyContent\": value, \"approverEmail\": key, \"triggerType\": \"OFFBOARDING_TASK_EDITED\", \"requestType\": \"OFFBOARDING_TASK_EDITED\"}))"
    }
  ],
  "happierWork\\app\\components\\notification_engine\\new_notification_engine\\modules\\views_onboardings.py": [
    {
      "995": "taskqueue.add(url='/notifications/onboarding/triggers-task', method='GET',"
    },
    {
      "1664": "taskqueue.add(url='/notifications/onboarding/triggers-task', method='POST',"
    }
  ],
  "happierWork\\app\\components\\notification_engine\\new_notification_engine\\modules\\views_perform.py": [
    {
      "310": "taskqueue.add(url=\"/notifications/perform/triggers\", countdown=30, method=\"GET\", params={'triggerType':'OBJECTIVE_PUBLISH_REQUEST_DELETED','requestId':request_id})"
    },
    {
      "381": "taskqueue.add(url=\"/notifications/perform/triggers\", countdown=30, method=\"GET\",params={'triggerType': 'OBJECTIVE_PUBLISH_DELETED_APPROVED', 'requestId': request_id, 'actionedBy':actioned_by_email})"
    },
    {
      "383": "taskqueue.add(url=\"/notifications/perform/triggers\", countdown=30, method=\"GET\",params={'triggerType': 'OBJECTIVE_PUBLISH_DELETED_REJECTED', 'requestId': request_id , 'actionedBy':actioned_by_email})"
    },
    {
      "455": "taskqueue.add(url=\"/notifications/perform/triggers\", countdown=30, method=\"GET\",params={'triggerType': 'OBJECTIVE_PUBLISH_DELETED_CANCELLED', 'requestId': request_id,'actionedBy':actioned_by_email})"
    },
    {
      "558": "taskqueue.add(url=\"/notifications/perform/triggers\", countdown=30, method=\"GET\",params={'triggerType': 'OBJECTIVE_PUBLISH_DELETED_AUTO_APPROVED', 'requestId': request_id})"
    }
  ],
  "happierWork\\app\\modules\\admin\\happierControl\\py\\views.py": [
    {
      "101": "taskqueue.add(url=\"/hSafe/sso/forceLogoutUsersOnCPUpdate\","
    },
    {
      "126": "taskqueue.add(url=\"/notifications/savenotificationconfig\", method=\"PUT\", payload=json.dumps(notificationParams), countdown=2)"
    },
    {
      "147": "taskqueue.add(url=\"/notifications/savenotificationconfig\", method=\"PUT\", payload=json.dumps(notificationParams), countdown=2)"
    },
    {
      "156": "taskqueue.add(url=\"/notifications/savenotificationconfig\", method=\"PUT\", payload=json.dumps(notificationParams), countdown=2)"
    },
    {
      "387": "taskqueue.add(url=\"/notifications/savenotificationconfig\", method=\"PUT\", payload=json.dumps(notificationParams), countdown=2)"
    },
    {
      "583": "taskqueue.add(url=\"/hSafe/admin/sso/authentication/settings/task\", method=\"POST\", params={\"domain\":domain,\"userEmail\":getgcu(self), \"subdomain\":subDomain}, countdown=10)"
    },
    {
      "586": "taskqueue.add(url=\"/hSafe/sso/forceLogoutUsersOnSSOEnabled\","
    },
    {
      "695": "taskqueue.add(url=url_path, method=\"GET\",params=param_dict)"
    },
    {
      "989": "taskqueue.add(url='/hSafe/admin/sso/agreement/reports-task/'+str(policy_id)+\"/\"+str(user_email),method=\"PUT\", countdown=5)"
    },
    {
      "1103": "taskqueue.add(url='/common/applytorule/cron',payload=json.dumps({\"type\":\"AGREEMENT_POLICY\",\"effectiveFrom\":getHRMSDate(datetime.datetime.now().date()),\"uniqueId\":self.json_input[\"uniqueId\"]}), method=\"PUT\", countdown=5)"
    },
    {
      "1199": "taskqueue.add(url=\"/notifications/savenotificationconfig\", method=\"PUT\", payload=json.dumps(notificationParams), countdown=2)"
    },
    {
      "1214": "taskqueue.add(url=\"/notifications/savenotificationconfig\", method=\"PUT\", payload=json.dumps(notificationParams), countdown=2)"
    },
    {
      "1330": "taskqueue.add(url='/notifications/users/triggers', method='GET',params={"
    },
    {
      "1343": "taskqueue.add(url=url, params=param_dict, method=\"PUT\")"
    },
    {
      "1351": "taskqueue.add(url=url, params=param_dict, payload=json.dumps(req_body), method=\"PUT\")"
    },
    {
      "1374": "taskqueue.add(url='/hSafe/admin/sso/deletedUsers/task', payload=json.dumps(param_dict), method=\"PUT\", countdown=10)"
    },
    {
      "1432": "taskqueue.add(url=\"/hSafe/admin/sso/authentication/settings\", method=\"POST\","
    }
  ],
  "happierWork\\app\\modules\\admin\\happierControl\\py\\views_setup.py": [
    {
      "182": "taskqueue.add(url='/admin/api/v1/users/accounts/sync/all', method=\"POST\", params={\"namespace\":dobj.Namespace,\"syncWhat\":\"BOTH\"}, countdown=100)"
    }
  ],
  "happierWork\\app\\modules\\admin\\happierDeck\\py\\models.py": [
    {
      "449": "taskqueue.add(url=\"/happierDeck/cards/Communities\", method=\"DELETE\","
    }
  ],
  "happierWork\\app\\modules\\admin\\happierDeck\\py\\views.py": [
    {
      "233": "taskqueue.add(url=\"/happierDeck/update/users\", method=\"PUT\","
    },
    {
      "247": "taskqueue.add(url=\"/happierDeck/update/users\", method=\"PUT\","
    },
    {
      "252": "taskqueue.add(url=\"/happierDeck/update/users\", method=\"PUT\", countdown=60,"
    },
    {
      "282": "taskqueue.add(url=\"/happierDeck/update/users\", method=\"PUT\", payload=json.dumps({\"SEQUENCE\": card_sequence, \"addedBy\": current_user}))"
    },
    {
      "339": "taskqueue.add(url=\"/happierDeck/cards/Communities\", method=\"PUT\", payload=json.dumps(community_settings))"
    },
    {
      "350": "taskqueue.add(url=\"/happierDeck/cards/Communities\", method=\"DELETE\","
    },
    {
      "424": "taskqueue.add(url=\"/happierDeck/update/news/\" + widgetId, method=\"POST\", payload=(json.dumps(changes)))"
    },
    {
      "462": "taskqueue.add(url=\"/happierDeck/cards/Communities\", method=\"PUT\","
    },
    {
      "504": "taskqueue.add(url=\"/happierDeck/admin/cards/deckCards/task/REWARDS_AND_RECOGNITION\","
    },
    {
      "651": "taskqueue.add("
    },
    {
      "661": "taskqueue.add(url=\"/happierDeck/admin/cards/deckCards/task/REWARDS_AND_RECOGNITION\","
    },
    {
      "675": "taskqueue.add(url=\"/happierDeck/anniversary/cron\", method=\"POST\", params={\"onlyReset\": \"YES\"})"
    },
    {
      "690": "taskqueue.add(url=\"/happierDeck/cards/deckCards/resetPrefForHiddenCard\", method=\"PUT\", payload=(json.dumps({\"pref\": pref})))"
    },
    {
      "731": "taskqueue.add(url=\"/happierDeck/admin/cards/deckCards/task/\"+pref,method=\"DELETE\", params= {'ids':json.dumps(params)})"
    },
    {
      "732": "taskqueue.add(url=\"/happierDeck/cards/prefTask/\"+pref, method=\"POST\", countdown=30)"
    },
    {
      "747": "taskqueue.add(url=url, method=\"PUT\")"
    },
    {
      "750": "taskqueue.add(url=\"/happierDeck/update/users\", method=\"PUT\", payload=(json.dumps(changes_dict)))"
    },
    {
      "833": "taskqueue.add(url=\"/happierDeck/update/users\", method=\"PUT\", payload=json.dumps(change_dict))"
    },
    {
      "860": "taskqueue.add(url=\"/happierDeck/update/news/\"+card_id, method=\"POST\", payload=(json.dumps(changes_dict)))"
    },
    {
      "887": "taskqueue.add(url=\"/happierDeck/admin/cards/deckCards/task/\"+pref,method=\"DELETE\", params= {'ids':json.dumps(params)})"
    },
    {
      "888": "taskqueue.add(url=\"/happierDeck/cards/prefTask/\"+pref, method=\"POST\", countdown=30)"
    },
    {
      "895": "taskqueue.add(url=\"/happierDeck/update/users\", method=\"PUT\", payload=json.dumps({\"DELETE\": [card_id]}))"
    },
    {
      "1010": "taskqueue.add(url=\"/happierDeck/update/news/\" + card_id, method=\"POST\", payload=(json.dumps(changes_dict)))"
    },
    {
      "1043": "taskqueue.add(url=\"/happierDeck/update/news/\" + card_id, method=\"POST\", payload=(json.dumps(changes_dict)))"
    },
    {
      "1079": "taskqueue.add(url=\"/happierDeck/update/news/\"+card_id, method=\"POST\", payload=(json.dumps(changes_dict)))"
    },
    {
      "1204": "taskqueue.add(url=\"/happierDeck/cards/Communities\", method=\"PUT\", payload=json.dumps(community_settings))"
    },
    {
      "1272": "taskqueue.add(url=\"/happierDeck/admin/cards/cron/deckCards\", method=\"PUT\","
    },
    {
      "1278": "taskqueue.add(url=\"/happierDeck/admin/cards/cron/deckCards\", method=\"PUT\","
    },
    {
      "1422": "taskqueue.add(url=\"/happierDeck/admin/cards/cron/deckCards\", method=\"PUT\","
    },
    {
      "1432": "taskqueue.add(url=\"/happierDeck/cards/prefTask/\" + card_type, method=\"POST\", countdown=30)"
    },
    {
      "1532": "taskqueue.add(url=\"/happierDeck/admin/cards/cron/deckCards\", method=\"PUT\","
    },
    {
      "1546": "taskqueue.add(url=\"/happierDeck/cards/prefTask/\" + card_type, method=\"POST\", countdown=300)"
    },
    {
      "1796": "taskqueue.add(url='/happierDeck/admin/patch/cards', params={\"offset\": offset}, method=\"PUT\")"
    },
    {
      "1812": "#     taskqueue.add(url=\"/happierDeck/admin/patch/cards\", method=\"PUT\","
    },
    {
      "1822": "# taskqueue.add(url=\"/common/addressFields\", method=\"PUT\")"
    },
    {
      "1823": "# taskqueue.add(url=\"/common/addressFields\", method=\"POST\","
    },
    {
      "1825": "# taskqueue.add(url=\"/common/addressFields\", method=\"POST\","
    },
    {
      "1827": "# taskqueue.add(url=\"/common/addressFields\", method=\"POST\","
    },
    {
      "1853": "#         taskqueue.add(url=\"/happierDeck/admin/patch/cards\", method=\"PUT\",params={\"limit\":limit,\"offset\":offset,\"updateWhat\":updateWhat})"
    },
    {
      "1869": "#         taskqueue.add(url=\"/happierDeck/admin/patch/cards\", method=\"PUT\",params={\"limit\":limit,\"offset\":offset,\"updateWhat\":updateWhat})"
    },
    {
      "1933": "# #     taskqueue.add(url=\"/happierDeck/admin/patch/cards\", method=\"PUT\", params={\"offset\": limit + offset})"
    },
    {
      "1964": "#     # taskqueue.add(url=\"/happierDeck/cards/pref/\" + \"SETTINGS_LINKS\", method=\"POST\", countdown=30)"
    },
    {
      "1966": "#     # taskqueue.add(url=\"/happierDeck/admin/reset/cards\", method=\"POST\", params=({\"card\": card_type, \"reset\": \"true\"})) #?card=QUICKLINKS&reset=true"
    },
    {
      "2002": "taskqueue.add(url='/happierDeck/admin/patch/cards', params={\"offset\": offset, \"id\": deckId}, method=\"POST\")"
    },
    {
      "2015": "# taskqueue.add(url=\"/happierDeck/admin/patch/cards\", method=\"PUT\")"
    },
    {
      "2054": "#         taskqueue.add(url=\"/happierDeck/admin/patch/cards\", method=\"PUT\","
    },
    {
      "2073": "#         taskqueue.add(url=\"/common/domain/appliedprofilelist\", method=\"GET\")"
    },
    {
      "2076": "# taskqueue.add(url=\"/happierDeck/cards/pref/APPS_TRAY\", method=\"POST\", countdown=30)"
    },
    {
      "2096": "taskqueue.add(url=\"/happierDeck/admin/patch/cards\", method=\"PUT\")"
    },
    {
      "2100": "taskqueue.add(url=\"/happierDeck/admin/patch/cards\", method=\"POST\", params={\"id\":deckId})"
    },
    {
      "2108": "#     taskqueue.add(url=\"/happierDeck/admin/patch/cards\", method=\"POST\","
    },
    {
      "2117": "#                 taskqueue.add(url=\"/happierDeck/admin/patch/cards\", method=\"POST\","
    },
    {
      "2120": "#         taskqueue.add(url=\"/happierDeck/admin/patch/cards\", method=\"POST\","
    },
    {
      "2354": "taskqueue.add(url=\"/happierDeck/admin/cards/deckCards/task/REWARDS_AND_RECOGNITION\", method=\"POST\","
    },
    {
      "2426": "taskqueue.add(url=\"/happierDeck/admin/auditlogs/exportToSpreadsheet/task\", method=\"POST\","
    },
    {
      "2552": "taskqueue.add(url=\"/happierDeck/admin/cron/deckanalytics\", method=\"POST\", payload=json.dumps({}))"
    },
    {
      "2571": "taskqueue.add(url='/happierDeck/admin/resync/userDocuments', method=\"POST\",params={\"namespace\": namespace,\"fixed\":fixed})"
    },
    {
      "2577": "taskqueue.add(url='/happierDeck/admin/resync/userDocuments', method=\"POST\", params={\"namespace\": aDomain.Namespace,\"fixed\":fixed})"
    },
    {
      "2692": "taskqueue.add(url='/people/advanced-search', method=\"PUT\", params={\"tq\": \"yes\"},"
    }
  ],
  "happierWork\\app\\modules\\admin\\happierDeck\\py\\views_setup.py": [
    {
      "1658": "taskqueue.add(url=\"/happierDeck/initialise/users\", method=\"POST\", payload=json.dumps({\"ADD\": cards_list}))"
    },
    {
      "1717": "taskqueue.add(url=\"/happierDeck/initialise/users\", method=\"POST\", payload=json.dumps({\"DELETE\": [\"ALL\"]}))"
    },
    {
      "1739": "taskqueue.add(url=\"/happierDeck/initialise/users\", method=\"POST\", payload=json.dumps({\"DELETE\": cards_list}))"
    },
    {
      "1795": "taskqueue.add(url=\"/happierDeck/admin/cards/task\", method=\"POST\", payload=json.dumps(card_json))"
    }
  ],
  "happierWork\\app\\modules\\admin\\happierDeck\\py\\views_taskqueues.py": [
    {
      "101": "taskqueue.add(url=\"/happierDeck/admin/cards/checkVisibility/ALL_CARDS\", method=\"PUT\","
    },
    {
      "133": "taskqueue.add(url=\"/happierDeck/admin/cards/cron/deckCards\", method=\"POST\", payload=json.dumps("
    },
    {
      "308": "taskqueue.add(url=\"/happierDeck/sync/DeckCards\", method=\"GET\","
    },
    {
      "611": "taskqueue.add(url=\"/happierDeck/admin/cards/checkVisibility/\" + pref_type, method=\"POST\","
    },
    {
      "639": "taskqueue.add(url=\"/happierDeck/admin/cards/checkVisibility/\" + pref_type, method=\"POST\","
    },
    {
      "642": "taskqueue.add(url=\"/happierDeck/admin/cards/checkVisibility/ALL_CARDS\", method=\"POST\", payload=json.dumps({\"offset\": offset, \"limit\": limit, \"fixed\": fixed, \"userlist\": userlist}))"
    },
    {
      "688": "taskqueue.add(url=\"/happierDeck/admin/auditlogs/sync\", method=\"POST\","
    },
    {
      "917": "taskqueue.add(url=\"/happierDeck/admin/auditlogs/exportToSpreadsheet/task\", method=\"POST\", params={\"limit\":limit,\"orderBy\":order_by,\"uniqueId\":unique_id,\"by\":by,\"desc\":desc,\"nextPageToken\":offset,\"spreadsheetId\":self.reportSheetId,\"docOwner\":self.docOwner,\"currentUser\":self.currentUser})"
    },
    {
      "940": "taskqueue.add(url=\"/happierDeck/admin/cron/deckanalytics\", method=\"POST\", payload=json.dumps({}))"
    },
    {
      "1006": "taskqueue.add(url=\"/happierDeck/admin/cron/deckanalytics\", method=\"POST\",payload=json.dumps({\"count_json\" : count_json,\"offset\":limit+offset,\"wishSent_json\":wishSent_json,\"userCount\":userCount}))"
    }
  ],
  "happierWork\\app\\modules\\admin\\happierFlow\\py\\views.py": [
    {
      "2055": "taskqueue.add(url=\"/happierFlow/processFilterUser\", method=\"PUT\")"
    },
    {
      "2356": "taskqueue.add(url=\"/happierFlow/processFilterUser\", method=\"PUT\", params = {\"offset\":str(offset)})"
    }
  ],
  "happierWork\\app\\modules\\admin\\happierFlow\\py\\views_report.py": [
    {
      "21": "taskqueue.add(url='/happierFlow/masterReport/task', countdown=5,method='POST', payload=json.dumps(param_dict))"
    }
  ],
  "happierWork\\app\\modules\\admin\\happierVisit\\py\\patches.py": [
    {
      "155": "taskqueue.add(url='/happierVisit/admin/datamigration', method=\"POST\")"
    },
    {
      "290": "taskqueue.add(url='/happierVisit/admin/addmigrateddata', method=\"PUT\",payload=json.dumps(json_input))"
    }
  ],
  "happierWork\\app\\modules\\admin\\happierVisit\\py\\utils.py": [
    {
      "53": "taskqueue.add(url=\"/happierVisit/admin/visitorProfile/update-profilefields\", method=\"PUT\",payload=json.dumps({\"updationHash\": diffHash,\"namespace\": namespace_manager.get_namespace()}))"
    }
  ],
  "happierWork\\app\\modules\\admin\\happierVisit\\py\\views.py": [
    {
      "289": "taskqueue.add(url=\"/admin/delete-profilefields\", method=\"POST\","
    },
    {
      "484": "taskqueue.add(url=self.URL_LINK, method=\"POST\", params=params)"
    }
  ],
  "happierWork\\app\\modules\\admin\\hrWorkFlow\\py\\views_onboarding.py": [
    {
      "236": "taskqueue.add(url='/common/applytorule/task/ONBOARDING', method=\"POST\",payload=json.dumps(json_data),countdown=40)"
    }
  ],
  "happierWork\\app\\modules\\admin\\hrWorkFlow\\py\\views_separations.py": [
    {
      "151": "taskqueue.add(url=str_url,method=\"PUT\",countdown=30)"
    },
    {
      "157": "taskqueue.add(url=str_url,method=\"PUT\",countdown=30)"
    },
    {
      "551": "taskqueue.add(url='/common/applytorule/task/OFFBOARDING', method=\"POST\",payload=json.dumps(json_data),countdown=20)"
    }
  ],
  "happierWork\\app\\modules\\admin\\workProfile\\py\\views.py": [
    {
      "241": "#~ taskqueue.add(url=\"/announcement/cron\",method=\"GET\",countdown=30)"
    },
    {
      "314": "#~ taskqueue.add(url=\"/announcement/cron\",method=\"GET\",countdown=30)"
    },
    {
      "928": "taskqueue.add(url=\"/workprofile/userworkprofile-task\",method=\"POST\",params=param_dict)"
    },
    {
      "977": "taskqueue.add(url=\"/workprofile/userworkprofile-task\",method=\"POST\",params=param_dict)"
    },
    {
      "981": "taskqueue.add(url='/workprofile/profilecounts', method=\"POST\",countdown=15)"
    },
    {
      "1094": "taskqueue.add(url='/workprofile/profilecounts', method=\"POST\",countdown=15)"
    },
    {
      "1130": "taskqueue.add(url='/workprofile/profilecounts', method=\"POST\",countdown=15)"
    },
    {
      "1557": "#~ taskqueue.add(url=\"/announcement/cron\",method=\"GET\",countdown=30)"
    },
    {
      "1618": "#~ taskqueue.add(url=\"/announcement/cron\",method=\"GET\",countdown=30)"
    },
    {
      "1877": "taskqueue.add(url='/workprofile/profilecounts', method=\"POST\",countdown=15)"
    },
    {
      "2008": "taskqueue.add(url=\"/workprofile/wpauto\",method=\"POST\",params={\"profileId\":str(work_profile_id),\"fromDate\":str(params_dict[\"fromDate\"]),\"toDate\":str(toDateStr),\"workHours\":workHours,\"daysOff\":daysOff})"
    },
    {
      "2039": "taskqueue.add(url=\"/workprofile/userworkprofile-task\",method=\"POST\",params=paramDict)"
    },
    {
      "2056": "taskqueue.add(url='/workprofile/profilecounts', method=\"POST\", countdown=countdown)"
    },
    {
      "2107": "# \ttaskqueue.add(url='/workprofile/profilecounts', method=\"GET\",params={\"updateWhat\":\"WORK_PROFILE\",\"off\":off+10},countdown=1)"
    },
    {
      "2109": "taskqueue.add(url='/workprofile/profilecounts', method=\"POST\",params={\"updateWhat\":\"LEAVE_TEMPLATE\"},countdown=1)"
    },
    {
      "2163": "# \ttaskqueue.add(url='/workprofile/profilecounts', method=\"GET\",params={\"updateWhat\":\"LEAVE_TEMPLATE\",\"off\":off+10},countdown=1)"
    },
    {
      "2165": "taskqueue.add(url='/workprofile/profilecounts', method=\"POST\",params={\"updateWhat\":\"HOLIDAY_TEMPLATE\"},countdown=1)"
    },
    {
      "2219": "#~ taskqueue.add(url='/workprofile/profilecounts', method=\"GET\",params={\"updateWhat\":\"HOLIDAY_TEMPLATE\",\"off\":off+10},countdown=1)"
    },
    {
      "2221": "taskqueue.add(url='/workprofile/profilecounts', method=\"POST\",params={\"updateWhat\":\"WORK_SCHEDULE\"},countdown=1)"
    },
    {
      "2275": "#~ taskqueue.add(url='/workprofile/profilecounts', method=\"GET\",params={\"updateWhat\":\"WORK_SCHEDULE\",\"off\":off+10},countdown=1)"
    },
    {
      "2692": "taskqueue.add(url=\"/workprofile/holidaytemplate/apply\",params={\"type\":\"HOLIDAY_TEMPLATE\",\"id\":obj.uniqueId},method=\"GET\",countdown=30)"
    },
    {
      "2959": "taskqueue.add(url='/workprofile/userworkprofilequeue', method='POST', payload=json.dumps(param_dict),countdown=cnt)"
    },
    {
      "3191": "taskqueue.add(url='/pay/task/inputs/fof', method=\"POST\",payload=json.dumps({\"email\": user_obj.userEmail, \"recalculateComponents\": True}))"
    },
    {
      "3211": "#~ taskqueue.add(url='/attendance/reshuffle', method='POST', params=params)"
    },
    {
      "3241": "#~ taskqueue.add(url='/attendance/reshuffle',target=\"light-module\", method='POST', params=params)"
    },
    {
      "3242": "taskqueue.add(url='/people/profiles/task',countdown=45, method=\"POST\", params={\"userList\":json.dumps(user_list)})"
    },
    {
      "3243": "taskqueue.add(url='/workprofile/profilecounts', method=\"POST\",countdown=15)"
    },
    {
      "3361": "taskqueue.add(url='/workprofile/userworkprofilequeue', method='POST', payload=json.dumps(param_dict))"
    },
    {
      "3374": "taskqueue.add(url='/notifications/change/triggers',method=\"POST\",countdown=60,payload=json.dumps(para_dict))"
    },
    {
      "3661": "taskqueue.add(url='/pay/task/inputs/fof', method=\"POST\",payload=json.dumps({\"email\": user_obj.userEmail, \"recalculateComponents\": True}))"
    },
    {
      "3681": "#~ taskqueue.add(url='/attendance/reshuffle', method='POST', params=params)"
    },
    {
      "3711": "#~ taskqueue.add(url='/attendance/reshuffle',target=\"light-module\", method='POST', params=params)"
    },
    {
      "3713": "taskqueue.add(url='/people/profiles/task',countdown=45, method=\"POST\", params={\"userList\":json.dumps(user_list)})"
    },
    {
      "3714": "taskqueue.add(url='/workprofile/profilecounts', method=\"POST\",countdown=15)"
    },
    {
      "3728": "taskqueue.add(url='/notifications/change/triggers',method=\"POST\",countdown=60,payload=json.dumps(para_dict))"
    },
    {
      "3930": "taskqueue.add(url='/pay/task/inputs/fof', method=\"POST\",payload=json.dumps({\"email\": user_obj.userEmail, \"recalculateComponents\": True}))"
    },
    {
      "4054": "taskqueue.add(url='/pay/task/inputs/fof', method=\"POST\",payload=json.dumps({\"email\": user_obj.userEmail, \"recalculateComponents\": True}))"
    }
  ],
  "happierWork\\app\\modules\\hire\\admin\\py\\views_admin.py": [
    {
      "1093": "taskqueue.add(url='/hire/admin/changetemplateownership',"
    },
    {
      "1114": "taskqueue.add(url='/hire/admin/changetemplateownership',"
    },
    {
      "1264": "taskqueue.add(url='/hire/admin/changetemplateownership',"
    },
    {
      "1301": "taskqueue.add(url=\"/hire/admin/emailnotificationconfig/default\",method=\"POST\")"
    },
    {
      "1326": "taskqueue.add(url=\"/hire/admin/emailnotificationconfig/updatecategory\",method=\"GET\")"
    },
    {
      "1466": "taskqueue.add(url=\"/hire/admin/emailnotificationconfig/updatecategory\",method=\"GET\")"
    },
    {
      "1890": "taskqueue.add(url=\"/hire/admin/defaulturls\",params={\"currentUser\": admin_email}, method=\"GET\")"
    },
    {
      "1920": "taskqueue.add(url=\"/hire/admin/job/fieldsconfig/default\","
    },
    {
      "1923": "taskqueue.add(url=\"/hire/admin/applicants/fieldsconfig/default\","
    },
    {
      "1926": "taskqueue.add(url=\"/hire/admin/referrals/default\", payload=json.dumps({\"currentUser\": current_user}),"
    },
    {
      "1929": "taskqueue.add(url=\"/hire/admin/emailnotificationconfig/default\","
    },
    {
      "1933": "# taskqueue.add(url=\"/hire/admin/portalsconfig\", payload=json.dumps({\"currentUser\": current_user}),"
    },
    {
      "1936": "taskqueue.add(url=\"/hire/admin/interviewkitconfig/default\","
    },
    {
      "1940": "taskqueue.add(url=\"/hire/admin/recommendationmapping/task/default\","
    },
    {
      "1944": "taskqueue.add(url=\"/hire/admin/sourcing/default\","
    },
    {
      "1948": "taskqueue.add(url=\"/hire/admin/resourcerequest/enable/script\","
    },
    {
      "2669": "taskqueue.add(url=\"/hire/admin/applicants/addspecificsource\",method=\"GET\",params={\"cursor\":cursor.urlsafe()})"
    },
    {
      "2693": "taskqueue.add(url = '/init/tempsetup', method = 'GET', params = parameters)"
    }
  ],
  "happierWork\\app\\modules\\hire\\applicant\\py\\utils_applicant.py": [
    {
      "729": "taskqueue.add(url='/hire/applicants/gmail/message/task/send', payload=json.dumps(mail_dict), method=\"POST\")"
    },
    {
      "780": "taskqueue.add(url='/hire/applicants/resume/uploadtostorage',"
    }
  ],
  "happierWork\\app\\modules\\hire\\applicant\\py\\views_applicant.py": [
    {
      "112": "taskqueue.add(url='/hire/applicants/gmail/message/task/send', payload=json.dumps(mail_dict), method=\"POST\")"
    },
    {
      "515": "taskqueue.add(url='/hire/applicants/skillssearch/update', payload=json.dumps({\"skills\":applicantFields[\"skills\"],"
    },
    {
      "616": "taskqueue.add(url='/hire/applicants/linksupdate', payload=json.dumps(links_dict), method=\"POST\", countdown=60)"
    },
    {
      "618": "taskqueue.add(url='/hire/applicants/linksupdate', payload=json.dumps(links_dict), method=\"POST\")"
    },
    {
      "664": "# taskqueue.add(url='/hire/deduplication', params={'applicant': applicant_id}, method=\"GET\")"
    },
    {
      "667": "taskqueue.add(url='/notifications/hire/triggers', params=params, method=\"GET\")"
    },
    {
      "670": "taskqueue.add(url='/notifications/hire/triggers', params=params_applicant_applied, method=\"GET\")"
    },
    {
      "676": "taskqueue.add(url='/notifications/new/hire/triggers', params=params_applicant_applied, method=\"GET\")"
    },
    {
      "681": "taskqueue.add(url='/notifications/hire/triggers', params=params, method=\"GET\")"
    },
    {
      "815": "taskqueue.add(url='/notifications/hire/triggers', params=params, method=\"GET\")"
    },
    {
      "820": "taskqueue.add(url='/notifications/new/hire/triggers', params=params, method=\"GET\")"
    },
    {
      "822": "taskqueue.add(url='/hire/deduplication', params={'applicant': applicant_dict[0][0][\"id\"]}, method=\"GET\")"
    },
    {
      "908": "taskqueue.add(url='/hire/applicants/'+self.applicant_key.urlsafe()+'/jobs/'+a_result.jobId.urlsafe()+'/interviews/task/cancelassigned', payload=json.dumps(cancellation_dict),method=\"PUT\",countdown=2)"
    },
    {
      "910": "taskqueue.add(url='/hire/applicants/'+self.applicant_key.urlsafe()+'/jobs/'+a_result.jobId.urlsafe()+'/interviews/task/cancel', payload=json.dumps(cancellation_dict),method=\"PUT\",countdown=2)"
    },
    {
      "1270": "# taskqueue.add(url='/hire/deduplication', params={'applicant': json_input[\"applicantId\"]}, method=\"GET\")"
    },
    {
      "1316": "# taskqueue.add(url='/hire/deduplication', params={'applicant': json_input[\"applicantId\"]}, method=\"GET\")"
    },
    {
      "2756": "taskqueue.add(url='/hire/applicants/changejob/permissions', payload=json.dumps({\"applicantId\":json_input[\"applicantId\"],"
    },
    {
      "2766": "taskqueue.add(url='/notifications/hire/triggers',"
    },
    {
      "2968": "taskqueue.add(url='/hire/applicants/changejob/permissions', payload=json.dumps({\"applicantId\":json_input[\"applicantId\"],"
    },
    {
      "2979": "taskqueue.add(url='/notifications/hire/triggers',"
    },
    {
      "3200": "taskqueue.add("
    },
    {
      "3221": "#     taskqueue.add(url='/hire/test/mettl/assessments/schedule', payload=json.dumps({\"interviewLinkId\":returned_key.urlsafe()}),method=\"POST\")"
    },
    {
      "3223": "#     taskqueue.add(url='/hire/test/classmarker/test/schedule', payload=json.dumps({\"interviewLinkId\":returned_key.urlsafe()}),method=\"POST\")"
    },
    {
      "3225": "#     taskqueue.add(url='/hire/test/hackerrank/test/schedule', payload=json.dumps({\"interviewLinkId\":returned_key.urlsafe()}),method=\"POST\")"
    },
    {
      "3239": "taskqueue.add("
    },
    {
      "3260": "#     taskqueue.add(url='/hire/test/mettl/assessments/schedule', payload=json.dumps({\"interviewLinkId\":a_result.key.urlsafe()}),method=\"POST\")"
    },
    {
      "3262": "#     taskqueue.add(url='/hire/test/classmarker/test/schedule', payload=json.dumps({\"interviewLinkId\":a_result.key.urlsafe()}),method=\"POST\")"
    },
    {
      "3264": "#     taskqueue.add(url='/hire/test/hackerrank/test/schedule', payload=json.dumps({\"interviewLinkId\":a_result.key.urlsafe()}),method=\"POST\")"
    },
    {
      "3461": "taskqueue.add(url='/notifications/hire/triggers',"
    },
    {
      "3635": "taskqueue.add(url='/hire/applicants/'+self.applicant_key.urlsafe()+'/jobs/'+self.job_key.urlsafe()+'/interviews/task/cancelassigned', payload=json.dumps(cancellation_dict),method=\"PUT\",countdown=2)"
    },
    {
      "3637": "taskqueue.add(url='/hire/applicants/'+self.applicant_key.urlsafe()+'/jobs/'+self.job_key.urlsafe()+'/interviews/task/cancel', payload=json.dumps(cancellation_dict),method=\"PUT\",countdown=2)"
    },
    {
      "3656": "taskqueue.add(url='/hire/applicants/gmail/message/task/send', payload=json.dumps(mail_dict),method=\"POST\")"
    },
    {
      "3657": "taskqueue.add(url='/notifications/hire/triggers',"
    },
    {
      "3662": "taskqueue.add(url='/notifications/new/hire/triggers',"
    },
    {
      "4441": "taskqueue.add(url='/notifications/hire/triggers',"
    },
    {
      "4453": "taskqueue.add(url='/notifications/hire/triggers',"
    },
    {
      "5207": "taskqueue.add(url='/hire/applicants/resume/uploadtostorage', params={\"folderModelId\":documents_object[\"id\"]},method=\"GET\")"
    },
    {
      "5552": "taskqueue.add(url='/hire/applicants/'+applicant_key.urlsafe(),method=\"DELETE\",params={\"currentUser\":json_input[\"currentUser\"]})"
    },
    {
      "5560": "taskqueue.add(url='/hire/applicants/archivejobspecific',method=\"PUT\",payload=json.dumps(body))"
    },
    {
      "5612": "taskqueue.add(url=\"/hire/applicants/cron/alerts\",method=\"GET\",params={\"ns\":aNamespace})"
    },
    {
      "5667": "# taskqueue.add(url='/hire/applicants/syncalerts', payload=json.dumps({\"jobIds\": job_ids,\"currentTime\":current_time}),"
    },
    {
      "5674": "taskqueue.add(url='/hire/applicants/syncalerts', payload=json.dumps({\"jobIds\": job_ids,\"currentDate\":current_date}),"
    },
    {
      "5679": "taskqueue.add(url='/hire/applicants/syncalerts', payload=json.dumps({\"jobIds\": job_ids,\"currentDate\":current_date}),"
    },
    {
      "5861": "taskqueue.add(url='/hire/applicants/gmail/message/task/send', payload=json.dumps(mail_dict),method=\"POST\")"
    },
    {
      "6099": "taskqueue.add(url='/hire/applicants/gmail/message',method = 'POST',payload=json.dumps(a_result))"
    },
    {
      "6180": "taskqueue.add(url='/hire/applicants/gmail/message/label',"
    },
    {
      "6318": "taskqueue.add(url=\"/hire/applicants/snoozeflag/script\",method=\"GET\",params={\"ns\":aNamespace})"
    },
    {
      "6367": "taskqueue.add(url='/hire/applicants/snoozeflag/script', params={\"cursor\":cursor.urlsafe()},method=\"GET\")"
    },
    {
      "6446": "taskqueue.add(url='/hire/applicants/'+self.applicant_key.urlsafe()+'/jobs/'+a_result.jobId.urlsafe()+'/interviews/task/cancelassigned', payload=json.dumps(cancellation_dict),method=\"PUT\",countdown=2)"
    },
    {
      "6448": "taskqueue.add(url='/hire/applicants/'+self.applicant_key.urlsafe()+'/jobs/'+a_result.jobId.urlsafe()+'/interviews/task/cancel', payload=json.dumps(cancellation_dict),method=\"PUT\",countdown=2)"
    },
    {
      "6528": "taskqueue.add(url='/notifications/hire/triggers',"
    },
    {
      "6755": "taskqueue.add(url=\"/hire/applicants/createdocumentapplicants\",method=\"GET\",params={\"ns\":aNamespace})"
    },
    {
      "6814": "taskqueue.add(url='/hire/applicants/createdocumentapplicants', params={\"cursor\":cursor.urlsafe(),\"count\":count},method=\"GET\",countdown=5)"
    },
    {
      "6877": "taskqueue.add(url='/hire/applicants/createdocument/hired/task', params={\"cursor\":cursor.urlsafe(),\"count\":count},method=\"GET\",countdown=5)"
    },
    {
      "7202": "taskqueue.add(url=\"/hire/applicants/unsnooze/cron\",method=\"GET\",params={})"
    },
    {
      "7248": "taskqueue.add(url='/hire/applicants/unsnooze/cron',method='GET',params={\"cursor\":cursor.urlsafe()})"
    },
    {
      "7256": "taskqueue.add(url='/notifications/hire/triggers',"
    },
    {
      "8101": "taskqueue.add(url='/hire/applicants/gmail/message/task/send',"
    },
    {
      "8109": "taskqueue.add(url=\"/hire/interviews/permitinterviewers\", method=\"POST\","
    }
  ],
  "happierWork\\app\\modules\\hire\\applicant\\py\\views_mass_upload.py": [
    {
      "42": "taskqueue.add(url='/hire/drive/applicant/add', payload=json.dumps({\"folderId\":folder_id,\"jobId\":job_id}), method=\"POST\")"
    },
    {
      "50": "taskqueue.add(url='/hire/drive/applicant/add', payload=json.dumps({\"folderId\":folder_id,\"jobId\":job_id}), method=\"POST\")"
    },
    {
      "98": "taskqueue.add(url='/notifications/hire/triggers', params=mail_dict, method=\"GET\")"
    },
    {
      "157": "taskqueue.add(url='/hire/drive/applicant/add', payload=json.dumps({\"folderId\": folder_id, \"jobId\": job_id,'userReportDict':user_report_dict}),"
    },
    {
      "170": "taskqueue.add(url='/notifications/hire/triggers', payload=json.dumps(mail_dict), method=\"POST\")"
    }
  ],
  "happierWork\\app\\modules\\hire\\applicant\\py\\views_naukri_mailbox.py": [
    {
      "376": "taskqueue.add(url=\"/hire/naukrimail/task/notification\",method=\"GET\",params={\"mail\":a_mailbox.userEmail})"
    }
  ],
  "happierWork\\app\\modules\\hire\\applicant\\py\\views_reports.py": [
    {
      "99": "taskqueue.add(url='/hire/applicants/list/report/task', payload=json.dumps(self.body), method=\"POST\")"
    },
    {
      "149": "taskqueue.add(url=\"/hire/spreadsheets/share\",method=\"PUT\",payload=json.dumps(sharing_dict))"
    },
    {
      "383": "taskqueue.add(url='/hire/applicants/list/report/task',"
    },
    {
      "393": "taskqueue.add(url='/notifications/new/hire/triggers', method=\"POST\", payload=json.dumps(mail_dict))"
    },
    {
      "858": "taskqueue.add(url=\"/hire/applicants/dailyreports/task\", method=\"GET\","
    }
  ],
  "happierWork\\app\\modules\\hire\\applicantLogin\\py\\views_applicant_login.py": [
    {
      "130": "taskqueue.add(url='/hire/applicants/linksupdate', method=\"POST\","
    },
    {
      "147": "taskqueue.add(url='/notifications/hire/triggers', params=params_applicant_applied,"
    },
    {
      "345": "taskqueue.add(url='/hire/applicants/linksupdate', method=\"POST\","
    },
    {
      "348": "taskqueue.add(url='/notifications/hire/triggers', params=params_applicant_applied,"
    },
    {
      "464": "taskqueue.add(url='/hire/applicants/linksupdate', method=\"POST\","
    },
    {
      "467": "taskqueue.add(url='/notifications/hire/triggers', params=params_applicant_applied,"
    },
    {
      "636": "taskqueue.add(url=\"/notifications/hire/triggers\","
    },
    {
      "904": "taskqueue.add(url='/hire/deduplication', params={'applicant': self.applicant_key.urlsafe()}, method=\"GET\")"
    },
    {
      "1606": "taskqueue.add(url='/hire/applicants/changejob/permissions',"
    },
    {
      "1610": "taskqueue.add(url='/hire/applicantlogin/addnotification',"
    }
  ],
  "happierWork\\app\\modules\\hire\\comments\\py\\views_comments.py": [
    {
      "99": "taskqueue.add(url='/notifications/hire/triggers',"
    },
    {
      "217": "taskqueue.add(url='/notifications/hire/triggers',"
    }
  ],
  "happierWork\\app\\modules\\hire\\common\\py\\hire_upload_utils.py": [
    {
      "233": "taskqueue.add(url='/hire/applicants/resume/uploadtostorage', params={\"folderModelId\":returned_key.urlsafe()},method=\"GET\")"
    },
    {
      "294": "taskqueue.add(url=\"/hire/jobsfolder/share\",method=\"GET\",params=folders_newly_created)"
    },
    {
      "373": "taskqueue.add(url='/hire/applicants/documents/permission',method=\"POST\",payload=json.dumps(body))"
    },
    {
      "376": "taskqueue.add(url='/hire/applicants/documents/permission',method=\"POST\",payload=json.dumps(body))"
    },
    {
      "385": "taskqueue.add(url='/hire/applicants/documents/permission',method=\"POST\",payload=json.dumps(body))"
    }
  ],
  "happierWork\\app\\modules\\hire\\common\\py\\utils.py": [
    {
      "441": "#     taskqueue.add(url='/hire/test/mettl/assessments/schedule', payload=json.dumps({\"interviewLinkId\":returned_key.urlsafe()}),method=\"POST\")"
    },
    {
      "443": "#     taskqueue.add(url='/hire/test/classmarker/test/schedule', payload=json.dumps({\"interviewLinkId\":returned_key.urlsafe()}),method=\"POST\")"
    },
    {
      "445": "#     taskqueue.add(url='/hire/test/hackerrank/test/schedule', payload=json.dumps({\"interviewLinkId\":returned_key.urlsafe()}),method=\"POST\")"
    },
    {
      "455": "taskqueue.add("
    },
    {
      "1011": "taskqueue.add(url='/hire/offers/'+payload[\"offerLinkId\"]+'/task/send',method=\"POST\",payload=json.dumps(send_dict))"
    },
    {
      "1036": "# taskqueue.add(url='/hire/applicants/gmail/message/label',"
    }
  ],
  "happierWork\\app\\modules\\hire\\interview\\py\\views_google_calendar.py": [
    {
      "311": "taskqueue.add(url='/hire/applicants/gmail/message/task/send', payload=json.dumps(mail_dict), method=\"POST\")"
    }
  ],
  "happierWork\\app\\modules\\hire\\interview\\py\\views_interview.py": [
    {
      "182": "taskqueue.add(url=\"/hire/interviews/\" + str(self.interview_key.urlsafe()) + \"/invite\", method=\"GET\","
    },
    {
      "342": "taskqueue.add(url='/hire/applicantlogin/addnotification',"
    },
    {
      "486": "taskqueue.add(url='/hire/applicants/gmail/message/task/send',"
    },
    {
      "671": "taskqueue.add(url='/hire/applicants/gmail/message/task/send',"
    },
    {
      "1005": "taskqueue.add(url=\"/hire/interviews/permitinterviewers\", method=\"POST\","
    },
    {
      "1018": "taskqueue.add(url=\"/hire/interviews/\" + str(an_interview[\"interviewId\"]) + \"/invite\","
    },
    {
      "1031": "taskqueue.add(url='/notifications/hire/triggers',"
    },
    {
      "1039": "taskqueue.add(url='/hire/applicants/gmail/message/task/send',"
    },
    {
      "1047": "taskqueue.add(url='/hire/applicantlogin/addnotification',"
    },
    {
      "1241": "taskqueue.add(url=\"/hire/cron/interviews\", method=\"GET\", params={})"
    },
    {
      "2040": "taskqueue.add(url='/hire/applicants/gmail/message/task/send',"
    },
    {
      "2072": "taskqueue.add(url='/hire/applicants/gmail/message/task/send',"
    },
    {
      "2407": "taskqueue.add(url=\"/hire/interviews/permitinterviewers\", method=\"POST\","
    },
    {
      "2411": "taskqueue.add(url='/hire/applicants/gmail/message/task/send',"
    },
    {
      "2422": "taskqueue.add(url='/hire/applicants/gmail/message/task/send',"
    },
    {
      "2961": "taskqueue.add(url='/hire/interviews/updatetime/script', params={\"cursor\":cursor.urlsafe(),\"namespace\":json_input[\"namespace\"]},method=\"GET\")"
    }
  ],
  "happierWork\\app\\modules\\hire\\interview\\py\\views_test.py": [
    {
      "729": "taskqueue.add(url='/hire/applicants/gmail/message/task/send', payload=json.dumps({\"subject\":subject,\"body\":body,"
    },
    {
      "1076": "taskqueue.add(url='/hire/test/sheet/results/add', payload=json.dumps({\"sheetId\":sheet_id}), method=\"POST\")"
    },
    {
      "1084": "taskqueue.add(url='/hire/test/sheet/results/add', payload=json.dumps({\"sheetId\":sheet_id}), method=\"POST\")"
    },
    {
      "1167": "taskqueue.add(url='/hire/test/sheet/results/add', payload=json.dumps({\"sheetId\":sheet_id}), method=\"POST\")"
    }
  ],
  "happierWork\\app\\modules\\hire\\job\\py\\views_jobs.py": [
    {
      "255": "# taskqueue.add(url='/notifications/hire/triggers',"
    },
    {
      "682": "taskqueue.add(url=\"/hire/jobs/createdocumentforapplicants\",method=\"GET\",params={\"jobId\":jobDocumentId})"
    },
    {
      "693": "taskqueue.add(url=\"/resourcerequest/requisitions/\"+self.resource_requisition_id+\"/updatejobstatus\",method=\"PUT\",payload=json.dumps(update_dict))"
    },
    {
      "721": "taskqueue.add(url=\"/hire/jobs/\"+jobDocumentId+\"/task/createmassuploadfolder\",method=\"GET\",params={})"
    },
    {
      "723": "taskqueue.add(url='/notifications/hire/triggers',"
    },
    {
      "1046": "taskqueue.add(url=\"/hire/jobs/createdocumentforapplicants\",method=\"GET\",params={\"jobId\":job_id,\"cursor\":cursor.urlsafe()})"
    },
    {
      "1814": "taskqueue.add(url=\"/hire/jobs/refreshlinks/stage\",payload=json.dumps({\"addedStage\":returned_keys[0].urlsafe(),\"jobId\":self.jobId}),method=\"POST\")"
    },
    {
      "1931": "taskqueue.add(url=\"/hire/jobs/refreshlinks/stage\",payload=json.dumps(update_json),method=\"POST\")"
    },
    {
      "1966": "taskqueue.add(url=\"/hire/jobs/refreshlinks/stage\",payload=json.dumps(update_json),method=\"POST\")"
    },
    {
      "2545": "taskqueue.add(url=\"/hire/jobs/refreshlinks/interview\",payload=json.dumps(self.update_json),method=\"POST\")"
    },
    {
      "2683": "taskqueue.add(url=\"/hire/jobs/refreshlinks/interview\",payload=json.dumps(update_json),method=\"POST\")"
    },
    {
      "2743": "taskqueue.add(url=\"/hire/jobs/refreshlinks/interview\",payload=json.dumps(update_json),method=\"POST\")"
    },
    {
      "2807": "taskqueue.add(url=\"/hire/jobs/refreshlinks/interview\",payload=json.dumps(update_json),method=\"POST\")"
    },
    {
      "3532": "taskqueue.add(url=\"/hire/jobs/refreshlinks/stage\",payload=json.dumps(json_input),method=\"POST\")"
    },
    {
      "3541": "taskqueue.add(url=\"/hire/jobs/refreshlinks/stage\",payload=json.dumps(json_input),method=\"POST\")"
    },
    {
      "3566": "taskqueue.add(url=\"/hire/jobs/refreshlinks/stage\",payload=json.dumps(json_input),method=\"POST\")"
    },
    {
      "3603": "taskqueue.add(url=\"/hire/jobs/refreshlinks/stage\",payload=json.dumps(json_input),method=\"POST\")"
    },
    {
      "3665": "taskqueue.add(url=\"/hire/jobs/refreshlinks/interview\",payload=json.dumps(json_input),method=\"POST\")"
    },
    {
      "3698": "taskqueue.add(url=\"/hire/jobs/refreshlinks/interview\",payload=json.dumps(json_input),method=\"POST\")"
    },
    {
      "3733": "taskqueue.add(url=\"/hire/jobs/refreshlinks/interview\",payload=json.dumps(json_input),method=\"POST\")"
    },
    {
      "4316": "# taskqueue.add(url='/notifications/hire/triggers',"
    },
    {
      "4646": "taskqueue.add(url=\"/hire/jobs/resumes/removefromstorage\", method=\"GET\", params={\"jobId\":json_input[\"jobId\"]})"
    },
    {
      "4655": "taskqueue.add(url=\"/resourcerequest/requisitions/\"+resource_requisition_id+\"/updatejobstatus\",method=\"PUT\",payload=json.dumps(update_dict))"
    },
    {
      "4657": "taskqueue.add(url='/notifications/hire/triggers',"
    },
    {
      "4756": "taskqueue.add(url=\"/resourcerequest/requisitions/\"+resource_requisition_id+\"/updatejobstatus\",method=\"PUT\",payload=json.dumps(update_dict))"
    },
    {
      "4758": "taskqueue.add(url='/notifications/hire/triggers',"
    },
    {
      "4810": "taskqueue.add(url=\"/hire/jobs/resumes/removefromstorage\", method=\"GET\", params={\"jobId\":json_input[\"jobId\"],\"cursor\":cursor.urlsafe()})"
    },
    {
      "4926": "taskqueue.add(url=\"/hire/jobs/refreshdocuments\",method=\"GET\",params={},retry_options=TaskRetryOptions(task_retry_limit=0))"
    },
    {
      "4928": "taskqueue.add(url=\"/hire/jobs/refreshdocuments\",method=\"GET\",params={})"
    },
    {
      "4976": "taskqueue.add(url=\"/hire/jobs/refreshdocuments\",method=\"GET\",params={\"cursor\":cursor.urlsafe()},retry_options=TaskRetryOptions(task_retry_limit=0))"
    },
    {
      "4978": "taskqueue.add(url=\"/hire/jobs/refreshdocuments\",method=\"GET\",params={\"cursor\":cursor.urlsafe()})"
    },
    {
      "5002": "taskqueue.add(url=\"/hire/jobs/mergesummary\",method=\"GET\",params={})"
    }
  ],
  "happierWork\\app\\modules\\hire\\job\\py\\views_reports.py": [
    {
      "182": "taskqueue.add(url='/hire/jobs/list/report/task', params=json_input, method=\"GET\")"
    },
    {
      "333": "taskqueue.add(url='/hire/jobs/list/report/task', params=report_dict, method=\"GET\")"
    },
    {
      "337": "taskqueue.add(url='/notifications/new/hire/triggers', params=mail_dict, method=\"GET\")"
    }
  ],
  "happierWork\\app\\modules\\hire\\offer\\py\\models_offer.py": [
    {
      "118": "taskqueue.add(url='/notifications/hire/triggers',"
    },
    {
      "138": "taskqueue.add(url='/hire/applicants/createspecificapplicantdocument',"
    },
    {
      "145": "# taskqueue.add(url='/notifications/hire/triggers',"
    },
    {
      "182": "taskqueue.add(url='/hire/offers/permitapprovers',method='POST',payload=json.dumps({\"fileId\":offer_request_link.offerLinkId.get().googleDocId,\"approvers\":request_obj.ApproverNameList}))"
    },
    {
      "203": "taskqueue.add(url='/notifications/hire/triggers',"
    },
    {
      "209": "taskqueue.add(url='/notifications/hire/triggers',"
    }
  ],
  "happierWork\\app\\modules\\hire\\offer\\py\\views_offer.py": [
    {
      "298": "taskqueue.add(url='/hire/offers/createoffer', payload=json.dumps(self.dict), method=\"POST\")"
    },
    {
      "547": "taskqueue.add(url='/hire/offers/createoffer', payload=json.dumps(dict), method=\"POST\")"
    },
    {
      "1012": "taskqueue.add(url=\"/request/init/offerapproval\",method=\"POST\",params=req_json)"
    },
    {
      "1026": "# taskqueue.add(url=\"/notifications/hire/triggers\", method=\"GET\", params={\"triggerType\": self.trigger, \"jobId\": job_id,"
    },
    {
      "1289": "# taskqueue.add(url='/hire/applicants/gmail/message/send',method=\"POST\",payload=json.dumps(send_dict))"
    },
    {
      "1295": "taskqueue.add(url='/notifications/hire/triggers',"
    },
    {
      "1451": "taskqueue.add(url=\"/hire/jobs/\"+query_results[0].jobId.urlsafe()+\"/task/close\",method=\"GET\",params={\"currentUser\":self.user_key.get().userEmail})"
    },
    {
      "1463": "taskqueue.add(url=\"/users/addmanual/task\", method=\"POST\",payload=json.dumps(onboard_dict))"
    },
    {
      "1466": "taskqueue.add(url='/notifications/hire/triggers',"
    },
    {
      "1471": "taskqueue.add(url='/notifications/hire/triggers',"
    },
    {
      "1503": "taskqueue.add(url=\"/hire/jobs/\"+query_results[0].jobId.urlsafe()+\"/reopen\",method=\"GET\")"
    },
    {
      "1523": "taskqueue.add(url=\"/onboarding/updateonboarduserdetail/task\", method=\"PUT\", payload=json.dumps(onboard_dict))"
    },
    {
      "1526": "taskqueue.add(url='/notifications/hire/triggers',"
    },
    {
      "1531": "taskqueue.add(url='/notifications/hire/triggers',"
    },
    {
      "1686": "taskqueue.add(url='/hire/offers/'+offer_link_id+'/task/acceptancestatus', payload=json.dumps(dropout_dict), method=\"PUT\")"
    }
  ],
  "happierWork\\app\\modules\\hire\\referral\\py\\views_referrals.py": [
    {
      "784": "taskqueue.add(url='/notifications/hire/triggers',"
    }
  ],
  "happierWork\\app\\modules\\hire\\resourceRequisition\\py\\views_requisition.py": [
    {
      "507": "taskqueue.add(url=\"/notifications/new/hire/triggers\","
    },
    {
      "586": "taskqueue.add(url=\"/resourcerequest/\" + str(self.discussion_id) + \"/invite\","
    },
    {
      "1115": "taskqueue.add(url=\"/resourcerequest/requisitions/createdoc\",method=\"GET\",params={})"
    }
  ],
  "happierWork\\app\\modules\\perform\\py\\activities\\views_activities.py": [
    {
      "200": "taskqueue.add(url = \"/request/init/add-check-in\", method=\"POST\","
    }
  ],
  "happierWork\\app\\modules\\perform\\py\\admin\\utils_admin.py": [
    {
      "157": "taskqueue.add(url=\"/perform/objectives/task/list\",method=\"PUT\",payload=json.dumps({\"oldFromDate\":getHRMSDate(current_from_date),\"oldToDate\":getHRMSDate(current_to_date),\"newFromDate\":getHRMSDate(new_from_date),\"newToDate\":getHRMSDate(new_to_date),\"okrType\":objective_type}))# changes the fromDate and toDate for all the published objectives"
    },
    {
      "158": "taskqueue.add(url=\"/perform/objectives/update/user/score\",method=\"PUT\",payload=json.dumps({\"oldFromDate\":getHRMSDate(current_from_date),\"oldToDate\":getHRMSDate(current_to_date),\"newFromDate\":getHRMSDate(new_from_date),\"newToDate\":getHRMSDate(new_to_date),\"okrType\":objective_type}))#change cycle of ComputedScore Model where computed score of OKR for user is stored"
    },
    {
      "159": "taskqueue.add(url=\"/perform/objectives/task/list\", method=\"PUT\", payload=json.dumps({\"oldFromDate\": getHRMSDate(current_from_date), \"oldToDate\": getHRMSDate(current_to_date),\"newFromDate\": getHRMSDate(new_from_date), \"newToDate\": getHRMSDate(new_to_date),\"okrType\": \"GROUP\"}))#changes cycle of all the group OKR cycle"
    },
    {
      "160": "taskqueue.add(url=\"/perform/competency/cycle/update\", method=\"POST\", payload=json.dumps("
    },
    {
      "165": "taskqueue.add(url=\"/perform/review/cycle/update\", method=\"PUT\", payload=json.dumps("
    },
    {
      "172": "taskqueue.add(url=\"/perform/plan/cycle/update\", method=\"PUT\", payload=json.dumps("
    },
    {
      "179": "taskqueue.add(url=\"/perform/plan/profile/cycle/update\", method=\"PUT\", payload=json.dumps("
    },
    {
      "186": "taskqueue.add(url=\"/perform/observation/cycle/update\", method=\"PUT\", payload=json.dumps("
    },
    {
      "192": "taskqueue.add(url=\"/perform/portfolio/cycle/update\", method=\"PUT\", payload=json.dumps("
    },
    {
      "200": "taskqueue.add(url=\"/perform/objectives/task/list\", method=\"PUT\", payload=json.dumps({\"oldFromDate\": getHRMSDate(current_from_date), \"oldToDate\": getHRMSDate(current_to_date),\"newFromDate\": getHRMSDate(new_from_date), \"newToDate\": getHRMSDate(new_to_date),\"okrType\": objective_type}))# changes the fromDate and toDate for all the published organisation objectives"
    }
  ],
  "happierWork\\app\\modules\\perform\\py\\admin\\views_admin.py": [
    {
      "150": "taskqueue.add(url=\"/perform/cron/update/bucket\", method=\"GET\","
    },
    {
      "152": "taskqueue.add(url=\"/perform/cron/update/group\", method=\"GET\","
    },
    {
      "154": "taskqueue.add(url=\"/perform/cron/update/user/competency/activities\", method=\"GET\","
    },
    {
      "176": "taskqueue.add(url=\"/perform/admin/okrCycleEndReminder\", method=\"GET\", params={\"namespace\":json_input[\"namespace\"], \"daysToCycleEnd\":days_to_cycle_end, \"okrType\":\"Individual\"})"
    },
    {
      "182": "taskqueue.add(url=\"/perform/admin/okrCycleEndReminder\", method=\"GET\","
    },
    {
      "202": "taskqueue.add(url=\"/perform/review/user/auto/setup\", method=\"GET\",params={\"namespace\":json_input[\"namespace\"]})#setting up the reviews meeting for today"
    },
    {
      "203": "taskqueue.add(url=\"/perform/manageusers\", method=\"GET\",params={\"namespace\":json_input[\"namespace\"]})#auto managing the users in the group"
    },
    {
      "205": "taskqueue.add(url=\"/perform/planprofile/refreshdocuments\", method=\"GET\", params={\"ns\":json_input[\"namespace\"]})"
    },
    {
      "206": "# taskqueue.add(url=\"/perform/appraisalkit/cron/reminder/notification\", method=\"GET\",params={\"namespace\":json_input[\"namespace\"],\"days\":5})"
    },
    {
      "207": "# taskqueue.add(url=\"/perform/appraisalkit/update\", method=\"GET\",params={\"namespace\":json_input[\"namespace\"]}) #starting appraisal request due on this date"
    },
    {
      "518": "taskqueue.add(url='/notifications/perform/triggers',method = \"POST\",payload= json.dumps({\"okrType\": type, \"usersList\":users_list,\"oldFromDate\":json_input[\"oldFromDate\"],\"oldToDate\":json_input[\"oldToDate\"],\"newFromDate\":json_input[\"newFromDate\"],\"newToDate\":json_input[\"newToDate\"],\"triggerName\":\"PERFORM_CYCLE_CHANGE\"}))"
    },
    {
      "521": "taskqueue.add(url=\"/perform/objectives/task/list\",method=\"PUT\",payload=json.dumps(json_input))"
    },
    {
      "555": "taskqueue.add(url=\"/notifications/perform/triggers\", method=\"POST\", payload=json.dumps({\"usersList\":users_list, \"triggerName\":\"OBJECTIVE_CYCLE_END_REMINDER\", \"okrType\":okr_type, \"daysToCycleEnd\":json_input[\"daysToCycleEnd\"]}))"
    },
    {
      "559": "taskqueue.add(url=\"/perform/admin/okrCycleEndReminder\", method=\"GET\", params=json_input)"
    },
    {
      "676": "taskqueue.add(url = \"/perform/appraisal/kit/update/appraisal/company/financial/cycle\", method = \"GET\", params = {\"appraisalProfileId\":a_appraisal_kit.key.urlsafe()})"
    },
    {
      "718": "taskqueue.add(url = '/perform/appraisalkit/letter/config',method = \"PUT\",payload = json.dumps({\"loggedInUser\":getgcu(self),\"appraisalId\":admin_setting.key.urlsafe()}))"
    },
    {
      "761": "taskqueue.add(url='/perform/appraisalkit/letter/config', method=\"PUT\", payload=json.dumps("
    },
    {
      "766": "taskqueue.add(url=\"/perform/appraisal/kit/cron/update/approvalstructure\", method=\"GET\","
    },
    {
      "769": "taskqueue.add(url=\"/perform/appraisal/kit/update/user/appraisal/cycle\", method=\"GET\","
    },
    {
      "773": "taskqueue.add(url=\"/perform/appraisal/kit/update/user/eligibility/months\", method=\"GET\", params={\"appraisalProfileId\": list_object_dict_list[0][0][\"id\"]})"
    },
    {
      "867": "taskqueue.add(url = \"/perform/appraisal/kit/admin/bulk/apply/user\" , method = \"POST\", payload = json.dumps({\"appraisalId\":kwargs[\"appraisalId\"],\"usersKeyList\":kwargs[\"usersKeyList\"],\"appliedToUser\":applied_users,\"toUser\":getgcu(self)}))"
    },
    {
      "869": "# taskqueue.add(url = \"/perform/appraisalkit/update/old/user/kit\", method = \"POST\", payload = json.dumps({\"appraisalId\":kwargs[\"appraisalId\"],\"usersKeyList\":kwargs[\"usersKeyList\"]}))"
    },
    {
      "901": "#     taskqueue.add(url = \"/perform/appraisalkit/update/old/user/kit\", method = \"POST\", payload = json.dumps({\"appraisalId\":kwargs[\"appraisalId\"],\"usersKeyList\":kwargs[\"usersKeyList\"]}))"
    },
    {
      "917": "taskqueue.add(url=\"/perform/appraisal/kit/admin/bulk/apply/user\", method=\"POST\", payload=json.dumps({\"appraisalId\": kwargs[\"appraisalId\"], \"usersKeyList\": kwargs[\"usersKeyList\"],"
    },
    {
      "923": "# taskqueue.add(url=\"/perform/appraisalkit/update/old/user/kit\", method=\"POST\", payload=json.dumps({\"appraisalId\": kwargs[\"appraisalId\"], \"usersKeyList\": kwargs[\"usersKeyList\"]}))"
    },
    {
      "926": "taskqueue.add(url=\"/perform/appraisal/kit/admin/bulk/apply/user\", method=\"PUT\","
    },
    {
      "1140": "taskqueue.add(url=\"/notifications/sendmail/trigger/setup\",method=\"POST\",payload = json.dumps({\"triggerName\":self.trigger_name_list,\"namespace\":kwargs[\"namespace\"]}))"
    },
    {
      "1141": "taskqueue.add(url=\"/perform/appraisal/company/folder\", method=\"PUT\")"
    },
    {
      "1542": "taskqueue.add(url=\"/perform/admin/plan/user/update\", method=\"GET\","
    },
    {
      "1566": "taskqueue.add(url=\"/perform/admin/plan/user/update\", method=\"GET\","
    },
    {
      "1827": "taskqueue.add(url=\"/perform/plan/cycle/update\",method=\"PUT\",payload=json.dumps(json_input))"
    },
    {
      "1863": "taskqueue.add(url=\"/perform/plan/profile/cycle/update\",method=\"PUT\",payload=json.dumps(json_input))"
    },
    {
      "1897": "taskqueue.add(url=\"/perform/observation/cycle/update\",method=\"PUT\",payload=json.dumps(json_input))"
    },
    {
      "1933": "taskqueue.add(url=\"/perform/portfolio/cycle/update\", method=\"PUT\", payload=json.dumps(json_input))"
    },
    {
      "1966": "taskqueue.add(url=\"/documents/visibility-update\", method=\"POST\","
    }
  ],
  "happierWork\\app\\modules\\perform\\py\\appraisalKit\\utils_appraisalLetter.py": [
    {
      "92": "taskqueue.add(url = '/perform/appraisalkit/generate/task/letter', method = \"POST\",payload = json.dumps({\"appraisalId\":appraisal_id,\"loggedInUser\":logged_in_user,\"status\":status, \"statusUniqueId\":appraisal_status_string}))"
    },
    {
      "94": "taskqueue.add(url='/perform/appraisalkit/generate/task/letter', method=\"POST\", payload=json.dumps("
    }
  ],
  "happierWork\\app\\modules\\perform\\py\\appraisalKit\\utils_requestHandler.py": [
    {
      "45": "taskqueue.add(url=\"/request/init/appraisalkit\", method=\"POST\", params={"
    },
    {
      "80": "taskqueue.add(url='/perform/appraisalkit/task/user', method='PUT', payload=json.dumps("
    }
  ],
  "happierWork\\app\\modules\\perform\\py\\appraisalKit\\views_appraisalkit.py": [
    {
      "769": "taskqueue.add(url=\"/perform/appraisal/kit/cron/update/approvalstructure\", method=\"GET\","
    },
    {
      "832": "taskqueue.add(url=\"/perform/appraisal/kit/update/user/appraisal/cycle\", method=\"GET\","
    },
    {
      "900": "taskqueue.add(url=\"/perform/appraisal/kit/update/user/eligibility/months\", method=\"GET\","
    },
    {
      "947": "taskqueue.add(url=\"/perform/appraisal/kit/update/appraisal/company/financial/cycle\", method=\"GET\","
    },
    {
      "1051": "taskqueue.add(url=\"/notifications/perform/triggers\", method=\"GET\","
    }
  ],
  "happierWork\\app\\modules\\perform\\py\\appraisalKit\\views_appraisalLetter.py": [
    {
      "408": "taskqueue.add(url='/perform/appraisal/letter/status/check', method=\"GET\","
    },
    {
      "413": "taskqueue.add(url='/perform/appraisal/bulk/letter/generation/task', method=\"PUT\", payload=json.dumps(json_input))"
    },
    {
      "436": "taskqueue.add(url='/perform/appraisal/letter/status/check', method=\"GET\","
    },
    {
      "450": "taskqueue.add(url='/perform/appraisal/bulk/letter/generation/task', method=\"PUT\","
    },
    {
      "577": "taskqueue.add(url=\"/notifications/perform/triggers\",method=\"GET\", params={\"letterLinks\":json.dumps(letter_links), \"userKey\":user_appraisal_obj.userKey.urlsafe(), \"triggerName\":\"SEND_APPRAISAL_LETTER\", \"appraisalId\":user_appraisal_obj.key.urlsafe(), \"statusUniqueId\":status_unique_id})"
    },
    {
      "579": "taskqueue.add(url='/perform/appraisal/link/document', method=\"PUT\", payload=json.dumps("
    },
    {
      "588": "taskqueue.add(url='/perform/appraisal/letter/status/check', method=\"GET\","
    },
    {
      "593": "taskqueue.add(url=\"/perform/send/appraisal/letter/task\", method=\"PUT\", payload=json.dumps(json_input))"
    },
    {
      "639": "taskqueue.add(url=\"/notifications/perform/triggers\",method=\"GET\", params={\"letterLinks\":json.dumps(letter_links), \"userKey\":user_appraisal_obj.userKey.urlsafe(), \"triggerName\":\"SEND_APPRAISAL_LETTER\", \"appraisalId\":user_appraisal_obj.key.urlsafe(), \"statusUniqueId\":status_unique_id})"
    },
    {
      "643": "taskqueue.add(url='/perform/appraisal/letter/status/check', method=\"GET\","
    },
    {
      "647": "taskqueue.add(url='/perform/appraisal/link/document', method=\"PUT\",payload=json.dumps({\"letterLinks\":json.dumps(letter_links), \"appraisalId\":user_appraisal_obj.key.urlsafe(), \"currentUser\":getEmailFromKey(logged_in_user_key)}))"
    },
    {
      "651": "taskqueue.add(url=\"/perform/send/appraisal/letter/task\", method=\"PUT\", payload=json.dumps(json_input))"
    },
    {
      "720": "taskqueue.add(url='/hire/applicants/gmail/message/task/send', payload=json.dumps(mail_dict), method=\"POST\")"
    },
    {
      "740": "taskqueue.add(url=\"/notifications/perform/triggers\", method=\"GET\","
    },
    {
      "747": "taskqueue.add(url='/perform/appraisal/letter/status/check', method=\"GET\", params=json_input, countdown=15)"
    },
    {
      "798": "taskqueue.add(url='/documents/visibility-update', method=\"PUT\","
    },
    {
      "814": "taskqueue.add(url=\"/documents/data-set\", method=\"PUT\", payload=json.dumps(outputJson))"
    }
  ],
  "happierWork\\app\\modules\\perform\\py\\careerPath\\views_careerPath.py": [
    {
      "53": "taskqueue.add(url='/perform/careerpath/list', method=\"POST\", payload=json.dumps(self.json_input))"
    }
  ],
  "happierWork\\app\\modules\\perform\\py\\common\\upload_document.py": [
    {
      "105": "taskqueue.add(url=\"/perform/master/data\", method=\"POST\", payload=json.dumps({\"csvObjKey\": doc_obj.key.urlsafe(), \"offset\": 0,\"loggedInUser\":getgcu(self), \"uniqueId\":unique_id}))"
    },
    {
      "222": "taskqueue.add(url=\"/perform/master/data\", method=\"POST\","
    },
    {
      "226": "taskqueue.add(url= \"/perform/admin/plan/user/update\", method = \"GET\",params = {\"namespace\":namespace_manager.get_namespace()})"
    }
  ],
  "happierWork\\app\\modules\\perform\\py\\common\\utils.py": [
    {
      "556": "taskqueue.add(url = url, method = \"GET\", params = params)"
    },
    {
      "558": "taskqueue.add(url = url, method = method.upper(), payload = json.dumps(params) )"
    }
  ],
  "happierWork\\app\\modules\\perform\\py\\common\\views_cron.py": [
    {
      "46": "taskqueue.add(url=\"/perform/cron/update/bucket\", method=\"GET\","
    },
    {
      "70": "taskqueue.add(url=\"/perform/cron/update/group\", method=\"GET\","
    },
    {
      "121": "taskqueue.add(url=\"/perform/cronadminupdate\", method=\"GET\","
    },
    {
      "184": "taskqueue.add(url=\"/perform/cron/update/user/competency/activities\", method=\"GET\","
    },
    {
      "215": "taskqueue.add(url=\"/perform/objectives/update/user/score\", method=\"PUT\", payload=json.dumps(json_input))"
    },
    {
      "304": "taskqueue.add(url =\"/perform/appraisalkit/task/update\",method = \"GET\",params = {\"nextCursor\":next_cursor,\"namespace\":kwargs[\"namespace\"], \"setDate\":kwargs[\"setDate\"]})"
    },
    {
      "306": "taskqueue.add(url=\"/perform/appraisalkit/task/update\", method=\"GET\","
    },
    {
      "344": "taskqueue.add(url = \"/notifications/perform/triggers\", method = \"GET\",params = {\"appraisalId\":a_quer_obj.key.urlsafe(),\"triggerName\":\"APPRAISAL_KIT_REMINDER\",\"type\":\"OVERDUE\"})"
    },
    {
      "354": "taskqueue.add(url=\"/notifications/perform/triggers\", method=\"GET\","
    },
    {
      "360": "taskqueue.add(url = '/perform/appraisalkit/cron/reminder/notification', method = \"GET\",params = kwargs)"
    },
    {
      "377": "taskqueue.add(url=a_call, method=\"GET\", params={\"namespace\": name_space})"
    }
  ],
  "happierWork\\app\\modules\\perform\\py\\competencies\\views_competency.py": [
    {
      "39": "taskqueue.add(url=\"/perform/task/create-document\", method=\"POST\", payload=json.dumps({\"wordsList\":[a_competency[\"description\"]for a_competency in self.competencies_list],\"indexName\":\"CompetenciesSkill\"})) #to provide partial search, competencies are stored in document search"
    },
    {
      "62": "taskqueue.add(url=\"/perform/task/create-document\", method=\"POST\","
    },
    {
      "268": "taskqueue.add(url=\"/notifications/perform/triggers\", method=\"GET\","
    },
    {
      "376": "taskqueue.add(url=\"/notifications/perform/triggers\",method = \"GET\",params = {\"commentId\":comment_key.urlsafe(),\"triggerName\":\"COMPETENCY_COMMENT_ADDED\"})"
    },
    {
      "520": "taskqueue.add(url='/perform/competency/cycle/update',method = \"POST\",payload = json.dumps(json_input))"
    }
  ],
  "happierWork\\app\\modules\\perform\\py\\group\\views_group.py": [
    {
      "217": "taskqueue.add(url = \"/perform/task/advancegroupsearch\",method=\"PUT\",payload = json.dumps(data))# add group in document search for partial search"
    },
    {
      "231": "taskqueue.add(url = \"/perform/group/manage/access\",method=\"PUT\",payload = json.dumps({\"newMembers\":json_input[\"members\"],\"oldMembers\":[getEmailFromKey(a_user.urlsafe()) for a_user in group_obj.members],\"groupId\":group_obj.key.urlsafe()}))#updating view and edit access in objectives for the group"
    }
  ],
  "happierWork\\app\\modules\\perform\\py\\lessonPlans\\utils_lessonPlans.py": [
    {
      "59": "taskqueue.add(url=\"/request/init/plans\", method=\"POST\", params={"
    }
  ],
  "happierWork\\app\\modules\\perform\\py\\lessonPlans\\views_lessonPlan.py": [
    {
      "692": "taskqueue.add(url=\"/perform/actioner/portfolio/list\", method=\"PUT\", payload=json.dumps("
    },
    {
      "860": "taskqueue.add(url=\"/notifications/perform/triggers\", method=\"GET\","
    },
    {
      "863": "taskqueue.add(url=\"/perform/actioner/portfolio/list\", method=\"PUT\", payload=json.dumps("
    },
    {
      "898": "taskqueue.add(url=\"/perform/planprofile/refreshdocuments\", method=\"GET\", params={\"ns\": aNamespace})"
    },
    {
      "942": "taskqueue.add(url='/perform/planprofile/refreshdocuments',"
    },
    {
      "1026": "taskqueue.add(url='/perform/plan/profile/update/script', method=\"PUT\", payload=json.dumps("
    },
    {
      "1082": "taskqueue.add(url=\"/perform/portfolio/actioners/script\", method=\"PUT\", payload=json.dumps(json_input))"
    },
    {
      "1154": "taskqueue.add(url=\"/perform/upload/plan/docs\", method=\"PUT\","
    },
    {
      "1187": "taskqueue.add(url='/hire/applicants/gmail/message/task/send', payload=json.dumps(mail_dict), method=\"POST\")"
    },
    {
      "1440": "taskqueue.add(url='/perform/plan/task/completion', method=\"PUT\","
    },
    {
      "1463": "taskqueue.add(url=\"/perform/plan/script\", method=\"PUT\", params={\"namespace\": namespace, \"total_count\":total_count, \"statusId\":status_id,\"current_user\":logged_in_user},"
    },
    {
      "1469": "taskqueue.add(url='/perform/plan/updatestatus', method=\"PUT\", payload=json.dumps(param_dict))"
    },
    {
      "1498": "taskqueue.add(url='/notifications/perform/triggers', method=\"POST\", payload=json.dumps(param_dict))"
    },
    {
      "1562": "taskqueue.add(url='/perform/plan/script', method=\"PUT\", payload=json.dumps(plan_json), params={\"total_count\":len(curr_data),\"statusId\":status_key.urlsafe()})"
    }
  ],
  "happierWork\\app\\modules\\perform\\py\\manageUserGroup\\views_manager_users.py": [
    {
      "125": "taskqueue.add(url=\"/perform/manageusers\", method=\"PUT\", payload=json.dumps({\"namespace\":namespace_manager.get_namespace()}))"
    },
    {
      "158": "taskqueue.add(url=\"/perform/manageusers\", method=\"PUT\",payload=json.dumps({\"nextCursor\": next_cursor}))"
    }
  ],
  "happierWork\\app\\modules\\perform\\py\\observations\\utils_observations.py": [
    {
      "60": "taskqueue.add(url=\"/request/init/observation-time\", method=\"POST\", params={"
    },
    {
      "134": "taskqueue.add(url=\"/request/init/observation-feedback\", method=\"POST\", params={"
    }
  ],
  "happierWork\\app\\modules\\perform\\py\\observations\\views_observations.py": [
    {
      "346": "taskqueue.add(url=\"/perform/observation/event\", method=\"PUT\", payload=json.dumps(calendar_dict))"
    },
    {
      "525": "taskqueue.add(url=\"/notifications/perform/triggers\", method=\"GET\","
    },
    {
      "546": "taskqueue.add(url=\"/perform/actioner/portfolio/list\", method=\"PUT\", payload=json.dumps("
    },
    {
      "598": "taskqueue.add(url=\"/perform/actioner/portfolio/list\", method=\"PUT\", payload=json.dumps("
    },
    {
      "663": "taskqueue.add(url=\"/notifications/perform/triggers\", method=\"GET\","
    },
    {
      "667": "taskqueue.add(url=\"/perform/actioner/portfolio/list\", method=\"PUT\", payload=json.dumps("
    },
    {
      "701": "taskqueue.add(url=\"/perform/observation/shareObservationVideoLink\", method=\"POST\", payload=json.dumps(payload))"
    },
    {
      "710": "taskqueue.add(url=\"/perform/actioner/portfolio/list\", method=\"PUT\", payload=json.dumps("
    },
    {
      "925": "taskqueue.add(url=\"/perform/observation/updatestage\", method=\"GET\", params={\"ns\":aNamespace})"
    },
    {
      "986": "taskqueue.add(url=\"/notifications/perform/triggers\", method=\"GET\","
    },
    {
      "1017": "taskqueue.add(url=\"/perform/actioner/portfolio/list\", method=\"PUT\", payload=json.dumps("
    },
    {
      "1029": "taskqueue.add(url=\"/notifications/perform/triggers\", method=\"GET\","
    }
  ],
  "happierWork\\app\\modules\\perform\\py\\okr\\views_okr.py": [
    {
      "183": "taskqueue.add(url=\"/perform/task/create-document\", method=\"POST\", payload=json.dumps("
    },
    {
      "298": "taskqueue.add(url=\"/perform/task/create-document\", method=\"POST\", payload=json.dumps("
    },
    {
      "534": "taskqueue.add(url='/perform/request/handler', method=\"POST\","
    },
    {
      "721": "taskqueue.add(url=\"/perform/task/create-document\", method=\"POST\", payload=json.dumps("
    }
  ],
  "happierWork\\app\\modules\\perform\\py\\okr\\views_request_handler.py": [
    {
      "248": "taskqueue.add(url=\"/request/init/publishobjective\", method=\"POST\", params={\"data\":json.dumps({\"initData\":request_json[\"data\"][\"initData\"],\"requestName\":\"Publish Objective\"}),\"requestType\":\"OTHER\",\"gcu\":getEmailFromKey(json_input[\"gcu\"])})"
    }
  ],
  "happierWork\\app\\modules\\perform\\py\\patches\\views_patches.py": [
    {
      "87": "taskqueue.add(url=\"/perform/plan/patches/delete\", method=\"PUT\", payload=json.dumps(json_input))"
    },
    {
      "91": "taskqueue.add(url=\"/perform/plan/patches/delete\", method=\"PUT\", payload=json.dumps(json_input))"
    },
    {
      "92": "# taskqueue.add(url='/perform/patches/deletedocuments', method='GET',"
    },
    {
      "115": "taskqueue.add(url=\"/perform/plan/patches/delete\", method=\"POST\", payload=json.dumps(json_input))"
    },
    {
      "119": "taskqueue.add(url=\"/perform/plan/patches/delete\", method=\"POST\", payload=json.dumps(json_input))"
    },
    {
      "120": "taskqueue.add(url='/perform/patches/deletedocuments', method='GET', params={\"namespace\":json_input[\"namespace\"], \"model\":\"UserPlanProfile\"})"
    },
    {
      "211": "taskqueue.add(url=\"/perform/patches/delete/appraisalkit\", method=\"PUT\", payload=json.dumps(json_input))"
    },
    {
      "215": "taskqueue.add(url=\"/perform/patches/delete/appraisalkit\", method=\"PUT\", payload=json.dumps(json_input))"
    },
    {
      "247": "taskqueue.add(url=\"/perform/appraisal/kit/admin/bulk/apply/user/task\", method=\"POST\", payload=json.dumps({\"appraisalId\":appraisal_id, \"appliedToUser\":applied_to_user_list, \"usersKeyList\":user_key_list,\"toUser\":[\"milind.sharma@searcelabs.com\"]}))"
    },
    {
      "250": "taskqueue.add(url='/perform/apply/appraisal/profile/task', method=\"PUT\", payload=json.dumps(json_input))"
    },
    {
      "279": "taskqueue.add(url='/perform/appraisal/config/add/user/emails', method=\"PUT\", payload=json.dumps(json_input))"
    }
  ],
  "happierWork\\app\\modules\\perform\\py\\reviews\\utils_review.py": [
    {
      "266": "# taskqueue.add(url=\"/notifications/perform/triggers\", method=\"POST\","
    }
  ],
  "happierWork\\app\\modules\\perform\\py\\reviews\\views_review.py": [
    {
      "295": "taskqueue.add(url=\"/notifications/perform/triggers\", method=\"GET\", params={\"triggerName\":\"REQUEST_REVIEW_INITIATED\", \"reviewId\":key.urlsafe()})"
    },
    {
      "299": "taskqueue.add(url=\"/notifications/perform/triggers\", method=\"GET\","
    },
    {
      "336": "taskqueue.add(url=\"/notifications/perform/triggers\", method=\"GET\","
    },
    {
      "340": "taskqueue.add(url=\"/perform/review/task/googlecalendar\", method=\"POST\", payload=json.dumps({\"userReviewKey\":json_input[\"userReviewKey\"]}))"
    },
    {
      "350": "#     taskqueue.add(url=\"/perform/review/task/googlecalendar\", method=\"POST\", payload=json.dumps({\"userReviewKey\":json_input[\"userReviewKey\"]}))"
    },
    {
      "356": "taskqueue.add(url=\"/notifications/perform/triggers\", method=\"GET\","
    },
    {
      "390": "taskqueue.add(url=\"/notifications/perform/triggers\", method=\"GET\","
    },
    {
      "501": "taskqueue.add(url=\"/perform/review/task/googlecalendar\", method=\"POST\", payload=json.dumps({\"userReviewKey\":key.urlsafe()}))"
    },
    {
      "508": "# taskqueue.add(url=\"/notifications/perform/triggers\", method=\"GET\","
    },
    {
      "610": "taskqueue.add(url=\"/notifications/perform/triggers\", method=\"GET\","
    },
    {
      "749": "taskqueue.add(url=\"/perform/review/user/reschedule/task\", method=\"POST\","
    },
    {
      "774": "taskqueue.add(url=\"/notifications/perform/triggers\", method=\"GET\","
    },
    {
      "870": "taskqueue.add(url=\"/notifications/perform/triggers\", method=\"GET\","
    },
    {
      "901": "taskqueue.add(url=\"/notifications/perform/triggers\", method=\"GET\","
    },
    {
      "909": "taskqueue.add(url=\"/notifications/perform/triggers\", method=\"GET\","
    },
    {
      "990": "taskqueue.add(url=\"/notifications/perform/triggers\", method=\"GET\","
    },
    {
      "995": "taskqueue.add(url=\"/notifications/perform/triggers\", method=\"GET\","
    },
    {
      "1176": "taskqueue.add(url=\"/notifications/perform/triggers\", method=\"POST\","
    }
  ],
  "happierWork\\app\\modules\\hire\\applicant\\Deduplication\\py\\views_deduplication.py": [
    {
      "484": "taskqueue.add(url='/hire/deduplication/mergetask', payload=json.dumps("
    },
    {
      "720": "taskqueue.add(url='/notifications/new/hire/triggers', params=params, method=\"GET\")"
    },
    {
      "940": "taskqueue.add(url='/hire/deduplication', params={'applicant': str(id)}, method=\"GET\")"
    }
  ]
}}